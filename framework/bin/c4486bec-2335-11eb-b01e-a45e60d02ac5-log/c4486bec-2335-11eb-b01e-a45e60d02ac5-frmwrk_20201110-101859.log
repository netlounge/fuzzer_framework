[INFO] [2020-11-10 10:19:00,330] [runner.py:122] [run] [10:19:00] Starting PROTOBUF Fuzzer session
[INFO] [2020-11-10 10:19:00,330] [search_file.py:40] [search_file] CONF - file dir: /Users/balazsattila/Env/fuzz_framework/framework/data/proto/example_v2
[DEBUG] [2020-11-10 10:19:00,330] [runner.py:61] [search_files] RAW proto files ['bike.proto', 'athlete.proto', 'route.proto', 'swim.proto', 'ski.proto', 'run.proto', 'query.proto']
[INFO] [2020-11-10 10:19:00,330] [search_file.py:40] [search_file] CONF - file dir: /Users/balazsattila/Env/fuzz_framework/framework/models/pb2/example_v2
[DEBUG] [2020-11-10 10:19:00,331] [runner.py:64] [search_files] Compiled proto files ['run_pb2.py', 'bike_pb2.py', 'query_pb2.py', 'athlete_pb2.py', 'ski_pb2.py', 'route_pb2.py', 'swim_pb2.py']
[INFO] [2020-11-10 10:19:00,331] [runner.py:90] [process_pb2] File run_pb2.py was not part of the inspection.
[INFO] [2020-11-10 10:19:00,331] [runner.py:90] [process_pb2] File bike_pb2.py was not part of the inspection.
[INFO] [2020-11-10 10:19:00,352] [parse_proto_api.py:40] [_message_types_by_name_keys] PPROT MSG - Message_types_by_name: ['Request', 'Response']
[INFO] [2020-11-10 10:19:00,353] [parse_proto_api.py:53] [_message_types_by_name_items] PPROT MSG - message_types_by_items: [('Request', <google.protobuf.pyext._message.MessageDescriptor object at 0x11008ccd0>), ('Response', <google.protobuf.pyext._message.MessageDescriptor object at 0x11203d9d0>)]
[INFO] [2020-11-10 10:19:00,353] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: id, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11008cc40>, containtin type Request
[INFO] [2020-11-10 10:19:00,353] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: accessToken, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11008cc10>, containtin type Request
[INFO] [2020-11-10 10:19:00,353] [parse_proto_api.py:235] [_recurse] Checked for msg field: queryActivities, object: QueryActivities
[DEBUG] [2020-11-10 10:19:00,353] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 6)]
[INFO] [2020-11-10 10:19:00,354] [parse_proto_api.py:235] [_recurse] Checked for msg field: bikeQuery, object: Query
[DEBUG] [2020-11-10 10:19:00,354] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 4)]
[INFO] [2020-11-10 10:19:00,354] [parse_proto_api.py:235] [_recurse] Checked for msg field: athlete, object: Query
[DEBUG] [2020-11-10 10:19:00,354] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 2)]
[INFO] [2020-11-10 10:19:00,354] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: id, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c7f0>, containtin type Query
[DEBUG] [2020-11-10 10:19:00,354] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 1), ('athlete', 5)]
[INFO] [2020-11-10 10:19:00,354] [parse_proto_api.py:235] [_recurse] Checked for msg field: user, object: User
[DEBUG] [2020-11-10 10:19:00,382] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 1), ('athlete', 5)]
[INFO] [2020-11-10 10:19:00,382] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: userName, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c5b0>, containtin type User
[DEBUG] [2020-11-10 10:19:00,382] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 1), ('athlete', 4), ('user', 2)]
[INFO] [2020-11-10 10:19:00,382] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: firstName, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c580>, containtin type User
[DEBUG] [2020-11-10 10:19:00,383] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 1), ('athlete', 4), ('user', 1)]
[INFO] [2020-11-10 10:19:00,383] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: lastName, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c5e0>, containtin type User
[DEBUG] [2020-11-10 10:19:00,383] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 1), ('athlete', 4), ('user', 0)]
[DEBUG] [2020-11-10 10:19:00,383] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 1), ('athlete', 4)]
[DEBUG] [2020-11-10 10:19:00,433] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(3, [('userName', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c5b0>), ('firstName', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c580>), ('lastName', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c5e0>)])
[INFO] [2020-11-10 10:19:00,433] [parse_proto_api.py:235] [_recurse] Checked for msg field: bikes, object: Bikes
[DEBUG] [2020-11-10 10:19:00,433] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 1), ('athlete', 4)]
[INFO] [2020-11-10 10:19:00,433] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: bikeName, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c5e0>, containtin type Bikes
[DEBUG] [2020-11-10 10:19:00,433] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 1), ('athlete', 3), ('bikes', 0)]
[DEBUG] [2020-11-10 10:19:00,433] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 1), ('athlete', 3)]
[DEBUG] [2020-11-10 10:19:00,434] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(2, [('bikeBrand', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c640>), ('bikeName', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c5e0>)])
[INFO] [2020-11-10 10:19:00,434] [parse_proto_api.py:235] [_recurse] Checked for msg field: shoes, object: Shoes
[DEBUG] [2020-11-10 10:19:00,434] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 1), ('athlete', 3)]
[INFO] [2020-11-10 10:19:00,434] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: shoeName, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c580>, containtin type Shoes
[DEBUG] [2020-11-10 10:19:00,434] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 1), ('athlete', 2), ('shoes', 0)]
[DEBUG] [2020-11-10 10:19:00,434] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 1), ('athlete', 2)]
[DEBUG] [2020-11-10 10:19:00,434] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(2, [('shoeBrand', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c520>), ('shoeName', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c580>)])
[INFO] [2020-11-10 10:19:00,435] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: weight, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c6d0>, containtin type Query
[DEBUG] [2020-11-10 10:19:00,435] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 1), ('athlete', 1)]
[INFO] [2020-11-10 10:19:00,435] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: age, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c8b0>, containtin type Query
[DEBUG] [2020-11-10 10:19:00,436] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 1), ('athlete', 0)]
[DEBUG] [2020-11-10 10:19:00,436] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 1)]
[DEBUG] [2020-11-10 10:19:00,436] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(6, [('id', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c7f0>), ('user', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c790>), ('bikes', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c730>), ('shoes', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c700>), ('weight', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c6d0>), ('age', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c8b0>)])
[INFO] [2020-11-10 10:19:00,436] [parse_proto_api.py:235] [_recurse] Checked for msg field: segment, object: Segment
[DEBUG] [2020-11-10 10:19:00,436] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 1)]
[INFO] [2020-11-10 10:19:00,436] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: segId, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c700>, containtin type Segment
[DEBUG] [2020-11-10 10:19:00,436] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 0), ('segment', 5)]
[INFO] [2020-11-10 10:19:00,436] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: name, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c6d0>, containtin type Segment
[DEBUG] [2020-11-10 10:19:00,437] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 0), ('segment', 4)]
[INFO] [2020-11-10 10:19:00,437] [parse_proto_api.py:235] [_recurse] Checked for msg field: route, object: Query
[DEBUG] [2020-11-10 10:19:00,437] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 0), ('segment', 4)]
[INFO] [2020-11-10 10:19:00,437] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: elevation, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c550>, containtin type Query
[DEBUG] [2020-11-10 10:19:00,437] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 0), ('segment', 3), ('route', 2)]
[INFO] [2020-11-10 10:19:00,437] [parse_proto_api.py:235] [_recurse] Checked for msg field: place, object: Place
[DEBUG] [2020-11-10 10:19:00,437] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 0), ('segment', 3), ('route', 2)]
[INFO] [2020-11-10 10:19:00,437] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: country, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110082520>, containtin type Place
[DEBUG] [2020-11-10 10:19:00,438] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 0), ('segment', 3), ('route', 1), ('place', 2)]
[INFO] [2020-11-10 10:19:00,438] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: city, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110082550>, containtin type Place
[DEBUG] [2020-11-10 10:19:00,438] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 0), ('segment', 3), ('route', 1), ('place', 1)]
[INFO] [2020-11-10 10:19:00,438] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: distance, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110082460>, containtin type Place
[DEBUG] [2020-11-10 10:19:00,438] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 0), ('segment', 3), ('route', 1), ('place', 0)]
[DEBUG] [2020-11-10 10:19:00,438] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 0), ('segment', 3), ('route', 1)]
[DEBUG] [2020-11-10 10:19:00,438] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(3, [('country', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082520>), ('city', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082550>), ('distance', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082460>)])
[INFO] [2020-11-10 10:19:00,438] [parse_proto_api.py:235] [_recurse] Checked for msg field: map, object: Map
[DEBUG] [2020-11-10 10:19:00,438] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 0), ('segment', 3), ('route', 1)]
[INFO] [2020-11-10 10:19:00,439] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: startAtLong, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110082550>, containtin type Map
[DEBUG] [2020-11-10 10:19:00,439] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 0), ('segment', 3), ('route', 0), ('map', 3)]
[INFO] [2020-11-10 10:19:00,439] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: endAtLong, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110082d00>, containtin type Map
[DEBUG] [2020-11-10 10:19:00,439] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 0), ('segment', 3), ('route', 0), ('map', 2)]
[INFO] [2020-11-10 10:19:00,439] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: height, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110082910>, containtin type Map
[DEBUG] [2020-11-10 10:19:00,439] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 0), ('segment', 3), ('route', 0), ('map', 1)]
[DEBUG] [2020-11-10 10:19:00,439] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 0), ('segment', 3), ('route', 0)]
[DEBUG] [2020-11-10 10:19:00,439] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(4, [('startAtLong', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082550>), ('endAtLong', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082d00>), ('height', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082910>), ('category', <google.protobuf.pyext._message.FieldDescriptor object at 0x1100826a0>)])
[DEBUG] [2020-11-10 10:19:00,440] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 0), ('segment', 3)]
[DEBUG] [2020-11-10 10:19:00,440] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(3, [('elevation', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c550>), ('place', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c4c0>), ('map', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c4f0>)])
[INFO] [2020-11-10 10:19:00,440] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: elevHigh, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c8e0>, containtin type Segment
[DEBUG] [2020-11-10 10:19:00,440] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 0), ('segment', 2)]
[INFO] [2020-11-10 10:19:00,440] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: elevLow, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c1f0>, containtin type Segment
[DEBUG] [2020-11-10 10:19:00,440] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 0), ('segment', 1)]
[INFO] [2020-11-10 10:19:00,440] [parse_proto_api.py:235] [_recurse] Checked for msg field: hearthData, object: Hearth
[DEBUG] [2020-11-10 10:19:00,440] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 0), ('segment', 1)]
[INFO] [2020-11-10 10:19:00,440] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: averageHearthRate, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110082df0>, containtin type Hearth
[DEBUG] [2020-11-10 10:19:00,441] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 0), ('segment', 0), ('hearthData', 2)]
[INFO] [2020-11-10 10:19:00,441] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: minHearthRate, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110082ee0>, containtin type Hearth
[DEBUG] [2020-11-10 10:19:00,441] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 0), ('segment', 0), ('hearthData', 1)]
[INFO] [2020-11-10 10:19:00,441] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: maxHearthRate, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110082460>, containtin type Hearth
[DEBUG] [2020-11-10 10:19:00,441] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 0), ('segment', 0), ('hearthData', 0)]
[DEBUG] [2020-11-10 10:19:00,441] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 0), ('segment', 0)]
[DEBUG] [2020-11-10 10:19:00,441] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(3, [('averageHearthRate', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082df0>), ('minHearthRate', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082ee0>), ('maxHearthRate', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082460>)])
[DEBUG] [2020-11-10 10:19:00,441] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 3), ('bikeQuery', 0)]
[DEBUG] [2020-11-10 10:19:00,441] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(6, [('segId', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c700>), ('name', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c6d0>), ('route', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c8b0>), ('elevHigh', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c8e0>), ('elevLow', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c1f0>), ('hearthData', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c790>)])
[DEBUG] [2020-11-10 10:19:00,441] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 3)]
[DEBUG] [2020-11-10 10:19:00,442] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(2, [('athlete', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c970>), ('segment', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c9a0>)])
[INFO] [2020-11-10 10:19:00,442] [parse_proto_api.py:235] [_recurse] Checked for msg field: swimQuery, object: Query
[DEBUG] [2020-11-10 10:19:00,442] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 3)]
[INFO] [2020-11-10 10:19:00,442] [parse_proto_api.py:235] [_recurse] Checked for msg field: athlete, object: Query
[DEBUG] [2020-11-10 10:19:00,442] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 2), ('swimQuery', 2)]
[INFO] [2020-11-10 10:19:00,442] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: id, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c790>, containtin type Query
[DEBUG] [2020-11-10 10:19:00,442] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 2), ('swimQuery', 1), ('athlete', 5)]
[INFO] [2020-11-10 10:19:00,442] [parse_proto_api.py:235] [_recurse] Checked for msg field: user, object: User
[DEBUG] [2020-11-10 10:19:00,442] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 2), ('swimQuery', 1), ('athlete', 5)]
[INFO] [2020-11-10 10:19:00,443] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: userName, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x1100829a0>, containtin type User
[DEBUG] [2020-11-10 10:19:00,443] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 2), ('swimQuery', 1), ('athlete', 4), ('user', 2)]
[INFO] [2020-11-10 10:19:00,443] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: firstName, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110082970>, containtin type User
[DEBUG] [2020-11-10 10:19:00,443] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 2), ('swimQuery', 1), ('athlete', 4), ('user', 1)]
[INFO] [2020-11-10 10:19:00,443] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: lastName, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x1100829d0>, containtin type User
[DEBUG] [2020-11-10 10:19:00,443] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 2), ('swimQuery', 1), ('athlete', 4), ('user', 0)]
[DEBUG] [2020-11-10 10:19:00,443] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 2), ('swimQuery', 1), ('athlete', 4)]
[DEBUG] [2020-11-10 10:19:00,443] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(3, [('userName', <google.protobuf.pyext._message.FieldDescriptor object at 0x1100829a0>), ('firstName', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082970>), ('lastName', <google.protobuf.pyext._message.FieldDescriptor object at 0x1100829d0>)])
[INFO] [2020-11-10 10:19:00,444] [parse_proto_api.py:235] [_recurse] Checked for msg field: bikes, object: Bikes
[DEBUG] [2020-11-10 10:19:00,444] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 2), ('swimQuery', 1), ('athlete', 4)]
[INFO] [2020-11-10 10:19:00,444] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: bikeName, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110082ac0>, containtin type Bikes
[DEBUG] [2020-11-10 10:19:00,444] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 2), ('swimQuery', 1), ('athlete', 3), ('bikes', 0)]
[DEBUG] [2020-11-10 10:19:00,444] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 2), ('swimQuery', 1), ('athlete', 3)]
[DEBUG] [2020-11-10 10:19:00,444] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(2, [('bikeBrand', <google.protobuf.pyext._message.FieldDescriptor object at 0x1100827c0>), ('bikeName', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082ac0>)])
[INFO] [2020-11-10 10:19:00,444] [parse_proto_api.py:235] [_recurse] Checked for msg field: shoes, object: Shoes
[DEBUG] [2020-11-10 10:19:00,444] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 2), ('swimQuery', 1), ('athlete', 3)]
[INFO] [2020-11-10 10:19:00,445] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: shoeName, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110082640>, containtin type Shoes
[DEBUG] [2020-11-10 10:19:00,445] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 2), ('swimQuery', 1), ('athlete', 2), ('shoes', 0)]
[DEBUG] [2020-11-10 10:19:00,445] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 2), ('swimQuery', 1), ('athlete', 2)]
[DEBUG] [2020-11-10 10:19:00,445] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(2, [('shoeBrand', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082580>), ('shoeName', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082640>)])
[INFO] [2020-11-10 10:19:00,445] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: weight, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110082ee0>, containtin type Query
[DEBUG] [2020-11-10 10:19:00,445] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 2), ('swimQuery', 1), ('athlete', 1)]
[INFO] [2020-11-10 10:19:00,446] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: age, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110082460>, containtin type Query
[DEBUG] [2020-11-10 10:19:00,446] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 2), ('swimQuery', 1), ('athlete', 0)]
[DEBUG] [2020-11-10 10:19:00,446] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 2), ('swimQuery', 1)]
[DEBUG] [2020-11-10 10:19:00,446] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(6, [('id', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c7f0>), ('user', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c8e0>), ('bikes', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c8b0>), ('shoes', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082460>), ('weight', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082df0>), ('age', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082ee0>)])
[INFO] [2020-11-10 10:19:00,446] [parse_proto_api.py:235] [_recurse] Checked for msg field: segment, object: Facility
[DEBUG] [2020-11-10 10:19:00,446] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 2), ('swimQuery', 1)]
[INFO] [2020-11-10 10:19:00,447] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: segId, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c1f0>, containtin type Facility
[DEBUG] [2020-11-10 10:19:00,447] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 2), ('swimQuery', 0), ('segment', 2)]
[INFO] [2020-11-10 10:19:00,447] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: name, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c8b0>, containtin type Facility
[DEBUG] [2020-11-10 10:19:00,447] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 2), ('swimQuery', 0), ('segment', 1)]
[INFO] [2020-11-10 10:19:00,447] [parse_proto_api.py:235] [_recurse] Checked for msg field: hearthData, object: Hearth
[DEBUG] [2020-11-10 10:19:00,447] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 2), ('swimQuery', 0), ('segment', 1)]
[INFO] [2020-11-10 10:19:00,447] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: averageHearthRate, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110082880>, containtin type Hearth
[DEBUG] [2020-11-10 10:19:00,448] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 2), ('swimQuery', 0), ('segment', 0), ('hearthData', 2)]
[INFO] [2020-11-10 10:19:00,448] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: minHearthRate, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110082ac0>, containtin type Hearth
[DEBUG] [2020-11-10 10:19:00,448] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 2), ('swimQuery', 0), ('segment', 0), ('hearthData', 1)]
[INFO] [2020-11-10 10:19:00,448] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: maxHearthRate, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110082760>, containtin type Hearth
[DEBUG] [2020-11-10 10:19:00,448] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 2), ('swimQuery', 0), ('segment', 0), ('hearthData', 0)]
[DEBUG] [2020-11-10 10:19:00,449] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 2), ('swimQuery', 0), ('segment', 0)]
[DEBUG] [2020-11-10 10:19:00,449] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(3, [('averageHearthRate', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082880>), ('minHearthRate', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082ac0>), ('maxHearthRate', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082760>)])
[DEBUG] [2020-11-10 10:19:00,450] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 2), ('swimQuery', 0)]
[DEBUG] [2020-11-10 10:19:00,450] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(3, [('segId', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c8b0>), ('name', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c8e0>), ('hearthData', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082460>)])
[DEBUG] [2020-11-10 10:19:00,450] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 2)]
[DEBUG] [2020-11-10 10:19:00,450] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(2, [('athlete', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c700>), ('segment', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c730>)])
[INFO] [2020-11-10 10:19:00,450] [parse_proto_api.py:235] [_recurse] Checked for msg field: runQuery, object: Query
[DEBUG] [2020-11-10 10:19:00,450] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 2)]
[INFO] [2020-11-10 10:19:00,451] [parse_proto_api.py:235] [_recurse] Checked for msg field: athlete, object: Query
[DEBUG] [2020-11-10 10:19:00,451] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 1), ('runQuery', 2)]
[INFO] [2020-11-10 10:19:00,451] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: id, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110082760>, containtin type Query
[DEBUG] [2020-11-10 10:19:00,451] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 1), ('runQuery', 1), ('athlete', 5)]
[INFO] [2020-11-10 10:19:00,451] [parse_proto_api.py:235] [_recurse] Checked for msg field: user, object: User
[DEBUG] [2020-11-10 10:19:00,451] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 1), ('runQuery', 1), ('athlete', 5)]
[INFO] [2020-11-10 10:19:00,524] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: userName, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110075fa0>, containtin type User
[DEBUG] [2020-11-10 10:19:00,524] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 1), ('runQuery', 1), ('athlete', 4), ('user', 2)]
[INFO] [2020-11-10 10:19:00,524] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: firstName, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110075f70>, containtin type User
[DEBUG] [2020-11-10 10:19:00,524] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 1), ('runQuery', 1), ('athlete', 4), ('user', 1)]
[INFO] [2020-11-10 10:19:00,524] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: lastName, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110075fd0>, containtin type User
[DEBUG] [2020-11-10 10:19:00,524] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 1), ('runQuery', 1), ('athlete', 4), ('user', 0)]
[DEBUG] [2020-11-10 10:19:00,524] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 1), ('runQuery', 1), ('athlete', 4)]
[DEBUG] [2020-11-10 10:19:00,524] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(3, [('userName', <google.protobuf.pyext._message.FieldDescriptor object at 0x110075fa0>), ('firstName', <google.protobuf.pyext._message.FieldDescriptor object at 0x110075f70>), ('lastName', <google.protobuf.pyext._message.FieldDescriptor object at 0x110075fd0>)])
[INFO] [2020-11-10 10:19:00,526] [parse_proto_api.py:235] [_recurse] Checked for msg field: bikes, object: Bikes
[DEBUG] [2020-11-10 10:19:00,526] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 1), ('runQuery', 1), ('athlete', 4)]
[INFO] [2020-11-10 10:19:00,527] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: bikeName, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110075d00>, containtin type Bikes
[DEBUG] [2020-11-10 10:19:00,527] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 1), ('runQuery', 1), ('athlete', 3), ('bikes', 0)]
[DEBUG] [2020-11-10 10:19:00,527] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 1), ('runQuery', 1), ('athlete', 3)]
[DEBUG] [2020-11-10 10:19:00,527] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(2, [('bikeBrand', <google.protobuf.pyext._message.FieldDescriptor object at 0x110075e20>), ('bikeName', <google.protobuf.pyext._message.FieldDescriptor object at 0x110075d00>)])
[INFO] [2020-11-10 10:19:00,527] [parse_proto_api.py:235] [_recurse] Checked for msg field: shoes, object: Shoes
[DEBUG] [2020-11-10 10:19:00,527] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 1), ('runQuery', 1), ('athlete', 3)]
[INFO] [2020-11-10 10:19:00,528] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: shoeName, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110075c40>, containtin type Shoes
[DEBUG] [2020-11-10 10:19:00,528] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 1), ('runQuery', 1), ('athlete', 2), ('shoes', 0)]
[DEBUG] [2020-11-10 10:19:00,528] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 1), ('runQuery', 1), ('athlete', 2)]
[DEBUG] [2020-11-10 10:19:00,528] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(2, [('shoeBrand', <google.protobuf.pyext._message.FieldDescriptor object at 0x110075b80>), ('shoeName', <google.protobuf.pyext._message.FieldDescriptor object at 0x110075c40>)])
[INFO] [2020-11-10 10:19:00,528] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: weight, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110075a00>, containtin type Query
[DEBUG] [2020-11-10 10:19:00,528] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 1), ('runQuery', 1), ('athlete', 1)]
[INFO] [2020-11-10 10:19:00,528] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: age, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110075c70>, containtin type Query
[DEBUG] [2020-11-10 10:19:00,528] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 1), ('runQuery', 1), ('athlete', 0)]
[DEBUG] [2020-11-10 10:19:00,528] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 1), ('runQuery', 1)]
[DEBUG] [2020-11-10 10:19:00,529] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(6, [('id', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082220>), ('user', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082880>), ('bikes', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082460>), ('shoes', <google.protobuf.pyext._message.FieldDescriptor object at 0x110075c70>), ('weight', <google.protobuf.pyext._message.FieldDescriptor object at 0x110075af0>), ('age', <google.protobuf.pyext._message.FieldDescriptor object at 0x110075a00>)])
[INFO] [2020-11-10 10:19:00,529] [parse_proto_api.py:235] [_recurse] Checked for msg field: segment, object: Segment
[DEBUG] [2020-11-10 10:19:00,529] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 1), ('runQuery', 1)]
[INFO] [2020-11-10 10:19:00,529] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: segId, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110075a00>, containtin type Segment
[DEBUG] [2020-11-10 10:19:00,529] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 1), ('runQuery', 0), ('segment', 5)]
[INFO] [2020-11-10 10:19:00,529] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: name, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110075d00>, containtin type Segment
[DEBUG] [2020-11-10 10:19:00,529] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 1), ('runQuery', 0), ('segment', 4)]
[INFO] [2020-11-10 10:19:00,529] [parse_proto_api.py:235] [_recurse] Checked for msg field: route, object: Query
[DEBUG] [2020-11-10 10:19:00,529] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 1), ('runQuery', 0), ('segment', 4)]
[INFO] [2020-11-10 10:19:00,530] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: elevation, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11009c1f0>, containtin type Query
[DEBUG] [2020-11-10 10:19:00,530] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 1), ('runQuery', 0), ('segment', 3), ('route', 2)]
[INFO] [2020-11-10 10:19:00,530] [parse_proto_api.py:235] [_recurse] Checked for msg field: place, object: Place
[DEBUG] [2020-11-10 10:19:00,530] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 1), ('runQuery', 0), ('segment', 3), ('route', 2)]
[INFO] [2020-11-10 10:19:00,530] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: country, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11009c610>, containtin type Place
[DEBUG] [2020-11-10 10:19:00,530] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 1), ('runQuery', 0), ('segment', 3), ('route', 1), ('place', 2)]
[INFO] [2020-11-10 10:19:00,530] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: city, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11009c5e0>, containtin type Place
[DEBUG] [2020-11-10 10:19:00,530] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 1), ('runQuery', 0), ('segment', 3), ('route', 1), ('place', 1)]
[INFO] [2020-11-10 10:19:00,531] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: distance, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11009c6d0>, containtin type Place
[DEBUG] [2020-11-10 10:19:00,531] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 1), ('runQuery', 0), ('segment', 3), ('route', 1), ('place', 0)]
[DEBUG] [2020-11-10 10:19:00,531] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 1), ('runQuery', 0), ('segment', 3), ('route', 1)]
[DEBUG] [2020-11-10 10:19:00,531] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(3, [('country', <google.protobuf.pyext._message.FieldDescriptor object at 0x11009c610>), ('city', <google.protobuf.pyext._message.FieldDescriptor object at 0x11009c5e0>), ('distance', <google.protobuf.pyext._message.FieldDescriptor object at 0x11009c6d0>)])
[INFO] [2020-11-10 10:19:00,531] [parse_proto_api.py:235] [_recurse] Checked for msg field: map, object: Map
[DEBUG] [2020-11-10 10:19:00,531] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 1), ('runQuery', 0), ('segment', 3), ('route', 1)]
[INFO] [2020-11-10 10:19:00,532] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: startAtLong, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11009c5e0>, containtin type Map
[DEBUG] [2020-11-10 10:19:00,534] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 1), ('runQuery', 0), ('segment', 3), ('route', 0), ('map', 3)]
[INFO] [2020-11-10 10:19:00,536] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: endAtLong, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11009c550>, containtin type Map
[DEBUG] [2020-11-10 10:19:00,538] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 1), ('runQuery', 0), ('segment', 3), ('route', 0), ('map', 2)]
[INFO] [2020-11-10 10:19:00,539] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: height, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11009c4c0>, containtin type Map
[DEBUG] [2020-11-10 10:19:00,540] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 1), ('runQuery', 0), ('segment', 3), ('route', 0), ('map', 1)]
[DEBUG] [2020-11-10 10:19:00,541] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 1), ('runQuery', 0), ('segment', 3), ('route', 0)]
[DEBUG] [2020-11-10 10:19:00,542] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(4, [('startAtLong', <google.protobuf.pyext._message.FieldDescriptor object at 0x11009c5e0>), ('endAtLong', <google.protobuf.pyext._message.FieldDescriptor object at 0x11009c550>), ('height', <google.protobuf.pyext._message.FieldDescriptor object at 0x11009c4c0>), ('category', <google.protobuf.pyext._message.FieldDescriptor object at 0x11009c520>)])
[DEBUG] [2020-11-10 10:19:00,542] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 1), ('runQuery', 0), ('segment', 3)]
[DEBUG] [2020-11-10 10:19:00,543] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(3, [('elevation', <google.protobuf.pyext._message.FieldDescriptor object at 0x11009c1f0>), ('place', <google.protobuf.pyext._message.FieldDescriptor object at 0x11009c130>), ('map', <google.protobuf.pyext._message.FieldDescriptor object at 0x11009c280>)])
[INFO] [2020-11-10 10:19:00,607] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: elevHigh, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110082ac0>, containtin type Segment
[DEBUG] [2020-11-10 10:19:00,608] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 1), ('runQuery', 0), ('segment', 2)]
[INFO] [2020-11-10 10:19:00,608] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: elevLow, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110082460>, containtin type Segment
[DEBUG] [2020-11-10 10:19:00,608] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 1), ('runQuery', 0), ('segment', 1)]
[INFO] [2020-11-10 10:19:00,608] [parse_proto_api.py:235] [_recurse] Checked for msg field: hearthData, object: Hearth
[DEBUG] [2020-11-10 10:19:00,608] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 1), ('runQuery', 0), ('segment', 1)]
[INFO] [2020-11-10 10:19:00,608] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: averageHearthRate, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11009c6d0>, containtin type Hearth
[DEBUG] [2020-11-10 10:19:00,608] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 1), ('runQuery', 0), ('segment', 0), ('hearthData', 2)]
[INFO] [2020-11-10 10:19:00,610] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: minHearthRate, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x112060a30>, containtin type Hearth
[DEBUG] [2020-11-10 10:19:00,610] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 1), ('runQuery', 0), ('segment', 0), ('hearthData', 1)]
[INFO] [2020-11-10 10:19:00,610] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: maxHearthRate, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x112060af0>, containtin type Hearth
[DEBUG] [2020-11-10 10:19:00,610] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 1), ('runQuery', 0), ('segment', 0), ('hearthData', 0)]
[DEBUG] [2020-11-10 10:19:00,610] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 1), ('runQuery', 0), ('segment', 0)]
[DEBUG] [2020-11-10 10:19:00,610] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(3, [('averageHearthRate', <google.protobuf.pyext._message.FieldDescriptor object at 0x11009c280>), ('minHearthRate', <google.protobuf.pyext._message.FieldDescriptor object at 0x112060af0>), ('maxHearthRate', <google.protobuf.pyext._message.FieldDescriptor object at 0x112060a30>)])
[DEBUG] [2020-11-10 10:19:00,611] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 1), ('runQuery', 0)]
[DEBUG] [2020-11-10 10:19:00,611] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(6, [('segId', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082460>), ('name', <google.protobuf.pyext._message.FieldDescriptor object at 0x110075af0>), ('route', <google.protobuf.pyext._message.FieldDescriptor object at 0x110075a00>), ('elevHigh', <google.protobuf.pyext._message.FieldDescriptor object at 0x110075d00>), ('elevLow', <google.protobuf.pyext._message.FieldDescriptor object at 0x110075c70>), ('hearthData', <google.protobuf.pyext._message.FieldDescriptor object at 0x11009c460>)])
[DEBUG] [2020-11-10 10:19:00,611] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 1)]
[DEBUG] [2020-11-10 10:19:00,611] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(2, [('athlete', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c8e0>), ('segment', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008c8b0>)])
[INFO] [2020-11-10 10:19:00,611] [parse_proto_api.py:235] [_recurse] Checked for msg field: skiQuery, object: Query
[DEBUG] [2020-11-10 10:19:00,611] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 1)]
[INFO] [2020-11-10 10:19:00,611] [parse_proto_api.py:235] [_recurse] Checked for msg field: athlete, object: Query
[DEBUG] [2020-11-10 10:19:00,611] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 2)]
[INFO] [2020-11-10 10:19:00,612] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: id, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110082880>, containtin type Query
[DEBUG] [2020-11-10 10:19:00,612] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 1), ('athlete', 5)]
[INFO] [2020-11-10 10:19:00,612] [parse_proto_api.py:235] [_recurse] Checked for msg field: user, object: User
[DEBUG] [2020-11-10 10:19:00,612] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 1), ('athlete', 5)]
[INFO] [2020-11-10 10:19:00,612] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: userName, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x112060dc0>, containtin type User
[DEBUG] [2020-11-10 10:19:00,612] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 1), ('athlete', 4), ('user', 2)]
[INFO] [2020-11-10 10:19:00,612] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: firstName, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x112060df0>, containtin type User
[DEBUG] [2020-11-10 10:19:00,613] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 1), ('athlete', 4), ('user', 1)]
[INFO] [2020-11-10 10:19:00,613] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: lastName, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x112060d90>, containtin type User
[DEBUG] [2020-11-10 10:19:00,613] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 1), ('athlete', 4), ('user', 0)]
[DEBUG] [2020-11-10 10:19:00,613] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 1), ('athlete', 4)]
[DEBUG] [2020-11-10 10:19:00,613] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(3, [('userName', <google.protobuf.pyext._message.FieldDescriptor object at 0x112060dc0>), ('firstName', <google.protobuf.pyext._message.FieldDescriptor object at 0x112060df0>), ('lastName', <google.protobuf.pyext._message.FieldDescriptor object at 0x112060d90>)])
[INFO] [2020-11-10 10:19:00,613] [parse_proto_api.py:235] [_recurse] Checked for msg field: bikes, object: Bikes
[DEBUG] [2020-11-10 10:19:00,614] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 1), ('athlete', 4)]
[INFO] [2020-11-10 10:19:00,614] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: bikeName, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x112060c70>, containtin type Bikes
[DEBUG] [2020-11-10 10:19:00,614] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 1), ('athlete', 3), ('bikes', 0)]
[DEBUG] [2020-11-10 10:19:00,614] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 1), ('athlete', 3)]
[DEBUG] [2020-11-10 10:19:00,614] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(2, [('bikeBrand', <google.protobuf.pyext._message.FieldDescriptor object at 0x112060e80>), ('bikeName', <google.protobuf.pyext._message.FieldDescriptor object at 0x112060c70>)])
[INFO] [2020-11-10 10:19:00,614] [parse_proto_api.py:235] [_recurse] Checked for msg field: shoes, object: Shoes
[DEBUG] [2020-11-10 10:19:00,614] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 1), ('athlete', 3)]
[INFO] [2020-11-10 10:19:00,615] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: shoeName, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a5160>, containtin type Shoes
[DEBUG] [2020-11-10 10:19:00,615] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 1), ('athlete', 2), ('shoes', 0)]
[DEBUG] [2020-11-10 10:19:00,615] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 1), ('athlete', 2)]
[DEBUG] [2020-11-10 10:19:00,615] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(2, [('shoeBrand', <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a5160>), ('shoeName', <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a5100>)])
[INFO] [2020-11-10 10:19:00,615] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: weight, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110075c70>, containtin type Query
[DEBUG] [2020-11-10 10:19:00,616] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 1), ('athlete', 1)]
[INFO] [2020-11-10 10:19:00,616] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: age, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x112060af0>, containtin type Query
[DEBUG] [2020-11-10 10:19:00,616] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 1), ('athlete', 0)]
[DEBUG] [2020-11-10 10:19:00,616] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 1)]
[DEBUG] [2020-11-10 10:19:00,616] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(6, [('id', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082880>), ('user', <google.protobuf.pyext._message.FieldDescriptor object at 0x11009c460>), ('bikes', <google.protobuf.pyext._message.FieldDescriptor object at 0x11009c280>), ('shoes', <google.protobuf.pyext._message.FieldDescriptor object at 0x11009c6d0>), ('weight', <google.protobuf.pyext._message.FieldDescriptor object at 0x110075c70>), ('age', <google.protobuf.pyext._message.FieldDescriptor object at 0x112060af0>)])
[INFO] [2020-11-10 10:19:00,617] [parse_proto_api.py:235] [_recurse] Checked for msg field: segment, object: Segment
[DEBUG] [2020-11-10 10:19:00,617] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 1)]
[INFO] [2020-11-10 10:19:00,617] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: segId, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110082460>, containtin type Segment
[DEBUG] [2020-11-10 10:19:00,617] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 0), ('segment', 5)]
[INFO] [2020-11-10 10:19:00,618] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: name, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110082880>, containtin type Segment
[DEBUG] [2020-11-10 10:19:00,619] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 0), ('segment', 4)]
[INFO] [2020-11-10 10:19:00,620] [parse_proto_api.py:235] [_recurse] Checked for msg field: route, object: Query
[DEBUG] [2020-11-10 10:19:00,621] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 0), ('segment', 4)]
[INFO] [2020-11-10 10:19:00,622] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: elevation, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a5340>, containtin type Query
[DEBUG] [2020-11-10 10:19:00,622] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 0), ('segment', 3), ('route', 2)]
[INFO] [2020-11-10 10:19:00,688] [parse_proto_api.py:235] [_recurse] Checked for msg field: place, object: Place
[DEBUG] [2020-11-10 10:19:00,688] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 0), ('segment', 3), ('route', 2)]
[INFO] [2020-11-10 10:19:00,688] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: country, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a55e0>, containtin type Place
[DEBUG] [2020-11-10 10:19:00,688] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 0), ('segment', 3), ('route', 1), ('place', 2)]
[INFO] [2020-11-10 10:19:00,688] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: city, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a5610>, containtin type Place
[DEBUG] [2020-11-10 10:19:00,688] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 0), ('segment', 3), ('route', 1), ('place', 1)]
[INFO] [2020-11-10 10:19:00,688] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: distance, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a5580>, containtin type Place
[DEBUG] [2020-11-10 10:19:00,689] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 0), ('segment', 3), ('route', 1), ('place', 0)]
[DEBUG] [2020-11-10 10:19:00,691] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 0), ('segment', 3), ('route', 1)]
[DEBUG] [2020-11-10 10:19:00,691] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(3, [('country', <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a55e0>), ('city', <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a5610>), ('distance', <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a5580>)])
[INFO] [2020-11-10 10:19:00,691] [parse_proto_api.py:235] [_recurse] Checked for msg field: map, object: Map
[DEBUG] [2020-11-10 10:19:00,691] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 0), ('segment', 3), ('route', 1)]
[INFO] [2020-11-10 10:19:00,691] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: startAtLong, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a5610>, containtin type Map
[DEBUG] [2020-11-10 10:19:00,691] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 0), ('segment', 3), ('route', 0), ('map', 3)]
[INFO] [2020-11-10 10:19:00,691] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: endAtLong, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a57c0>, containtin type Map
[DEBUG] [2020-11-10 10:19:00,692] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 0), ('segment', 3), ('route', 0), ('map', 2)]
[INFO] [2020-11-10 10:19:00,692] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: height, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a5700>, containtin type Map
[DEBUG] [2020-11-10 10:19:00,692] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 0), ('segment', 3), ('route', 0), ('map', 1)]
[DEBUG] [2020-11-10 10:19:00,692] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 0), ('segment', 3), ('route', 0)]
[DEBUG] [2020-11-10 10:19:00,692] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(4, [('startAtLong', <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a5610>), ('endAtLong', <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a57c0>), ('height', <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a5700>), ('category', <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a56a0>)])
[DEBUG] [2020-11-10 10:19:00,692] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 0), ('segment', 3)]
[DEBUG] [2020-11-10 10:19:00,692] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(3, [('elevation', <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a5340>), ('place', <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a5310>), ('map', <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a5370>)])
[INFO] [2020-11-10 10:19:00,693] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: elevHigh, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x110075c70>, containtin type Segment
[DEBUG] [2020-11-10 10:19:00,693] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 0), ('segment', 2)]
[INFO] [2020-11-10 10:19:00,693] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: elevLow, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a5040>, containtin type Segment
[DEBUG] [2020-11-10 10:19:00,693] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 0), ('segment', 1)]
[INFO] [2020-11-10 10:19:00,693] [parse_proto_api.py:235] [_recurse] Checked for msg field: hearthData, object: Hearth
[DEBUG] [2020-11-10 10:19:00,693] [parse_proto_api.py:237] [_recurse] CONCHECK 2 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 0), ('segment', 1)]
[INFO] [2020-11-10 10:19:00,693] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: averageHearthRate, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a5850>, containtin type Hearth
[DEBUG] [2020-11-10 10:19:00,693] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 0), ('segment', 0), ('hearthData', 2)]
[INFO] [2020-11-10 10:19:00,693] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: minHearthRate, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a5a00>, containtin type Hearth
[DEBUG] [2020-11-10 10:19:00,694] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 0), ('segment', 0), ('hearthData', 1)]
[INFO] [2020-11-10 10:19:00,694] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: maxHearthRate, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a5580>, containtin type Hearth
[DEBUG] [2020-11-10 10:19:00,694] [parse_proto_api.py:193] [_recurse] CONCHECK 1 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 0), ('segment', 0), ('hearthData', 0)]
[DEBUG] [2020-11-10 10:19:00,694] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 0), ('segment', 0)]
[DEBUG] [2020-11-10 10:19:00,694] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(3, [('averageHearthRate', <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a5850>), ('minHearthRate', <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a5a00>), ('maxHearthRate', <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a5580>)])
[DEBUG] [2020-11-10 10:19:00,694] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 0), ('skiQuery', 0)]
[DEBUG] [2020-11-10 10:19:00,694] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(6, [('segId', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082880>), ('name', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082ac0>), ('route', <google.protobuf.pyext._message.FieldDescriptor object at 0x110075c70>), ('elevHigh', <google.protobuf.pyext._message.FieldDescriptor object at 0x11009c6d0>), ('elevLow', <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a51c0>), ('hearthData', <google.protobuf.pyext._message.FieldDescriptor object at 0x1100a5040>)])
[DEBUG] [2020-11-10 10:19:00,694] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5), ('queryActivities', 0)]
[DEBUG] [2020-11-10 10:19:00,695] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(2, [('athlete', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082460>), ('segment', <google.protobuf.pyext._message.FieldDescriptor object at 0x110082880>)])
[DEBUG] [2020-11-10 10:19:00,695] [parse_proto_api.py:302] [_recurse] CONCHECK 6 :[('Request', 5)]
[DEBUG] [2020-11-10 10:19:00,695] [parse_proto_api.py:299] [_recurse] CONTEXTHASNUM 2 :(4, [('bikeQuery', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008cb20>), ('swimQuery', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008caf0>), ('runQuery', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008cac0>), ('skiQuery', <google.protobuf.pyext._message.FieldDescriptor object at 0x11008cb50>)])
[INFO] [2020-11-10 10:19:00,695] [parse_proto_api.py:177] [_recurse] Checked for non msg non field: date, object: <google.protobuf.pyext._message.FieldDescriptor object at 0x11008cbb0>, containtin type Request
[INFO] [2020-11-10 10:19:00,695] [parse_proto_api.py:336] [explore_pb2_api] PPROT MSG - API has no more message, message left: 0, operation end
[INFO] [2020-11-10 10:19:00,778] [protobuf_runner.py:66] [run_proto] [10:19:00] Prepare ProtobufTarget 
[INFO] [2020-11-10 10:19:00,779] [protobuf_runner.py:74] [run_proto] [10:19:00] Prepare ProtobufController 
[INFO] [2020-11-10 10:19:00,779] [protobuf_runner.py:78] [run_proto] [10:19:00] Defining GraphModel
[INFO] [2020-11-10 10:19:01,108] [protobuf_runner.py:82] [run_proto] [10:19:01] Prepare Server Fuzzer 
[DEBUG] [2020-11-10 10:19:01,160] [utils.py:57] [encode_message] MSG-ENCODE - Message to encode status: ARCHIVE
private: TRUE
id: 15
access_token: "\323\036\274"
query_activities {
  bike_query {
    athlete {
      id: 3636723471
      user {
        user_name: "nv6ymm4f"
        first_name: "h3iapk0u"
        last_name: "fv3xpb4fm68620l"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "bny6pello6bh68isqk"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "iclulqe2wurzx26jl"
      }
      weight: 3631135953
      age: 417980981
    }
    segment {
      seg_id: 2071132139
      name: "rmnygabg97vclc6t2j"
      route {
        elevation: 2648740299
        place {
          country: "ekdpewaog94vh"
          city: "y0v27lv562vcp3750ys"
          distance: 468952253
        }
        map {
          start_at_long: "anfop8t55yqj"
          end_at_long: "ncuc6g1ei5s"
          height: 1389797794
          category: A
        }
      }
      elev_high: 4010043823
      elev_low: 1288471655
      hearth_data {
        average_hearth_rate: 2635679190
        min_hearth_rate: 2809557788
        max_hearth_rate: 2729517759
      }
    }
  }
  swim_query {
    athlete {
      id: 3266444016
      user {
        user_name: "h6one3"
        first_name: "b9u69meup6pf4zbnp0h"
        last_name: "ee9kh4vvr3mzuh8v3q"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "le567"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "k3em2w1gul6j4"
      }
      weight: 3934861226
      age: 722456414
    }
    segment {
      seg_id: 2957781088
      name: "i6gsbjkndv7vl4b"
      hearth_data {
        average_hearth_rate: 3469530481
        min_hearth_rate: 2144172496
        max_hearth_rate: 2039951082
      }
    }
  }
  run_query {
    athlete {
      id: 3320476386
      user {
        user_name: "xt7fz93x4r2kz3w"
        first_name: "73svmji06p6pp"
        last_name: "aompg"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "6qps9071"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "7s4umf"
      }
      weight: 2502929304
      age: 842091855
    }
    segment {
      seg_id: 2926049562
      name: "a8doolbw"
      route {
        elevation: 2555441512
        place {
          country: "wetfc3tiebhljt9"
          city: "xutt4vqg1dmjiki1"
          distance: 3009895694
        }
        map {
          start_at_long: "8ot4z7pj"
          end_at_long: "mp4hjc7pemsdr7o"
          height: 545690386
          category: A
        }
      }
      elev_high: 2100159679
      elev_low: 160510764
      hearth_data {
        average_hearth_rate: 2877254976
        min_hearth_rate: 1725553925
        max_hearth_rate: 4210636143
      }
    }
  }
  ski_query {
    athlete {
      id: 905430602
      user {
        user_name: "brrjk2bywn8hl"
        first_name: "n1qht346mjqypsf137"
        last_name: "h3z2042nbv595s1psxz2"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "djtcu"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "i7ijgqqn"
      }
      weight: 1828766029
      age: 3316364117
    }
    segment {
      seg_id: 2836866065
      name: "8baar338hcsupa"
      route {
        elevation: 3177697409
        place {
          country: "8pufg9ls9ex8fru3"
          city: "lk31vsj6s6"
          distance: 601053847
        }
        map {
          start_at_long: "kspeb"
          end_at_long: "sc6ffa"
          height: 2770399623
          category: A
        }
      }
      elev_high: 2929075595
      elev_low: 3885575310
      hearth_data {
        average_hearth_rate: 2570204409
        min_hearth_rate: 3655993642
        max_hearth_rate: 1526162027
      }
    }
  }
}
date: 1335101953

[DEBUG] [2020-11-10 10:19:01,165] [utils.py:62] [encode_message] MSG-DECODE - Message decoded b'z\x03\x00\x00\x08\x01\x10\x0f\x18\x0f"\x03\xd3\x1e\xbc*\xe6\x06\n\x80\x02\x12h\x08\x8f\xfe\x8f\xc6\r\x12%\n\x08nv6ymm4f\x12\x08h3iapk0u\x1a\x0ffv3xpb4fm68620l\x1a\x16\x08\x01\x12\x12bny6pello6bh68isqk"\x15\x08\x01\x12\x11iclulqe2wurzx26jl(\xd1\xf9\xba\xc3\r0\xb5\xc4\xa7\xc7\x01\x1a\x93\x01\x08\xeb\xef\xcb\xdb\x07\x12\x12rmnygabg97vclc6t2j\x1aW\x08\xcb\xa3\x82\xef\t\x12*\n\rekdpewaog94vh\x12\x13y0v27lv562vcp3750ys\x18\xbd\xc9\xce\xdf\x01\x1a#\n\x0canfop8t55yqj\x12\x0bncuc6g1ei5s\x18\xa2\xc3\xda\x96\x05 \x01 \xaf\xd3\x91\xf8\x0e(\xe7\x88\xb2\xe6\x042\x12\x08\xd6\x8b\xe5\xe8\t\x10\x9c\xe6\xd9\xbb\n\x18\xbf\xc5\xc4\x95\n\x12\x92\x01\x12c\x08\xf0\xf5\xc7\x95\x0c\x121\n\x06h6one3\x12\x13b9u69meup6pf4zbnp0h\x1a\x12ee9kh4vvr3mzuh8v3q\x1a\t\x08\x01\x12\x05le567"\x11\x08\x01\x12\rk3em2w1gul6j4(\xaa\xef\xa4\xd4\x0e0\xde\x9e\xbf\xd8\x02\x1a+\x08\xe0\xd0\xb0\x82\x0b\x12\x0fi6gsbjkndv7vl4b2\x12\x08\xf1\xaa\xb3\xf6\x0c\x10\xd0\xf3\xb5\xfe\x07\x18\xea\xdd\xdc\xcc\x07\x1a\xe1\x01\x12U\x08\xe2\xe5\xa9\xaf\x0c\x12\'\n\x0fxt7fz93x4r2kz3w\x12\r73svmji06p6pp\x1a\x05aompg\x1a\x0c\x08\x01\x12\x086qps9071"\n\x08\x01\x12\x067s4umf(\x98\xd7\xbe\xa9\t0\xcf\x9a\xc5\x91\x03\x1a\x87\x01\x08\x9a\xf2\x9f\xf3\n\x12\x08a8doolbw\x1aV\x08\xe8\xe2\xc3\xc2\t\x12)\n\x0fwetfc3tiebhljt9\x12\x10xutt4vqg1dmjiki1\x18\x8e\xba\x9d\x9b\x0b\x1a#\n\x088ot4z7pj\x12\x0fmp4hjc7pemsdr7o\x18\x92\xa6\x9a\x84\x02 \x01 \xbf\xc9\xb7\xe9\x07(\xac\xe6\xc4L2\x12\x08\xc0\xda\xfd\xdb\n\x10\x85\xba\xe7\xb6\x06\x18\xef\xea\xe4\xd7\x0f"\xe7\x01\x12f\x08\xca\x8c\xdf\xaf\x03\x129\n\rbrrjk2bywn8hl\x12\x12n1qht346mjqypsf137\x1a\x14h3z2042nbv595s1psxz2\x1a\t\x08\x01\x12\x05djtcu"\x0c\x08\x01\x12\x08i7ijgqqn(\xcd\x82\x83\xe8\x060\xd5\xe6\xae\xad\x0c\x1a}\x08\x91\xc8\xdc\xc8\n\x12\x0e8baar338hcsupa\x1aE\x08\x81\xa1\x9f\xeb\x0b\x12$\n\x108pufg9ls9ex8fru3\x12\nlk31vsj6s6\x18\x97\xb5\xcd\x9e\x02\x1a\x17\n\x05kspeb\x12\x06sc6ffa\x18\x87\xe3\x83\xa9\n \x01 \x8b\xcb\xd8\xf4\n(\x8e\xd9\xe4\xbc\x0e2\x12\x08\xf9\xe9\xc8\xc9\t\x10\xaa\x92\xa8\xcf\r\x18\xeb\xc4\xdd\xd7\x050\x81\x94\xd0\xfc\x04'
[DEBUG] [2020-11-10 10:19:01,199] [utils.py:57] [encode_message] MSG-ENCODE - Message to encode status: ARCHIVE
private: TRUE
id: 15
access_token: "\323\036\274\323\036\274"
query_activities {
  bike_query {
    athlete {
      id: 3636723471
      user {
        user_name: "nv6ymm4f"
        first_name: "h3iapk0u"
        last_name: "fv3xpb4fm68620l"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "bny6pello6bh68isqk"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "iclulqe2wurzx26jl"
      }
      weight: 3631135953
      age: 417980981
    }
    segment {
      seg_id: 2071132139
      name: "rmnygabg97vclc6t2j"
      route {
        elevation: 2648740299
        place {
          country: "ekdpewaog94vh"
          city: "y0v27lv562vcp3750ys"
          distance: 468952253
        }
        map {
          start_at_long: "anfop8t55yqj"
          end_at_long: "ncuc6g1ei5s"
          height: 1389797794
          category: A
        }
      }
      elev_high: 4010043823
      elev_low: 1288471655
      hearth_data {
        average_hearth_rate: 2635679190
        min_hearth_rate: 2809557788
        max_hearth_rate: 2729517759
      }
    }
  }
  swim_query {
    athlete {
      id: 3266444016
      user {
        user_name: "h6one3"
        first_name: "b9u69meup6pf4zbnp0h"
        last_name: "ee9kh4vvr3mzuh8v3q"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "le567"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "k3em2w1gul6j4"
      }
      weight: 3934861226
      age: 722456414
    }
    segment {
      seg_id: 2957781088
      name: "i6gsbjkndv7vl4b"
      hearth_data {
        average_hearth_rate: 3469530481
        min_hearth_rate: 2144172496
        max_hearth_rate: 2039951082
      }
    }
  }
  run_query {
    athlete {
      id: 3320476386
      user {
        user_name: "xt7fz93x4r2kz3w"
        first_name: "73svmji06p6pp"
        last_name: "aompg"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "6qps9071"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "7s4umf"
      }
      weight: 2502929304
      age: 842091855
    }
    segment {
      seg_id: 2926049562
      name: "a8doolbw"
      route {
        elevation: 2555441512
        place {
          country: "wetfc3tiebhljt9"
          city: "xutt4vqg1dmjiki1"
          distance: 3009895694
        }
        map {
          start_at_long: "8ot4z7pj"
          end_at_long: "mp4hjc7pemsdr7o"
          height: 545690386
          category: A
        }
      }
      elev_high: 2100159679
      elev_low: 160510764
      hearth_data {
        average_hearth_rate: 2877254976
        min_hearth_rate: 1725553925
        max_hearth_rate: 4210636143
      }
    }
  }
  ski_query {
    athlete {
      id: 905430602
      user {
        user_name: "brrjk2bywn8hl"
        first_name: "n1qht346mjqypsf137"
        last_name: "h3z2042nbv595s1psxz2"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "djtcu"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "i7ijgqqn"
      }
      weight: 1828766029
      age: 3316364117
    }
    segment {
      seg_id: 2836866065
      name: "8baar338hcsupa"
      route {
        elevation: 3177697409
        place {
          country: "8pufg9ls9ex8fru3"
          city: "lk31vsj6s6"
          distance: 601053847
        }
        map {
          start_at_long: "kspeb"
          end_at_long: "sc6ffa"
          height: 2770399623
          category: A
        }
      }
      elev_high: 2929075595
      elev_low: 3885575310
      hearth_data {
        average_hearth_rate: 2570204409
        min_hearth_rate: 3655993642
        max_hearth_rate: 1526162027
      }
    }
  }
}
date: 1335101953

[DEBUG] [2020-11-10 10:19:01,223] [utils.py:62] [encode_message] MSG-DECODE - Message decoded b'}\x03\x00\x00\x08\x01\x10\x0f\x18\x0f"\x06\xd3\x1e\xbc\xd3\x1e\xbc*\xe6\x06\n\x80\x02\x12h\x08\x8f\xfe\x8f\xc6\r\x12%\n\x08nv6ymm4f\x12\x08h3iapk0u\x1a\x0ffv3xpb4fm68620l\x1a\x16\x08\x01\x12\x12bny6pello6bh68isqk"\x15\x08\x01\x12\x11iclulqe2wurzx26jl(\xd1\xf9\xba\xc3\r0\xb5\xc4\xa7\xc7\x01\x1a\x93\x01\x08\xeb\xef\xcb\xdb\x07\x12\x12rmnygabg97vclc6t2j\x1aW\x08\xcb\xa3\x82\xef\t\x12*\n\rekdpewaog94vh\x12\x13y0v27lv562vcp3750ys\x18\xbd\xc9\xce\xdf\x01\x1a#\n\x0canfop8t55yqj\x12\x0bncuc6g1ei5s\x18\xa2\xc3\xda\x96\x05 \x01 \xaf\xd3\x91\xf8\x0e(\xe7\x88\xb2\xe6\x042\x12\x08\xd6\x8b\xe5\xe8\t\x10\x9c\xe6\xd9\xbb\n\x18\xbf\xc5\xc4\x95\n\x12\x92\x01\x12c\x08\xf0\xf5\xc7\x95\x0c\x121\n\x06h6one3\x12\x13b9u69meup6pf4zbnp0h\x1a\x12ee9kh4vvr3mzuh8v3q\x1a\t\x08\x01\x12\x05le567"\x11\x08\x01\x12\rk3em2w1gul6j4(\xaa\xef\xa4\xd4\x0e0\xde\x9e\xbf\xd8\x02\x1a+\x08\xe0\xd0\xb0\x82\x0b\x12\x0fi6gsbjkndv7vl4b2\x12\x08\xf1\xaa\xb3\xf6\x0c\x10\xd0\xf3\xb5\xfe\x07\x18\xea\xdd\xdc\xcc\x07\x1a\xe1\x01\x12U\x08\xe2\xe5\xa9\xaf\x0c\x12\'\n\x0fxt7fz93x4r2kz3w\x12\r73svmji06p6pp\x1a\x05aompg\x1a\x0c\x08\x01\x12\x086qps9071"\n\x08\x01\x12\x067s4umf(\x98\xd7\xbe\xa9\t0\xcf\x9a\xc5\x91\x03\x1a\x87\x01\x08\x9a\xf2\x9f\xf3\n\x12\x08a8doolbw\x1aV\x08\xe8\xe2\xc3\xc2\t\x12)\n\x0fwetfc3tiebhljt9\x12\x10xutt4vqg1dmjiki1\x18\x8e\xba\x9d\x9b\x0b\x1a#\n\x088ot4z7pj\x12\x0fmp4hjc7pemsdr7o\x18\x92\xa6\x9a\x84\x02 \x01 \xbf\xc9\xb7\xe9\x07(\xac\xe6\xc4L2\x12\x08\xc0\xda\xfd\xdb\n\x10\x85\xba\xe7\xb6\x06\x18\xef\xea\xe4\xd7\x0f"\xe7\x01\x12f\x08\xca\x8c\xdf\xaf\x03\x129\n\rbrrjk2bywn8hl\x12\x12n1qht346mjqypsf137\x1a\x14h3z2042nbv595s1psxz2\x1a\t\x08\x01\x12\x05djtcu"\x0c\x08\x01\x12\x08i7ijgqqn(\xcd\x82\x83\xe8\x060\xd5\xe6\xae\xad\x0c\x1a}\x08\x91\xc8\xdc\xc8\n\x12\x0e8baar338hcsupa\x1aE\x08\x81\xa1\x9f\xeb\x0b\x12$\n\x108pufg9ls9ex8fru3\x12\nlk31vsj6s6\x18\x97\xb5\xcd\x9e\x02\x1a\x17\n\x05kspeb\x12\x06sc6ffa\x18\x87\xe3\x83\xa9\n \x01 \x8b\xcb\xd8\xf4\n(\x8e\xd9\xe4\xbc\x0e2\x12\x08\xf9\xe9\xc8\xc9\t\x10\xaa\x92\xa8\xcf\r\x18\xeb\xc4\xdd\xd7\x050\x81\x94\xd0\xfc\x04'
[DEBUG] [2020-11-10 10:19:01,264] [utils.py:57] [encode_message] MSG-ENCODE - Message to encode status: ARCHIVE
private: TRUE
id: 15
access_token: "\323\036\274\323\036\274\323\036\274\323\036\274\323\036\274\323\036\274\323\036\274\323\036\274\323\036\274\323\036\274"
query_activities {
  bike_query {
    athlete {
      id: 3636723471
      user {
        user_name: "nv6ymm4f"
        first_name: "h3iapk0u"
        last_name: "fv3xpb4fm68620l"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "bny6pello6bh68isqk"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "iclulqe2wurzx26jl"
      }
      weight: 3631135953
      age: 417980981
    }
    segment {
      seg_id: 2071132139
      name: "rmnygabg97vclc6t2j"
      route {
        elevation: 2648740299
        place {
          country: "ekdpewaog94vh"
          city: "y0v27lv562vcp3750ys"
          distance: 468952253
        }
        map {
          start_at_long: "anfop8t55yqj"
          end_at_long: "ncuc6g1ei5s"
          height: 1389797794
          category: A
        }
      }
      elev_high: 4010043823
      elev_low: 1288471655
      hearth_data {
        average_hearth_rate: 2635679190
        min_hearth_rate: 2809557788
        max_hearth_rate: 2729517759
      }
    }
  }
  swim_query {
    athlete {
      id: 3266444016
      user {
        user_name: "h6one3"
        first_name: "b9u69meup6pf4zbnp0h"
        last_name: "ee9kh4vvr3mzuh8v3q"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "le567"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "k3em2w1gul6j4"
      }
      weight: 3934861226
      age: 722456414
    }
    segment {
      seg_id: 2957781088
      name: "i6gsbjkndv7vl4b"
      hearth_data {
        average_hearth_rate: 3469530481
        min_hearth_rate: 2144172496
        max_hearth_rate: 2039951082
      }
    }
  }
  run_query {
    athlete {
      id: 3320476386
      user {
        user_name: "xt7fz93x4r2kz3w"
        first_name: "73svmji06p6pp"
        last_name: "aompg"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "6qps9071"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "7s4umf"
      }
      weight: 2502929304
      age: 842091855
    }
    segment {
      seg_id: 2926049562
      name: "a8doolbw"
      route {
        elevation: 2555441512
        place {
          country: "wetfc3tiebhljt9"
          city: "xutt4vqg1dmjiki1"
          distance: 3009895694
        }
        map {
          start_at_long: "8ot4z7pj"
          end_at_long: "mp4hjc7pemsdr7o"
          height: 545690386
          category: A
        }
      }
      elev_high: 2100159679
      elev_low: 160510764
      hearth_data {
        average_hearth_rate: 2877254976
        min_hearth_rate: 1725553925
        max_hearth_rate: 4210636143
      }
    }
  }
  ski_query {
    athlete {
      id: 905430602
      user {
        user_name: "brrjk2bywn8hl"
        first_name: "n1qht346mjqypsf137"
        last_name: "h3z2042nbv595s1psxz2"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "djtcu"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "i7ijgqqn"
      }
      weight: 1828766029
      age: 3316364117
    }
    segment {
      seg_id: 2836866065
      name: "8baar338hcsupa"
      route {
        elevation: 3177697409
        place {
          country: "8pufg9ls9ex8fru3"
          city: "lk31vsj6s6"
          distance: 601053847
        }
        map {
          start_at_long: "kspeb"
          end_at_long: "sc6ffa"
          height: 2770399623
          category: A
        }
      }
      elev_high: 2929075595
      elev_low: 3885575310
      hearth_data {
        average_hearth_rate: 2570204409
        min_hearth_rate: 3655993642
        max_hearth_rate: 1526162027
      }
    }
  }
}
date: 1335101953

[DEBUG] [2020-11-10 10:19:01,289] [utils.py:62] [encode_message] MSG-DECODE - Message decoded b'\x95\x03\x00\x00\x08\x01\x10\x0f\x18\x0f"\x1e\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc*\xe6\x06\n\x80\x02\x12h\x08\x8f\xfe\x8f\xc6\r\x12%\n\x08nv6ymm4f\x12\x08h3iapk0u\x1a\x0ffv3xpb4fm68620l\x1a\x16\x08\x01\x12\x12bny6pello6bh68isqk"\x15\x08\x01\x12\x11iclulqe2wurzx26jl(\xd1\xf9\xba\xc3\r0\xb5\xc4\xa7\xc7\x01\x1a\x93\x01\x08\xeb\xef\xcb\xdb\x07\x12\x12rmnygabg97vclc6t2j\x1aW\x08\xcb\xa3\x82\xef\t\x12*\n\rekdpewaog94vh\x12\x13y0v27lv562vcp3750ys\x18\xbd\xc9\xce\xdf\x01\x1a#\n\x0canfop8t55yqj\x12\x0bncuc6g1ei5s\x18\xa2\xc3\xda\x96\x05 \x01 \xaf\xd3\x91\xf8\x0e(\xe7\x88\xb2\xe6\x042\x12\x08\xd6\x8b\xe5\xe8\t\x10\x9c\xe6\xd9\xbb\n\x18\xbf\xc5\xc4\x95\n\x12\x92\x01\x12c\x08\xf0\xf5\xc7\x95\x0c\x121\n\x06h6one3\x12\x13b9u69meup6pf4zbnp0h\x1a\x12ee9kh4vvr3mzuh8v3q\x1a\t\x08\x01\x12\x05le567"\x11\x08\x01\x12\rk3em2w1gul6j4(\xaa\xef\xa4\xd4\x0e0\xde\x9e\xbf\xd8\x02\x1a+\x08\xe0\xd0\xb0\x82\x0b\x12\x0fi6gsbjkndv7vl4b2\x12\x08\xf1\xaa\xb3\xf6\x0c\x10\xd0\xf3\xb5\xfe\x07\x18\xea\xdd\xdc\xcc\x07\x1a\xe1\x01\x12U\x08\xe2\xe5\xa9\xaf\x0c\x12\'\n\x0fxt7fz93x4r2kz3w\x12\r73svmji06p6pp\x1a\x05aompg\x1a\x0c\x08\x01\x12\x086qps9071"\n\x08\x01\x12\x067s4umf(\x98\xd7\xbe\xa9\t0\xcf\x9a\xc5\x91\x03\x1a\x87\x01\x08\x9a\xf2\x9f\xf3\n\x12\x08a8doolbw\x1aV\x08\xe8\xe2\xc3\xc2\t\x12)\n\x0fwetfc3tiebhljt9\x12\x10xutt4vqg1dmjiki1\x18\x8e\xba\x9d\x9b\x0b\x1a#\n\x088ot4z7pj\x12\x0fmp4hjc7pemsdr7o\x18\x92\xa6\x9a\x84\x02 \x01 \xbf\xc9\xb7\xe9\x07(\xac\xe6\xc4L2\x12\x08\xc0\xda\xfd\xdb\n\x10\x85\xba\xe7\xb6\x06\x18\xef\xea\xe4\xd7\x0f"\xe7\x01\x12f\x08\xca\x8c\xdf\xaf\x03\x129\n\rbrrjk2bywn8hl\x12\x12n1qht346mjqypsf137\x1a\x14h3z2042nbv595s1psxz2\x1a\t\x08\x01\x12\x05djtcu"\x0c\x08\x01\x12\x08i7ijgqqn(\xcd\x82\x83\xe8\x060\xd5\xe6\xae\xad\x0c\x1a}\x08\x91\xc8\xdc\xc8\n\x12\x0e8baar338hcsupa\x1aE\x08\x81\xa1\x9f\xeb\x0b\x12$\n\x108pufg9ls9ex8fru3\x12\nlk31vsj6s6\x18\x97\xb5\xcd\x9e\x02\x1a\x17\n\x05kspeb\x12\x06sc6ffa\x18\x87\xe3\x83\xa9\n \x01 \x8b\xcb\xd8\xf4\n(\x8e\xd9\xe4\xbc\x0e2\x12\x08\xf9\xe9\xc8\xc9\t\x10\xaa\x92\xa8\xcf\r\x18\xeb\xc4\xdd\xd7\x050\x81\x94\xd0\xfc\x04'
[DEBUG] [2020-11-10 10:19:01,328] [utils.py:57] [encode_message] MSG-ENCODE - Message to encode status: ARCHIVE
private: TRUE
id: 15
access_token
query_activities {
  bike_query {
    athlete {
      id: 3636723471
      user {
        user_name: "nv6ymm4f"
        first_name: "h3iapk0u"
        last_name: "fv3xpb4fm68620l"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "bny6pello6bh68isqk"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "iclulqe2wurzx26jl"
      }
      weight: 3631135953
      age: 417980981
    }
    segment {
      seg_id: 2071132139
      name: "rmnygabg97vclc6t2j"
      route {
        elevation: 2648740299
        place {
          country: "ekdpewaog94vh"
          city: "y0v27lv562vcp3750ys"
          distance: 468952253
        }
        map {
          start_at_long: "anfop8t55yqj"
          end_at_long: "ncuc6g1ei5s"
          height: 1389797794
          category: A
        }
      }
      elev_high: 4010043823
      elev_low: 1288471655
      hearth_data {
        average_hearth_rate: 2635679190
        min_hearth_rate: 2809557788
        max_hearth_rate: 2729517759
      }
    }
  }
  swim_query {
    athlete {
      id: 3266444016
      user {
        user_name: "h6one3"
        first_name: "b9u69meup6pf4zbnp0h"
        last_name: "ee9kh4vvr3mzuh8v3q"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "le567"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "k3em2w1gul6j4"
      }
      weight: 3934861226
      age: 722456414
    }
    segment {
      seg_id: 2957781088
      name: "i6gsbjkndv7vl4b"
      hearth_data {
        average_hearth_rate: 3469530481
        min_hearth_rate: 2144172496
        max_hearth_rate: 2039951082
      }
    }
  }
  run_query {
    athlete {
      id: 3320476386
      user {
        user_name: "xt7fz93x4r2kz3w"
        first_name: "73svmji06p6pp"
        last_name: "aompg"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "6qps9071"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "7s4umf"
      }
      weight: 2502929304
      age: 842091855
    }
    segment {
      seg_id: 2926049562
      name: "a8doolbw"
      route {
        elevation: 2555441512
        place {
          country: "wetfc3tiebhljt9"
          city: "xutt4vqg1dmjiki1"
          distance: 3009895694
        }
        map {
          start_at_long: "8ot4z7pj"
          end_at_long: "mp4hjc7pemsdr7o"
          height: 545690386
          category: A
        }
      }
      elev_high: 2100159679
      elev_low: 160510764
      hearth_data {
        average_hearth_rate: 2877254976
        min_hearth_rate: 1725553925
        max_hearth_rate: 4210636143
      }
    }
  }
  ski_query {
    athlete {
      id: 905430602
      user {
        user_name: "brrjk2bywn8hl"
        first_name: "n1qht346mjqypsf137"
        last_name: "h3z2042nbv595s1psxz2"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "djtcu"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "i7ijgqqn"
      }
      weight: 1828766029
      age: 3316364117
    }
    segment {
      seg_id: 2836866065
      name: "8baar338hcsupa"
      route {
        elevation: 3177697409
        place {
          country: "8pufg9ls9ex8fru3"
          city: "lk31vsj6s6"
          distance: 601053847
        }
        map {
          start_at_long: "kspeb"
          end_at_long: "sc6ffa"
          height: 2770399623
          category: A
        }
      }
      elev_high: 2929075595
      elev_low: 3885575310
      hearth_data {
        average_hearth_rate: 2570204409
        min_hearth_rate: 3655993642
        max_hearth_rate: 1526162027
      }
    }
  }
}
date: 1335101953

[DEBUG] [2020-11-10 10:19:01,358] [utils.py:62] [encode_message] MSG-DECODE - Message decoded b'\xa4\x04\x00\x00\x08\x01\x10\x0f\x18\x0f"\xac\x02\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc\xd3\x1e\xbc*\xe6\x06\n\x80\x02\x12h\x08\x8f\xfe\x8f\xc6\r\x12%\n\x08nv6ymm4f\x12\x08h3iapk0u\x1a\x0ffv3xpb4fm68620l\x1a\x16\x08\x01\x12\x12bny6pello6bh68isqk"\x15\x08\x01\x12\x11iclulqe2wurzx26jl(\xd1\xf9\xba\xc3\r0\xb5\xc4\xa7\xc7\x01\x1a\x93\x01\x08\xeb\xef\xcb\xdb\x07\x12\x12rmnygabg97vclc6t2j\x1aW\x08\xcb\xa3\x82\xef\t\x12*\n\rekdpewaog94vh\x12\x13y0v27lv562vcp3750ys\x18\xbd\xc9\xce\xdf\x01\x1a#\n\x0canfop8t55yqj\x12\x0bncuc6g1ei5s\x18\xa2\xc3\xda\x96\x05 \x01 \xaf\xd3\x91\xf8\x0e(\xe7\x88\xb2\xe6\x042\x12\x08\xd6\x8b\xe5\xe8\t\x10\x9c\xe6\xd9\xbb\n\x18\xbf\xc5\xc4\x95\n\x12\x92\x01\x12c\x08\xf0\xf5\xc7\x95\x0c\x121\n\x06h6one3\x12\x13b9u69meup6pf4zbnp0h\x1a\x12ee9kh4vvr3mzuh8v3q\x1a\t\x08\x01\x12\x05le567"\x11\x08\x01\x12\rk3em2w1gul6j4(\xaa\xef\xa4\xd4\x0e0\xde\x9e\xbf\xd8\x02\x1a+\x08\xe0\xd0\xb0\x82\x0b\x12\x0fi6gsbjkndv7vl4b2\x12\x08\xf1\xaa\xb3\xf6\x0c\x10\xd0\xf3\xb5\xfe\x07\x18\xea\xdd\xdc\xcc\x07\x1a\xe1\x01\x12U\x08\xe2\xe5\xa9\xaf\x0c\x12\'\n\x0fxt7fz93x4r2kz3w\x12\r73svmji06p6pp\x1a\x05aompg\x1a\x0c\x08\x01\x12\x086qps9071"\n\x08\x01\x12\x067s4umf(\x98\xd7\xbe\xa9\t0\xcf\x9a\xc5\x91\x03\x1a\x87\x01\x08\x9a\xf2\x9f\xf3\n\x12\x08a8doolbw\x1aV\x08\xe8\xe2\xc3\xc2\t\x12)\n\x0fwetfc3tiebhljt9\x12\x10xutt4vqg1dmjiki1\x18\x8e\xba\x9d\x9b\x0b\x1a#\n\x088ot4z7pj\x12\x0fmp4hjc7pemsdr7o\x18\x92\xa6\x9a\x84\x02 \x01 \xbf\xc9\xb7\xe9\x07(\xac\xe6\xc4L2\x12\x08\xc0\xda\xfd\xdb\n\x10\x85\xba\xe7\xb6\x06\x18\xef\xea\xe4\xd7\x0f"\xe7\x01\x12f\x08\xca\x8c\xdf\xaf\x03\x129\n\rbrrjk2bywn8hl\x12\x12n1qht346mjqypsf137\x1a\x14h3z2042nbv595s1psxz2\x1a\t\x08\x01\x12\x05djtcu"\x0c\x08\x01\x12\x08i7ijgqqn(\xcd\x82\x83\xe8\x060\xd5\xe6\xae\xad\x0c\x1a}\x08\x91\xc8\xdc\xc8\n\x12\x0e8baar338hcsupa\x1aE\x08\x81\xa1\x9f\xeb\x0b\x12$\n\x108pufg9ls9ex8fru3\x12\nlk31vsj6s6\x18\x97\xb5\xcd\x9e\x02\x1a\x17\n\x05kspeb\x12\x06sc6ffa\x18\x87\xe3\x83\xa9\n \x01 \x8b\xcb\xd8\xf4\n(\x8e\xd9\xe4\xbc\x0e2\x12\x08\xf9\xe9\xc8\xc9\t\x10\xaa\x92\xa8\xcf\r\x18\xeb\xc4\xdd\xd7\x050\x81\x94\xd0\xfc\x04'
[DEBUG] [2020-11-10 10:19:01,721] [utils.py:57] [encode_message] MSG-ENCODE - Message to encode status: ARCHIVE
private: TRUE
id: 15
access_token: ""
query_activities {
  bike_query {
    athlete {
      id: 3636723471
      user {
        user_name: "nv6ymm4f"
        first_name: "h3iapk0u"
        last_name: "fv3xpb4fm68620l"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "bny6pello6bh68isqk"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "iclulqe2wurzx26jl"
      }
      weight: 3631135953
      age: 417980981
    }
    segment {
      seg_id: 2071132139
      name: "rmnygabg97vclc6t2j"
      route {
        elevation: 2648740299
        place {
          country: "ekdpewaog94vh"
          city: "y0v27lv562vcp3750ys"
          distance: 468952253
        }
        map {
          start_at_long: "anfop8t55yqj"
          end_at_long: "ncuc6g1ei5s"
          height: 1389797794
          category: A
        }
      }
      elev_high: 4010043823
      elev_low: 1288471655
      hearth_data {
        average_hearth_rate: 2635679190
        min_hearth_rate: 2809557788
        max_hearth_rate: 2729517759
      }
    }
  }
  swim_query {
    athlete {
      id: 3266444016
      user {
        user_name: "h6one3"
        first_name: "b9u69meup6pf4zbnp0h"
        last_name: "ee9kh4vvr3mzuh8v3q"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "le567"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "k3em2w1gul6j4"
      }
      weight: 3934861226
      age: 722456414
    }
    segment {
      seg_id: 2957781088
      name: "i6gsbjkndv7vl4b"
      hearth_data {
        average_hearth_rate: 3469530481
        min_hearth_rate: 2144172496
        max_hearth_rate: 2039951082
      }
    }
  }
  run_query {
    athlete {
      id: 3320476386
      user {
        user_name: "xt7fz93x4r2kz3w"
        first_name: "73svmji06p6pp"
        last_name: "aompg"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "6qps9071"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "7s4umf"
      }
      weight: 2502929304
      age: 842091855
    }
    segment {
      seg_id: 2926049562
      name: "a8doolbw"
      route {
        elevation: 2555441512
        place {
          country: "wetfc3tiebhljt9"
          city: "xutt4vqg1dmjiki1"
          distance: 3009895694
        }
        map {
          start_at_long: "8ot4z7pj"
          end_at_long: "mp4hjc7pemsdr7o"
          height: 545690386
          category: A
        }
      }
      elev_high: 2100159679
      elev_low: 160510764
      hearth_data {
        average_hearth_rate: 2877254976
        min_hearth_rate: 1725553925
        max_hearth_rate: 4210636143
      }
    }
  }
  ski_query {
    athlete {
      id: 905430602
      user {
        user_name: "brrjk2bywn8hl"
        first_name: "n1qht346mjqypsf137"
        last_name: "h3z2042nbv595s1psxz2"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "djtcu"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "i7ijgqqn"
      }
      weight: 1828766029
      age: 3316364117
    }
    segment {
      seg_id: 2836866065
      name: "8baar338hcsupa"
      route {
        elevation: 3177697409
        place {
          country: "8pufg9ls9ex8fru3"
          city: "lk31vsj6s6"
          distance: 601053847
        }
        map {
          start_at_long: "kspeb"
          end_at_long: "sc6ffa"
          height: 2770399623
          category: A
        }
      }
      elev_high: 2929075595
      elev_low: 3885575310
      hearth_data {
        average_hearth_rate: 2570204409
        min_hearth_rate: 3655993642
        max_hearth_rate: 1526162027
      }
    }
  }
}
date: 1335101953

[DEBUG] [2020-11-10 10:19:01,722] [utils.py:62] [encode_message] MSG-DECODE - Message decoded b'w\x03\x00\x00\x08\x01\x10\x0f\x18\x0f"\x00*\xe6\x06\n\x80\x02\x12h\x08\x8f\xfe\x8f\xc6\r\x12%\n\x08nv6ymm4f\x12\x08h3iapk0u\x1a\x0ffv3xpb4fm68620l\x1a\x16\x08\x01\x12\x12bny6pello6bh68isqk"\x15\x08\x01\x12\x11iclulqe2wurzx26jl(\xd1\xf9\xba\xc3\r0\xb5\xc4\xa7\xc7\x01\x1a\x93\x01\x08\xeb\xef\xcb\xdb\x07\x12\x12rmnygabg97vclc6t2j\x1aW\x08\xcb\xa3\x82\xef\t\x12*\n\rekdpewaog94vh\x12\x13y0v27lv562vcp3750ys\x18\xbd\xc9\xce\xdf\x01\x1a#\n\x0canfop8t55yqj\x12\x0bncuc6g1ei5s\x18\xa2\xc3\xda\x96\x05 \x01 \xaf\xd3\x91\xf8\x0e(\xe7\x88\xb2\xe6\x042\x12\x08\xd6\x8b\xe5\xe8\t\x10\x9c\xe6\xd9\xbb\n\x18\xbf\xc5\xc4\x95\n\x12\x92\x01\x12c\x08\xf0\xf5\xc7\x95\x0c\x121\n\x06h6one3\x12\x13b9u69meup6pf4zbnp0h\x1a\x12ee9kh4vvr3mzuh8v3q\x1a\t\x08\x01\x12\x05le567"\x11\x08\x01\x12\rk3em2w1gul6j4(\xaa\xef\xa4\xd4\x0e0\xde\x9e\xbf\xd8\x02\x1a+\x08\xe0\xd0\xb0\x82\x0b\x12\x0fi6gsbjkndv7vl4b2\x12\x08\xf1\xaa\xb3\xf6\x0c\x10\xd0\xf3\xb5\xfe\x07\x18\xea\xdd\xdc\xcc\x07\x1a\xe1\x01\x12U\x08\xe2\xe5\xa9\xaf\x0c\x12\'\n\x0fxt7fz93x4r2kz3w\x12\r73svmji06p6pp\x1a\x05aompg\x1a\x0c\x08\x01\x12\x086qps9071"\n\x08\x01\x12\x067s4umf(\x98\xd7\xbe\xa9\t0\xcf\x9a\xc5\x91\x03\x1a\x87\x01\x08\x9a\xf2\x9f\xf3\n\x12\x08a8doolbw\x1aV\x08\xe8\xe2\xc3\xc2\t\x12)\n\x0fwetfc3tiebhljt9\x12\x10xutt4vqg1dmjiki1\x18\x8e\xba\x9d\x9b\x0b\x1a#\n\x088ot4z7pj\x12\x0fmp4hjc7pemsdr7o\x18\x92\xa6\x9a\x84\x02 \x01 \xbf\xc9\xb7\xe9\x07(\xac\xe6\xc4L2\x12\x08\xc0\xda\xfd\xdb\n\x10\x85\xba\xe7\xb6\x06\x18\xef\xea\xe4\xd7\x0f"\xe7\x01\x12f\x08\xca\x8c\xdf\xaf\x03\x129\n\rbrrjk2bywn8hl\x12\x12n1qht346mjqypsf137\x1a\x14h3z2042nbv595s1psxz2\x1a\t\x08\x01\x12\x05djtcu"\x0c\x08\x01\x12\x08i7ijgqqn(\xcd\x82\x83\xe8\x060\xd5\xe6\xae\xad\x0c\x1a}\x08\x91\xc8\xdc\xc8\n\x12\x0e8baar338hcsupa\x1aE\x08\x81\xa1\x9f\xeb\x0b\x12$\n\x108pufg9ls9ex8fru3\x12\nlk31vsj6s6\x18\x97\xb5\xcd\x9e\x02\x1a\x17\n\x05kspeb\x12\x06sc6ffa\x18\x87\xe3\x83\xa9\n \x01 \x8b\xcb\xd8\xf4\n(\x8e\xd9\xe4\xbc\x0e2\x12\x08\xf9\xe9\xc8\xc9\t\x10\xaa\x92\xa8\xcf\r\x18\xeb\xc4\xdd\xd7\x050\x81\x94\xd0\xfc\x04'
[DEBUG] [2020-11-10 10:19:01,775] [utils.py:57] [encode_message] MSG-ENCODE - Message to encode status: ARCHIVE
private: TRUE
id: 15
access_token: "\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,"
query_activities {
  bike_query {
    athlete {
      id: 3636723471
      user {
        user_name: "nv6ymm4f"
        first_name: "h3iapk0u"
        last_name: "fv3xpb4fm68620l"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "bny6pello6bh68isqk"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "iclulqe2wurzx26jl"
      }
      weight: 3631135953
      age: 417980981
    }
    segment {
      seg_id: 2071132139
      name: "rmnygabg97vclc6t2j"
      route {
        elevation: 2648740299
        place {
          country: "ekdpewaog94vh"
          city: "y0v27lv562vcp3750ys"
          distance: 468952253
        }
        map {
          start_at_long: "anfop8t55yqj"
          end_at_long: "ncuc6g1ei5s"
          height: 1389797794
          category: A
        }
      }
      elev_high: 4010043823
      elev_low: 1288471655
      hearth_data {
        average_hearth_rate: 2635679190
        min_hearth_rate: 2809557788
        max_hearth_rate: 2729517759
      }
    }
  }
  swim_query {
    athlete {
      id: 3266444016
      user {
        user_name: "h6one3"
        first_name: "b9u69meup6pf4zbnp0h"
        last_name: "ee9kh4vvr3mzuh8v3q"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "le567"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "k3em2w1gul6j4"
      }
      weight: 3934861226
      age: 722456414
    }
    segment {
      seg_id: 2957781088
      name: "i6gsbjkndv7vl4b"
      hearth_data {
        average_hearth_rate: 3469530481
        min_hearth_rate: 2144172496
        max_hearth_rate: 2039951082
      }
    }
  }
  run_query {
    athlete {
      id: 3320476386
      user {
        user_name: "xt7fz93x4r2kz3w"
        first_name: "73svmji06p6pp"
        last_name: "aompg"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "6qps9071"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "7s4umf"
      }
      weight: 2502929304
      age: 842091855
    }
    segment {
      seg_id: 2926049562
      name: "a8doolbw"
      route {
        elevation: 2555441512
        place {
          country: "wetfc3tiebhljt9"
          city: "xutt4vqg1dmjiki1"
          distance: 3009895694
        }
        map {
          start_at_long: "8ot4z7pj"
          end_at_long: "mp4hjc7pemsdr7o"
          height: 545690386
          category: A
        }
      }
      elev_high: 2100159679
      elev_low: 160510764
      hearth_data {
        average_hearth_rate: 2877254976
        min_hearth_rate: 1725553925
        max_hearth_rate: 4210636143
      }
    }
  }
  ski_query {
    athlete {
      id: 905430602
      user {
        user_name: "brrjk2bywn8hl"
        first_name: "n1qht346mjqypsf137"
        last_name: "h3z2042nbv595s1psxz2"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "djtcu"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "i7ijgqqn"
      }
      weight: 1828766029
      age: 3316364117
    }
    segment {
      seg_id: 2836866065
      name: "8baar338hcsupa"
      route {
        elevation: 3177697409
        place {
          country: "8pufg9ls9ex8fru3"
          city: "lk31vsj6s6"
          distance: 601053847
        }
        map {
          start_at_long: "kspeb"
          end_at_long: "sc6ffa"
          height: 2770399623
          category: A
        }
      }
      elev_high: 2929075595
      elev_low: 3885575310
      hearth_data {
        average_hearth_rate: 2570204409
        min_hearth_rate: 3655993642
        max_hearth_rate: 1526162027
      }
    }
  }
}
date: 1335101953

[DEBUG] [2020-11-10 10:19:01,776] [utils.py:62] [encode_message] MSG-DECODE - Message decoded b'x\x06\x00\x00\x08\x01\x10\x0f\x18\x0f"\x80\x06\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,*\xe6\x06\n\x80\x02\x12h\x08\x8f\xfe\x8f\xc6\r\x12%\n\x08nv6ymm4f\x12\x08h3iapk0u\x1a\x0ffv3xpb4fm68620l\x1a\x16\x08\x01\x12\x12bny6pello6bh68isqk"\x15\x08\x01\x12\x11iclulqe2wurzx26jl(\xd1\xf9\xba\xc3\r0\xb5\xc4\xa7\xc7\x01\x1a\x93\x01\x08\xeb\xef\xcb\xdb\x07\x12\x12rmnygabg97vclc6t2j\x1aW\x08\xcb\xa3\x82\xef\t\x12*\n\rekdpewaog94vh\x12\x13y0v27lv562vcp3750ys\x18\xbd\xc9\xce\xdf\x01\x1a#\n\x0canfop8t55yqj\x12\x0bncuc6g1ei5s\x18\xa2\xc3\xda\x96\x05 \x01 \xaf\xd3\x91\xf8\x0e(\xe7\x88\xb2\xe6\x042\x12\x08\xd6\x8b\xe5\xe8\t\x10\x9c\xe6\xd9\xbb\n\x18\xbf\xc5\xc4\x95\n\x12\x92\x01\x12c\x08\xf0\xf5\xc7\x95\x0c\x121\n\x06h6one3\x12\x13b9u69meup6pf4zbnp0h\x1a\x12ee9kh4vvr3mzuh8v3q\x1a\t\x08\x01\x12\x05le567"\x11\x08\x01\x12\rk3em2w1gul6j4(\xaa\xef\xa4\xd4\x0e0\xde\x9e\xbf\xd8\x02\x1a+\x08\xe0\xd0\xb0\x82\x0b\x12\x0fi6gsbjkndv7vl4b2\x12\x08\xf1\xaa\xb3\xf6\x0c\x10\xd0\xf3\xb5\xfe\x07\x18\xea\xdd\xdc\xcc\x07\x1a\xe1\x01\x12U\x08\xe2\xe5\xa9\xaf\x0c\x12\'\n\x0fxt7fz93x4r2kz3w\x12\r73svmji06p6pp\x1a\x05aompg\x1a\x0c\x08\x01\x12\x086qps9071"\n\x08\x01\x12\x067s4umf(\x98\xd7\xbe\xa9\t0\xcf\x9a\xc5\x91\x03\x1a\x87\x01\x08\x9a\xf2\x9f\xf3\n\x12\x08a8doolbw\x1aV\x08\xe8\xe2\xc3\xc2\t\x12)\n\x0fwetfc3tiebhljt9\x12\x10xutt4vqg1dmjiki1\x18\x8e\xba\x9d\x9b\x0b\x1a#\n\x088ot4z7pj\x12\x0fmp4hjc7pemsdr7o\x18\x92\xa6\x9a\x84\x02 \x01 \xbf\xc9\xb7\xe9\x07(\xac\xe6\xc4L2\x12\x08\xc0\xda\xfd\xdb\n\x10\x85\xba\xe7\xb6\x06\x18\xef\xea\xe4\xd7\x0f"\xe7\x01\x12f\x08\xca\x8c\xdf\xaf\x03\x129\n\rbrrjk2bywn8hl\x12\x12n1qht346mjqypsf137\x1a\x14h3z2042nbv595s1psxz2\x1a\t\x08\x01\x12\x05djtcu"\x0c\x08\x01\x12\x08i7ijgqqn(\xcd\x82\x83\xe8\x060\xd5\xe6\xae\xad\x0c\x1a}\x08\x91\xc8\xdc\xc8\n\x12\x0e8baar338hcsupa\x1aE\x08\x81\xa1\x9f\xeb\x0b\x12$\n\x108pufg9ls9ex8fru3\x12\nlk31vsj6s6\x18\x97\xb5\xcd\x9e\x02\x1a\x17\n\x05kspeb\x12\x06sc6ffa\x18\x87\xe3\x83\xa9\n \x01 \x8b\xcb\xd8\xf4\n(\x8e\xd9\xe4\xbc\x0e2\x12\x08\xf9\xe9\xc8\xc9\t\x10\xaa\x92\xa8\xcf\r\x18\xeb\xc4\xdd\xd7\x050\x81\x94\xd0\xfc\x04'
[DEBUG] [2020-11-10 10:19:01,846] [utils.py:57] [encode_message] MSG-ENCODE - Message to encode status: ARCHIVE
private: TRUE
id: 15
access_token: "\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,"
query_activities {
  bike_query {
    athlete {
      id: 3636723471
      user {
        user_name: "nv6ymm4f"
        first_name: "h3iapk0u"
        last_name: "fv3xpb4fm68620l"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "bny6pello6bh68isqk"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "iclulqe2wurzx26jl"
      }
      weight: 3631135953
      age: 417980981
    }
    segment {
      seg_id: 2071132139
      name: "rmnygabg97vclc6t2j"
      route {
        elevation: 2648740299
        place {
          country: "ekdpewaog94vh"
          city: "y0v27lv562vcp3750ys"
          distance: 468952253
        }
        map {
          start_at_long: "anfop8t55yqj"
          end_at_long: "ncuc6g1ei5s"
          height: 1389797794
          category: A
        }
      }
      elev_high: 4010043823
      elev_low: 1288471655
      hearth_data {
        average_hearth_rate: 2635679190
        min_hearth_rate: 2809557788
        max_hearth_rate: 2729517759
      }
    }
  }
  swim_query {
    athlete {
      id: 3266444016
      user {
        user_name: "h6one3"
        first_name: "b9u69meup6pf4zbnp0h"
        last_name: "ee9kh4vvr3mzuh8v3q"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "le567"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "k3em2w1gul6j4"
      }
      weight: 3934861226
      age: 722456414
    }
    segment {
      seg_id: 2957781088
      name: "i6gsbjkndv7vl4b"
      hearth_data {
        average_hearth_rate: 3469530481
        min_hearth_rate: 2144172496
        max_hearth_rate: 2039951082
      }
    }
  }
  run_query {
    athlete {
      id: 3320476386
      user {
        user_name: "xt7fz93x4r2kz3w"
        first_name: "73svmji06p6pp"
        last_name: "aompg"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "6qps9071"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "7s4umf"
      }
      weight: 2502929304
      age: 842091855
    }
    segment {
      seg_id: 2926049562
      name: "a8doolbw"
      route {
        elevation: 2555441512
        place {
          country: "wetfc3tiebhljt9"
          city: "xutt4vqg1dmjiki1"
          distance: 3009895694
        }
        map {
          start_at_long: "8ot4z7pj"
          end_at_long: "mp4hjc7pemsdr7o"
          height: 545690386
          category: A
        }
      }
      elev_high: 2100159679
      elev_low: 160510764
      hearth_data {
        average_hearth_rate: 2877254976
        min_hearth_rate: 1725553925
        max_hearth_rate: 4210636143
      }
    }
  }
  ski_query {
    athlete {
      id: 905430602
      user {
        user_name: "brrjk2bywn8hl"
        first_name: "n1qht346mjqypsf137"
        last_name: "h3z2042nbv595s1psxz2"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "djtcu"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "i7ijgqqn"
      }
      weight: 1828766029
      age: 3316364117
    }
    segment {
      seg_id: 2836866065
      name: "8baar338hcsupa"
      route {
        elevation: 3177697409
        place {
          country: "8pufg9ls9ex8fru3"
          city: "lk31vsj6s6"
          distance: 601053847
        }
        map {
          start_at_long: "kspeb"
          end_at_long: "sc6ffa"
          height: 2770399623
          category: A
        }
      }
      elev_high: 2929075595
      elev_low: 3885575310
      hearth_data {
        average_hearth_rate: 2570204409
        min_hearth_rate: 3655993642
        max_hearth_rate: 1526162027
      }
    }
  }
}
date: 1335101953

[DEBUG] [2020-11-10 10:19:01,846] [utils.py:62] [encode_message] MSG-DECODE - Message decoded b'\xd7\x03\x00\x00\x08\x01\x10\x0f\x18\x0f"`\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,*\xe6\x06\n\x80\x02\x12h\x08\x8f\xfe\x8f\xc6\r\x12%\n\x08nv6ymm4f\x12\x08h3iapk0u\x1a\x0ffv3xpb4fm68620l\x1a\x16\x08\x01\x12\x12bny6pello6bh68isqk"\x15\x08\x01\x12\x11iclulqe2wurzx26jl(\xd1\xf9\xba\xc3\r0\xb5\xc4\xa7\xc7\x01\x1a\x93\x01\x08\xeb\xef\xcb\xdb\x07\x12\x12rmnygabg97vclc6t2j\x1aW\x08\xcb\xa3\x82\xef\t\x12*\n\rekdpewaog94vh\x12\x13y0v27lv562vcp3750ys\x18\xbd\xc9\xce\xdf\x01\x1a#\n\x0canfop8t55yqj\x12\x0bncuc6g1ei5s\x18\xa2\xc3\xda\x96\x05 \x01 \xaf\xd3\x91\xf8\x0e(\xe7\x88\xb2\xe6\x042\x12\x08\xd6\x8b\xe5\xe8\t\x10\x9c\xe6\xd9\xbb\n\x18\xbf\xc5\xc4\x95\n\x12\x92\x01\x12c\x08\xf0\xf5\xc7\x95\x0c\x121\n\x06h6one3\x12\x13b9u69meup6pf4zbnp0h\x1a\x12ee9kh4vvr3mzuh8v3q\x1a\t\x08\x01\x12\x05le567"\x11\x08\x01\x12\rk3em2w1gul6j4(\xaa\xef\xa4\xd4\x0e0\xde\x9e\xbf\xd8\x02\x1a+\x08\xe0\xd0\xb0\x82\x0b\x12\x0fi6gsbjkndv7vl4b2\x12\x08\xf1\xaa\xb3\xf6\x0c\x10\xd0\xf3\xb5\xfe\x07\x18\xea\xdd\xdc\xcc\x07\x1a\xe1\x01\x12U\x08\xe2\xe5\xa9\xaf\x0c\x12\'\n\x0fxt7fz93x4r2kz3w\x12\r73svmji06p6pp\x1a\x05aompg\x1a\x0c\x08\x01\x12\x086qps9071"\n\x08\x01\x12\x067s4umf(\x98\xd7\xbe\xa9\t0\xcf\x9a\xc5\x91\x03\x1a\x87\x01\x08\x9a\xf2\x9f\xf3\n\x12\x08a8doolbw\x1aV\x08\xe8\xe2\xc3\xc2\t\x12)\n\x0fwetfc3tiebhljt9\x12\x10xutt4vqg1dmjiki1\x18\x8e\xba\x9d\x9b\x0b\x1a#\n\x088ot4z7pj\x12\x0fmp4hjc7pemsdr7o\x18\x92\xa6\x9a\x84\x02 \x01 \xbf\xc9\xb7\xe9\x07(\xac\xe6\xc4L2\x12\x08\xc0\xda\xfd\xdb\n\x10\x85\xba\xe7\xb6\x06\x18\xef\xea\xe4\xd7\x0f"\xe7\x01\x12f\x08\xca\x8c\xdf\xaf\x03\x129\n\rbrrjk2bywn8hl\x12\x12n1qht346mjqypsf137\x1a\x14h3z2042nbv595s1psxz2\x1a\t\x08\x01\x12\x05djtcu"\x0c\x08\x01\x12\x08i7ijgqqn(\xcd\x82\x83\xe8\x060\xd5\xe6\xae\xad\x0c\x1a}\x08\x91\xc8\xdc\xc8\n\x12\x0e8baar338hcsupa\x1aE\x08\x81\xa1\x9f\xeb\x0b\x12$\n\x108pufg9ls9ex8fru3\x12\nlk31vsj6s6\x18\x97\xb5\xcd\x9e\x02\x1a\x17\n\x05kspeb\x12\x06sc6ffa\x18\x87\xe3\x83\xa9\n \x01 \x8b\xcb\xd8\xf4\n(\x8e\xd9\xe4\xbc\x0e2\x12\x08\xf9\xe9\xc8\xc9\t\x10\xaa\x92\xa8\xcf\r\x18\xeb\xc4\xdd\xd7\x050\x81\x94\xd0\xfc\x04'
[DEBUG] [2020-11-10 10:19:01,898] [utils.py:57] [encode_message] MSG-ENCODE - Message to encode status: ARCHIVE
private: TRUE
id: 15
access_token: "\262\313,\262\313,\262\313,\262\313,"
query_activities {
  bike_query {
    athlete {
      id: 3636723471
      user {
        user_name: "nv6ymm4f"
        first_name: "h3iapk0u"
        last_name: "fv3xpb4fm68620l"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "bny6pello6bh68isqk"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "iclulqe2wurzx26jl"
      }
      weight: 3631135953
      age: 417980981
    }
    segment {
      seg_id: 2071132139
      name: "rmnygabg97vclc6t2j"
      route {
        elevation: 2648740299
        place {
          country: "ekdpewaog94vh"
          city: "y0v27lv562vcp3750ys"
          distance: 468952253
        }
        map {
          start_at_long: "anfop8t55yqj"
          end_at_long: "ncuc6g1ei5s"
          height: 1389797794
          category: A
        }
      }
      elev_high: 4010043823
      elev_low: 1288471655
      hearth_data {
        average_hearth_rate: 2635679190
        min_hearth_rate: 2809557788
        max_hearth_rate: 2729517759
      }
    }
  }
  swim_query {
    athlete {
      id: 3266444016
      user {
        user_name: "h6one3"
        first_name: "b9u69meup6pf4zbnp0h"
        last_name: "ee9kh4vvr3mzuh8v3q"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "le567"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "k3em2w1gul6j4"
      }
      weight: 3934861226
      age: 722456414
    }
    segment {
      seg_id: 2957781088
      name: "i6gsbjkndv7vl4b"
      hearth_data {
        average_hearth_rate: 3469530481
        min_hearth_rate: 2144172496
        max_hearth_rate: 2039951082
      }
    }
  }
  run_query {
    athlete {
      id: 3320476386
      user {
        user_name: "xt7fz93x4r2kz3w"
        first_name: "73svmji06p6pp"
        last_name: "aompg"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "6qps9071"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "7s4umf"
      }
      weight: 2502929304
      age: 842091855
    }
    segment {
      seg_id: 2926049562
      name: "a8doolbw"
      route {
        elevation: 2555441512
        place {
          country: "wetfc3tiebhljt9"
          city: "xutt4vqg1dmjiki1"
          distance: 3009895694
        }
        map {
          start_at_long: "8ot4z7pj"
          end_at_long: "mp4hjc7pemsdr7o"
          height: 545690386
          category: A
        }
      }
      elev_high: 2100159679
      elev_low: 160510764
      hearth_data {
        average_hearth_rate: 2877254976
        min_hearth_rate: 1725553925
        max_hearth_rate: 4210636143
      }
    }
  }
  ski_query {
    athlete {
      id: 905430602
      user {
        user_name: "brrjk2bywn8hl"
        first_name: "n1qht346mjqypsf137"
        last_name: "h3z2042nbv595s1psxz2"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "djtcu"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "i7ijgqqn"
      }
      weight: 1828766029
      age: 3316364117
    }
    segment {
      seg_id: 2836866065
      name: "8baar338hcsupa"
      route {
        elevation: 3177697409
        place {
          country: "8pufg9ls9ex8fru3"
          city: "lk31vsj6s6"
          distance: 601053847
        }
        map {
          start_at_long: "kspeb"
          end_at_long: "sc6ffa"
          height: 2770399623
          category: A
        }
      }
      elev_high: 2929075595
      elev_low: 3885575310
      hearth_data {
        average_hearth_rate: 2570204409
        min_hearth_rate: 3655993642
        max_hearth_rate: 1526162027
      }
    }
  }
}
date: 1335101953

[DEBUG] [2020-11-10 10:19:01,898] [utils.py:62] [encode_message] MSG-DECODE - Message decoded b'\x83\x03\x00\x00\x08\x01\x10\x0f\x18\x0f"\x0c\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,*\xe6\x06\n\x80\x02\x12h\x08\x8f\xfe\x8f\xc6\r\x12%\n\x08nv6ymm4f\x12\x08h3iapk0u\x1a\x0ffv3xpb4fm68620l\x1a\x16\x08\x01\x12\x12bny6pello6bh68isqk"\x15\x08\x01\x12\x11iclulqe2wurzx26jl(\xd1\xf9\xba\xc3\r0\xb5\xc4\xa7\xc7\x01\x1a\x93\x01\x08\xeb\xef\xcb\xdb\x07\x12\x12rmnygabg97vclc6t2j\x1aW\x08\xcb\xa3\x82\xef\t\x12*\n\rekdpewaog94vh\x12\x13y0v27lv562vcp3750ys\x18\xbd\xc9\xce\xdf\x01\x1a#\n\x0canfop8t55yqj\x12\x0bncuc6g1ei5s\x18\xa2\xc3\xda\x96\x05 \x01 \xaf\xd3\x91\xf8\x0e(\xe7\x88\xb2\xe6\x042\x12\x08\xd6\x8b\xe5\xe8\t\x10\x9c\xe6\xd9\xbb\n\x18\xbf\xc5\xc4\x95\n\x12\x92\x01\x12c\x08\xf0\xf5\xc7\x95\x0c\x121\n\x06h6one3\x12\x13b9u69meup6pf4zbnp0h\x1a\x12ee9kh4vvr3mzuh8v3q\x1a\t\x08\x01\x12\x05le567"\x11\x08\x01\x12\rk3em2w1gul6j4(\xaa\xef\xa4\xd4\x0e0\xde\x9e\xbf\xd8\x02\x1a+\x08\xe0\xd0\xb0\x82\x0b\x12\x0fi6gsbjkndv7vl4b2\x12\x08\xf1\xaa\xb3\xf6\x0c\x10\xd0\xf3\xb5\xfe\x07\x18\xea\xdd\xdc\xcc\x07\x1a\xe1\x01\x12U\x08\xe2\xe5\xa9\xaf\x0c\x12\'\n\x0fxt7fz93x4r2kz3w\x12\r73svmji06p6pp\x1a\x05aompg\x1a\x0c\x08\x01\x12\x086qps9071"\n\x08\x01\x12\x067s4umf(\x98\xd7\xbe\xa9\t0\xcf\x9a\xc5\x91\x03\x1a\x87\x01\x08\x9a\xf2\x9f\xf3\n\x12\x08a8doolbw\x1aV\x08\xe8\xe2\xc3\xc2\t\x12)\n\x0fwetfc3tiebhljt9\x12\x10xutt4vqg1dmjiki1\x18\x8e\xba\x9d\x9b\x0b\x1a#\n\x088ot4z7pj\x12\x0fmp4hjc7pemsdr7o\x18\x92\xa6\x9a\x84\x02 \x01 \xbf\xc9\xb7\xe9\x07(\xac\xe6\xc4L2\x12\x08\xc0\xda\xfd\xdb\n\x10\x85\xba\xe7\xb6\x06\x18\xef\xea\xe4\xd7\x0f"\xe7\x01\x12f\x08\xca\x8c\xdf\xaf\x03\x129\n\rbrrjk2bywn8hl\x12\x12n1qht346mjqypsf137\x1a\x14h3z2042nbv595s1psxz2\x1a\t\x08\x01\x12\x05djtcu"\x0c\x08\x01\x12\x08i7ijgqqn(\xcd\x82\x83\xe8\x060\xd5\xe6\xae\xad\x0c\x1a}\x08\x91\xc8\xdc\xc8\n\x12\x0e8baar338hcsupa\x1aE\x08\x81\xa1\x9f\xeb\x0b\x12$\n\x108pufg9ls9ex8fru3\x12\nlk31vsj6s6\x18\x97\xb5\xcd\x9e\x02\x1a\x17\n\x05kspeb\x12\x06sc6ffa\x18\x87\xe3\x83\xa9\n \x01 \x8b\xcb\xd8\xf4\n(\x8e\xd9\xe4\xbc\x0e2\x12\x08\xf9\xe9\xc8\xc9\t\x10\xaa\x92\xa8\xcf\r\x18\xeb\xc4\xdd\xd7\x050\x81\x94\xd0\xfc\x04'
[DEBUG] [2020-11-10 10:19:01,959] [utils.py:57] [encode_message] MSG-ENCODE - Message to encode status: ARCHIVE
private: TRUE
id: 15
access_token: "\262"
query_activities {
  bike_query {
    athlete {
      id: 3636723471
      user {
        user_name: "nv6ymm4f"
        first_name: "h3iapk0u"
        last_name: "fv3xpb4fm68620l"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "bny6pello6bh68isqk"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "iclulqe2wurzx26jl"
      }
      weight: 3631135953
      age: 417980981
    }
    segment {
      seg_id: 2071132139
      name: "rmnygabg97vclc6t2j"
      route {
        elevation: 2648740299
        place {
          country: "ekdpewaog94vh"
          city: "y0v27lv562vcp3750ys"
          distance: 468952253
        }
        map {
          start_at_long: "anfop8t55yqj"
          end_at_long: "ncuc6g1ei5s"
          height: 1389797794
          category: A
        }
      }
      elev_high: 4010043823
      elev_low: 1288471655
      hearth_data {
        average_hearth_rate: 2635679190
        min_hearth_rate: 2809557788
        max_hearth_rate: 2729517759
      }
    }
  }
  swim_query {
    athlete {
      id: 3266444016
      user {
        user_name: "h6one3"
        first_name: "b9u69meup6pf4zbnp0h"
        last_name: "ee9kh4vvr3mzuh8v3q"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "le567"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "k3em2w1gul6j4"
      }
      weight: 3934861226
      age: 722456414
    }
    segment {
      seg_id: 2957781088
      name: "i6gsbjkndv7vl4b"
      hearth_data {
        average_hearth_rate: 3469530481
        min_hearth_rate: 2144172496
        max_hearth_rate: 2039951082
      }
    }
  }
  run_query {
    athlete {
      id: 3320476386
      user {
        user_name: "xt7fz93x4r2kz3w"
        first_name: "73svmji06p6pp"
        last_name: "aompg"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "6qps9071"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "7s4umf"
      }
      weight: 2502929304
      age: 842091855
    }
    segment {
      seg_id: 2926049562
      name: "a8doolbw"
      route {
        elevation: 2555441512
        place {
          country: "wetfc3tiebhljt9"
          city: "xutt4vqg1dmjiki1"
          distance: 3009895694
        }
        map {
          start_at_long: "8ot4z7pj"
          end_at_long: "mp4hjc7pemsdr7o"
          height: 545690386
          category: A
        }
      }
      elev_high: 2100159679
      elev_low: 160510764
      hearth_data {
        average_hearth_rate: 2877254976
        min_hearth_rate: 1725553925
        max_hearth_rate: 4210636143
      }
    }
  }
  ski_query {
    athlete {
      id: 905430602
      user {
        user_name: "brrjk2bywn8hl"
        first_name: "n1qht346mjqypsf137"
        last_name: "h3z2042nbv595s1psxz2"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "djtcu"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "i7ijgqqn"
      }
      weight: 1828766029
      age: 3316364117
    }
    segment {
      seg_id: 2836866065
      name: "8baar338hcsupa"
      route {
        elevation: 3177697409
        place {
          country: "8pufg9ls9ex8fru3"
          city: "lk31vsj6s6"
          distance: 601053847
        }
        map {
          start_at_long: "kspeb"
          end_at_long: "sc6ffa"
          height: 2770399623
          category: A
        }
      }
      elev_high: 2929075595
      elev_low: 3885575310
      hearth_data {
        average_hearth_rate: 2570204409
        min_hearth_rate: 3655993642
        max_hearth_rate: 1526162027
      }
    }
  }
}
date: 1335101953

[DEBUG] [2020-11-10 10:19:01,960] [utils.py:62] [encode_message] MSG-DECODE - Message decoded b'x\x03\x00\x00\x08\x01\x10\x0f\x18\x0f"\x01\xb2*\xe6\x06\n\x80\x02\x12h\x08\x8f\xfe\x8f\xc6\r\x12%\n\x08nv6ymm4f\x12\x08h3iapk0u\x1a\x0ffv3xpb4fm68620l\x1a\x16\x08\x01\x12\x12bny6pello6bh68isqk"\x15\x08\x01\x12\x11iclulqe2wurzx26jl(\xd1\xf9\xba\xc3\r0\xb5\xc4\xa7\xc7\x01\x1a\x93\x01\x08\xeb\xef\xcb\xdb\x07\x12\x12rmnygabg97vclc6t2j\x1aW\x08\xcb\xa3\x82\xef\t\x12*\n\rekdpewaog94vh\x12\x13y0v27lv562vcp3750ys\x18\xbd\xc9\xce\xdf\x01\x1a#\n\x0canfop8t55yqj\x12\x0bncuc6g1ei5s\x18\xa2\xc3\xda\x96\x05 \x01 \xaf\xd3\x91\xf8\x0e(\xe7\x88\xb2\xe6\x042\x12\x08\xd6\x8b\xe5\xe8\t\x10\x9c\xe6\xd9\xbb\n\x18\xbf\xc5\xc4\x95\n\x12\x92\x01\x12c\x08\xf0\xf5\xc7\x95\x0c\x121\n\x06h6one3\x12\x13b9u69meup6pf4zbnp0h\x1a\x12ee9kh4vvr3mzuh8v3q\x1a\t\x08\x01\x12\x05le567"\x11\x08\x01\x12\rk3em2w1gul6j4(\xaa\xef\xa4\xd4\x0e0\xde\x9e\xbf\xd8\x02\x1a+\x08\xe0\xd0\xb0\x82\x0b\x12\x0fi6gsbjkndv7vl4b2\x12\x08\xf1\xaa\xb3\xf6\x0c\x10\xd0\xf3\xb5\xfe\x07\x18\xea\xdd\xdc\xcc\x07\x1a\xe1\x01\x12U\x08\xe2\xe5\xa9\xaf\x0c\x12\'\n\x0fxt7fz93x4r2kz3w\x12\r73svmji06p6pp\x1a\x05aompg\x1a\x0c\x08\x01\x12\x086qps9071"\n\x08\x01\x12\x067s4umf(\x98\xd7\xbe\xa9\t0\xcf\x9a\xc5\x91\x03\x1a\x87\x01\x08\x9a\xf2\x9f\xf3\n\x12\x08a8doolbw\x1aV\x08\xe8\xe2\xc3\xc2\t\x12)\n\x0fwetfc3tiebhljt9\x12\x10xutt4vqg1dmjiki1\x18\x8e\xba\x9d\x9b\x0b\x1a#\n\x088ot4z7pj\x12\x0fmp4hjc7pemsdr7o\x18\x92\xa6\x9a\x84\x02 \x01 \xbf\xc9\xb7\xe9\x07(\xac\xe6\xc4L2\x12\x08\xc0\xda\xfd\xdb\n\x10\x85\xba\xe7\xb6\x06\x18\xef\xea\xe4\xd7\x0f"\xe7\x01\x12f\x08\xca\x8c\xdf\xaf\x03\x129\n\rbrrjk2bywn8hl\x12\x12n1qht346mjqypsf137\x1a\x14h3z2042nbv595s1psxz2\x1a\t\x08\x01\x12\x05djtcu"\x0c\x08\x01\x12\x08i7ijgqqn(\xcd\x82\x83\xe8\x060\xd5\xe6\xae\xad\x0c\x1a}\x08\x91\xc8\xdc\xc8\n\x12\x0e8baar338hcsupa\x1aE\x08\x81\xa1\x9f\xeb\x0b\x12$\n\x108pufg9ls9ex8fru3\x12\nlk31vsj6s6\x18\x97\xb5\xcd\x9e\x02\x1a\x17\n\x05kspeb\x12\x06sc6ffa\x18\x87\xe3\x83\xa9\n \x01 \x8b\xcb\xd8\xf4\n(\x8e\xd9\xe4\xbc\x0e2\x12\x08\xf9\xe9\xc8\xc9\t\x10\xaa\x92\xa8\xcf\r\x18\xeb\xc4\xdd\xd7\x050\x81\x94\xd0\xfc\x04'
[DEBUG] [2020-11-10 10:19:02,026] [utils.py:57] [encode_message] MSG-ENCODE - Message to encode status: ARCHIVE
private: TRUE
id: 15
access_token
query_activities {
  bike_query {
    athlete {
      id: 3636723471
      user {
        user_name: "nv6ymm4f"
        first_name: "h3iapk0u"
        last_name: "fv3xpb4fm68620l"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "bny6pello6bh68isqk"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "iclulqe2wurzx26jl"
      }
      weight: 3631135953
      age: 417980981
    }
    segment {
      seg_id: 2071132139
      name: "rmnygabg97vclc6t2j"
      route {
        elevation: 2648740299
        place {
          country: "ekdpewaog94vh"
          city: "y0v27lv562vcp3750ys"
          distance: 468952253
        }
        map {
          start_at_long: "anfop8t55yqj"
          end_at_long: "ncuc6g1ei5s"
          height: 1389797794
          category: A
        }
      }
      elev_high: 4010043823
      elev_low: 1288471655
      hearth_data {
        average_hearth_rate: 2635679190
        min_hearth_rate: 2809557788
        max_hearth_rate: 2729517759
      }
    }
  }
  swim_query {
    athlete {
      id: 3266444016
      user {
        user_name: "h6one3"
        first_name: "b9u69meup6pf4zbnp0h"
        last_name: "ee9kh4vvr3mzuh8v3q"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "le567"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "k3em2w1gul6j4"
      }
      weight: 3934861226
      age: 722456414
    }
    segment {
      seg_id: 2957781088
      name: "i6gsbjkndv7vl4b"
      hearth_data {
        average_hearth_rate: 3469530481
        min_hearth_rate: 2144172496
        max_hearth_rate: 2039951082
      }
    }
  }
  run_query {
    athlete {
      id: 3320476386
      user {
        user_name: "xt7fz93x4r2kz3w"
        first_name: "73svmji06p6pp"
        last_name: "aompg"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "6qps9071"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "7s4umf"
      }
      weight: 2502929304
      age: 842091855
    }
    segment {
      seg_id: 2926049562
      name: "a8doolbw"
      route {
        elevation: 2555441512
        place {
          country: "wetfc3tiebhljt9"
          city: "xutt4vqg1dmjiki1"
          distance: 3009895694
        }
        map {
          start_at_long: "8ot4z7pj"
          end_at_long: "mp4hjc7pemsdr7o"
          height: 545690386
          category: A
        }
      }
      elev_high: 2100159679
      elev_low: 160510764
      hearth_data {
        average_hearth_rate: 2877254976
        min_hearth_rate: 1725553925
        max_hearth_rate: 4210636143
      }
    }
  }
  ski_query {
    athlete {
      id: 905430602
      user {
        user_name: "brrjk2bywn8hl"
        first_name: "n1qht346mjqypsf137"
        last_name: "h3z2042nbv595s1psxz2"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "djtcu"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "i7ijgqqn"
      }
      weight: 1828766029
      age: 3316364117
    }
    segment {
      seg_id: 2836866065
      name: "8baar338hcsupa"
      route {
        elevation: 3177697409
        place {
          country: "8pufg9ls9ex8fru3"
          city: "lk31vsj6s6"
          distance: 601053847
        }
        map {
          start_at_long: "kspeb"
          end_at_long: "sc6ffa"
          height: 2770399623
          category: A
        }
      }
      elev_high: 2929075595
      elev_low: 3885575310
      hearth_data {
        average_hearth_rate: 2570204409
        min_hearth_rate: 3655993642
        max_hearth_rate: 1526162027
      }
    }
  }
}
date: 1335101953

[DEBUG] [2020-11-10 10:19:02,026] [utils.py:62] [encode_message] MSG-DECODE - Message decoded b'x\x06\x00\x00\x08\x01\x10\x0f\x18\x0f"\x80\x06\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,*\xe6\x06\n\x80\x02\x12h\x08\x8f\xfe\x8f\xc6\r\x12%\n\x08nv6ymm4f\x12\x08h3iapk0u\x1a\x0ffv3xpb4fm68620l\x1a\x16\x08\x01\x12\x12bny6pello6bh68isqk"\x15\x08\x01\x12\x11iclulqe2wurzx26jl(\xd1\xf9\xba\xc3\r0\xb5\xc4\xa7\xc7\x01\x1a\x93\x01\x08\xeb\xef\xcb\xdb\x07\x12\x12rmnygabg97vclc6t2j\x1aW\x08\xcb\xa3\x82\xef\t\x12*\n\rekdpewaog94vh\x12\x13y0v27lv562vcp3750ys\x18\xbd\xc9\xce\xdf\x01\x1a#\n\x0canfop8t55yqj\x12\x0bncuc6g1ei5s\x18\xa2\xc3\xda\x96\x05 \x01 \xaf\xd3\x91\xf8\x0e(\xe7\x88\xb2\xe6\x042\x12\x08\xd6\x8b\xe5\xe8\t\x10\x9c\xe6\xd9\xbb\n\x18\xbf\xc5\xc4\x95\n\x12\x92\x01\x12c\x08\xf0\xf5\xc7\x95\x0c\x121\n\x06h6one3\x12\x13b9u69meup6pf4zbnp0h\x1a\x12ee9kh4vvr3mzuh8v3q\x1a\t\x08\x01\x12\x05le567"\x11\x08\x01\x12\rk3em2w1gul6j4(\xaa\xef\xa4\xd4\x0e0\xde\x9e\xbf\xd8\x02\x1a+\x08\xe0\xd0\xb0\x82\x0b\x12\x0fi6gsbjkndv7vl4b2\x12\x08\xf1\xaa\xb3\xf6\x0c\x10\xd0\xf3\xb5\xfe\x07\x18\xea\xdd\xdc\xcc\x07\x1a\xe1\x01\x12U\x08\xe2\xe5\xa9\xaf\x0c\x12\'\n\x0fxt7fz93x4r2kz3w\x12\r73svmji06p6pp\x1a\x05aompg\x1a\x0c\x08\x01\x12\x086qps9071"\n\x08\x01\x12\x067s4umf(\x98\xd7\xbe\xa9\t0\xcf\x9a\xc5\x91\x03\x1a\x87\x01\x08\x9a\xf2\x9f\xf3\n\x12\x08a8doolbw\x1aV\x08\xe8\xe2\xc3\xc2\t\x12)\n\x0fwetfc3tiebhljt9\x12\x10xutt4vqg1dmjiki1\x18\x8e\xba\x9d\x9b\x0b\x1a#\n\x088ot4z7pj\x12\x0fmp4hjc7pemsdr7o\x18\x92\xa6\x9a\x84\x02 \x01 \xbf\xc9\xb7\xe9\x07(\xac\xe6\xc4L2\x12\x08\xc0\xda\xfd\xdb\n\x10\x85\xba\xe7\xb6\x06\x18\xef\xea\xe4\xd7\x0f"\xe7\x01\x12f\x08\xca\x8c\xdf\xaf\x03\x129\n\rbrrjk2bywn8hl\x12\x12n1qht346mjqypsf137\x1a\x14h3z2042nbv595s1psxz2\x1a\t\x08\x01\x12\x05djtcu"\x0c\x08\x01\x12\x08i7ijgqqn(\xcd\x82\x83\xe8\x060\xd5\xe6\xae\xad\x0c\x1a}\x08\x91\xc8\xdc\xc8\n\x12\x0e8baar338hcsupa\x1aE\x08\x81\xa1\x9f\xeb\x0b\x12$\n\x108pufg9ls9ex8fru3\x12\nlk31vsj6s6\x18\x97\xb5\xcd\x9e\x02\x1a\x17\n\x05kspeb\x12\x06sc6ffa\x18\x87\xe3\x83\xa9\n \x01 \x8b\xcb\xd8\xf4\n(\x8e\xd9\xe4\xbc\x0e2\x12\x08\xf9\xe9\xc8\xc9\t\x10\xaa\x92\xa8\xcf\r\x18\xeb\xc4\xdd\xd7\x050\x81\x94\xd0\xfc\x04'
[DEBUG] [2020-11-10 10:19:02,074] [utils.py:57] [encode_message] MSG-ENCODE - Message to encode status: ARCHIVE
private: TRUE
id: 15
access_token: "\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,\262\313,"
query_activities {
  bike_query {
    athlete {
      id: 3636723471
      user {
        user_name: "nv6ymm4f"
        first_name: "h3iapk0u"
        last_name: "fv3xpb4fm68620l"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "bny6pello6bh68isqk"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "iclulqe2wurzx26jl"
      }
      weight: 3631135953
      age: 417980981
    }
    segment {
      seg_id: 2071132139
      name: "rmnygabg97vclc6t2j"
      route {
        elevation: 2648740299
        place {
          country: "ekdpewaog94vh"
          city: "y0v27lv562vcp3750ys"
          distance: 468952253
        }
        map {
          start_at_long: "anfop8t55yqj"
          end_at_long: "ncuc6g1ei5s"
          height: 1389797794
          category: A
        }
      }
      elev_high: 4010043823
      elev_low: 1288471655
      hearth_data {
        average_hearth_rate: 2635679190
        min_hearth_rate: 2809557788
        max_hearth_rate: 2729517759
      }
    }
  }
  swim_query {
    athlete {
      id: 3266444016
      user {
        user_name: "h6one3"
        first_name: "b9u69meup6pf4zbnp0h"
        last_name: "ee9kh4vvr3mzuh8v3q"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "le567"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "k3em2w1gul6j4"
      }
      weight: 3934861226
      age: 722456414
    }
    segment {
      seg_id: 2957781088
      name: "i6gsbjkndv7vl4b"
      hearth_data {
        average_hearth_rate: 3469530481
        min_hearth_rate: 2144172496
        max_hearth_rate: 2039951082
      }
    }
  }
  run_query {
    athlete {
      id: 3320476386
      user {
        user_name: "xt7fz93x4r2kz3w"
        first_name: "73svmji06p6pp"
        last_name: "aompg"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "6qps9071"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "7s4umf"
      }
      weight: 2502929304
      age: 842091855
    }
    segment {
      seg_id: 2926049562
      name: "a8doolbw"
      route {
        elevation: 2555441512
        place {
          country: "wetfc3tiebhljt9"
          city: "xutt4vqg1dmjiki1"
          distance: 3009895694
        }
        map {
          start_at_long: "8ot4z7pj"
          end_at_long: "mp4hjc7pemsdr7o"
          height: 545690386
          category: A
        }
      }
      elev_high: 2100159679
      elev_low: 160510764
      hearth_data {
        average_hearth_rate: 2877254976
        min_hearth_rate: 1725553925
        max_hearth_rate: 4210636143
      }
    }
  }
  ski_query {
    athlete {
      id: 905430602
      user {
        user_name: "brrjk2bywn8hl"
        first_name: "n1qht346mjqypsf137"
        last_name: "h3z2042nbv595s1psxz2"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "djtcu"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "i7ijgqqn"
      }
      weight: 1828766029
      age: 3316364117
    }
    segment {
      seg_id: 2836866065
      name: "8baar338hcsupa"
      route {
        elevation: 3177697409
        place {
          country: "8pufg9ls9ex8fru3"
          city: "lk31vsj6s6"
          distance: 601053847
        }
        map {
          start_at_long: "kspeb"
          end_at_long: "sc6ffa"
          height: 2770399623
          category: A
        }
      }
      elev_high: 2929075595
      elev_low: 3885575310
      hearth_data {
        average_hearth_rate: 2570204409
        min_hearth_rate: 3655993642
        max_hearth_rate: 1526162027
      }
    }
  }
}
date: 1335101953

[DEBUG] [2020-11-10 10:19:02,114] [utils.py:62] [encode_message] MSG-DECODE - Message decoded b'\xd7\x03\x00\x00\x08\x01\x10\x0f\x18\x0f"`\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,*\xe6\x06\n\x80\x02\x12h\x08\x8f\xfe\x8f\xc6\r\x12%\n\x08nv6ymm4f\x12\x08h3iapk0u\x1a\x0ffv3xpb4fm68620l\x1a\x16\x08\x01\x12\x12bny6pello6bh68isqk"\x15\x08\x01\x12\x11iclulqe2wurzx26jl(\xd1\xf9\xba\xc3\r0\xb5\xc4\xa7\xc7\x01\x1a\x93\x01\x08\xeb\xef\xcb\xdb\x07\x12\x12rmnygabg97vclc6t2j\x1aW\x08\xcb\xa3\x82\xef\t\x12*\n\rekdpewaog94vh\x12\x13y0v27lv562vcp3750ys\x18\xbd\xc9\xce\xdf\x01\x1a#\n\x0canfop8t55yqj\x12\x0bncuc6g1ei5s\x18\xa2\xc3\xda\x96\x05 \x01 \xaf\xd3\x91\xf8\x0e(\xe7\x88\xb2\xe6\x042\x12\x08\xd6\x8b\xe5\xe8\t\x10\x9c\xe6\xd9\xbb\n\x18\xbf\xc5\xc4\x95\n\x12\x92\x01\x12c\x08\xf0\xf5\xc7\x95\x0c\x121\n\x06h6one3\x12\x13b9u69meup6pf4zbnp0h\x1a\x12ee9kh4vvr3mzuh8v3q\x1a\t\x08\x01\x12\x05le567"\x11\x08\x01\x12\rk3em2w1gul6j4(\xaa\xef\xa4\xd4\x0e0\xde\x9e\xbf\xd8\x02\x1a+\x08\xe0\xd0\xb0\x82\x0b\x12\x0fi6gsbjkndv7vl4b2\x12\x08\xf1\xaa\xb3\xf6\x0c\x10\xd0\xf3\xb5\xfe\x07\x18\xea\xdd\xdc\xcc\x07\x1a\xe1\x01\x12U\x08\xe2\xe5\xa9\xaf\x0c\x12\'\n\x0fxt7fz93x4r2kz3w\x12\r73svmji06p6pp\x1a\x05aompg\x1a\x0c\x08\x01\x12\x086qps9071"\n\x08\x01\x12\x067s4umf(\x98\xd7\xbe\xa9\t0\xcf\x9a\xc5\x91\x03\x1a\x87\x01\x08\x9a\xf2\x9f\xf3\n\x12\x08a8doolbw\x1aV\x08\xe8\xe2\xc3\xc2\t\x12)\n\x0fwetfc3tiebhljt9\x12\x10xutt4vqg1dmjiki1\x18\x8e\xba\x9d\x9b\x0b\x1a#\n\x088ot4z7pj\x12\x0fmp4hjc7pemsdr7o\x18\x92\xa6\x9a\x84\x02 \x01 \xbf\xc9\xb7\xe9\x07(\xac\xe6\xc4L2\x12\x08\xc0\xda\xfd\xdb\n\x10\x85\xba\xe7\xb6\x06\x18\xef\xea\xe4\xd7\x0f"\xe7\x01\x12f\x08\xca\x8c\xdf\xaf\x03\x129\n\rbrrjk2bywn8hl\x12\x12n1qht346mjqypsf137\x1a\x14h3z2042nbv595s1psxz2\x1a\t\x08\x01\x12\x05djtcu"\x0c\x08\x01\x12\x08i7ijgqqn(\xcd\x82\x83\xe8\x060\xd5\xe6\xae\xad\x0c\x1a}\x08\x91\xc8\xdc\xc8\n\x12\x0e8baar338hcsupa\x1aE\x08\x81\xa1\x9f\xeb\x0b\x12$\n\x108pufg9ls9ex8fru3\x12\nlk31vsj6s6\x18\x97\xb5\xcd\x9e\x02\x1a\x17\n\x05kspeb\x12\x06sc6ffa\x18\x87\xe3\x83\xa9\n \x01 \x8b\xcb\xd8\xf4\n(\x8e\xd9\xe4\xbc\x0e2\x12\x08\xf9\xe9\xc8\xc9\t\x10\xaa\x92\xa8\xcf\r\x18\xeb\xc4\xdd\xd7\x050\x81\x94\xd0\xfc\x04'
[DEBUG] [2020-11-10 10:19:02,172] [utils.py:57] [encode_message] MSG-ENCODE - Message to encode status: ARCHIVE
private: TRUE
id: 15
access_token: "\262\313,\262\313,\262\313,\262\313,"
query_activities {
  bike_query {
    athlete {
      id: 3636723471
      user {
        user_name: "nv6ymm4f"
        first_name: "h3iapk0u"
        last_name: "fv3xpb4fm68620l"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "bny6pello6bh68isqk"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "iclulqe2wurzx26jl"
      }
      weight: 3631135953
      age: 417980981
    }
    segment {
      seg_id: 2071132139
      name: "rmnygabg97vclc6t2j"
      route {
        elevation: 2648740299
        place {
          country: "ekdpewaog94vh"
          city: "y0v27lv562vcp3750ys"
          distance: 468952253
        }
        map {
          start_at_long: "anfop8t55yqj"
          end_at_long: "ncuc6g1ei5s"
          height: 1389797794
          category: A
        }
      }
      elev_high: 4010043823
      elev_low: 1288471655
      hearth_data {
        average_hearth_rate: 2635679190
        min_hearth_rate: 2809557788
        max_hearth_rate: 2729517759
      }
    }
  }
  swim_query {
    athlete {
      id: 3266444016
      user {
        user_name: "h6one3"
        first_name: "b9u69meup6pf4zbnp0h"
        last_name: "ee9kh4vvr3mzuh8v3q"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "le567"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "k3em2w1gul6j4"
      }
      weight: 3934861226
      age: 722456414
    }
    segment {
      seg_id: 2957781088
      name: "i6gsbjkndv7vl4b"
      hearth_data {
        average_hearth_rate: 3469530481
        min_hearth_rate: 2144172496
        max_hearth_rate: 2039951082
      }
    }
  }
  run_query {
    athlete {
      id: 3320476386
      user {
        user_name: "xt7fz93x4r2kz3w"
        first_name: "73svmji06p6pp"
        last_name: "aompg"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "6qps9071"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "7s4umf"
      }
      weight: 2502929304
      age: 842091855
    }
    segment {
      seg_id: 2926049562
      name: "a8doolbw"
      route {
        elevation: 2555441512
        place {
          country: "wetfc3tiebhljt9"
          city: "xutt4vqg1dmjiki1"
          distance: 3009895694
        }
        map {
          start_at_long: "8ot4z7pj"
          end_at_long: "mp4hjc7pemsdr7o"
          height: 545690386
          category: A
        }
      }
      elev_high: 2100159679
      elev_low: 160510764
      hearth_data {
        average_hearth_rate: 2877254976
        min_hearth_rate: 1725553925
        max_hearth_rate: 4210636143
      }
    }
  }
  ski_query {
    athlete {
      id: 905430602
      user {
        user_name: "brrjk2bywn8hl"
        first_name: "n1qht346mjqypsf137"
        last_name: "h3z2042nbv595s1psxz2"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "djtcu"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "i7ijgqqn"
      }
      weight: 1828766029
      age: 3316364117
    }
    segment {
      seg_id: 2836866065
      name: "8baar338hcsupa"
      route {
        elevation: 3177697409
        place {
          country: "8pufg9ls9ex8fru3"
          city: "lk31vsj6s6"
          distance: 601053847
        }
        map {
          start_at_long: "kspeb"
          end_at_long: "sc6ffa"
          height: 2770399623
          category: A
        }
      }
      elev_high: 2929075595
      elev_low: 3885575310
      hearth_data {
        average_hearth_rate: 2570204409
        min_hearth_rate: 3655993642
        max_hearth_rate: 1526162027
      }
    }
  }
}
date: 1335101953

[DEBUG] [2020-11-10 10:19:02,172] [utils.py:62] [encode_message] MSG-DECODE - Message decoded b'\x83\x03\x00\x00\x08\x01\x10\x0f\x18\x0f"\x0c\xb2\xcb,\xb2\xcb,\xb2\xcb,\xb2\xcb,*\xe6\x06\n\x80\x02\x12h\x08\x8f\xfe\x8f\xc6\r\x12%\n\x08nv6ymm4f\x12\x08h3iapk0u\x1a\x0ffv3xpb4fm68620l\x1a\x16\x08\x01\x12\x12bny6pello6bh68isqk"\x15\x08\x01\x12\x11iclulqe2wurzx26jl(\xd1\xf9\xba\xc3\r0\xb5\xc4\xa7\xc7\x01\x1a\x93\x01\x08\xeb\xef\xcb\xdb\x07\x12\x12rmnygabg97vclc6t2j\x1aW\x08\xcb\xa3\x82\xef\t\x12*\n\rekdpewaog94vh\x12\x13y0v27lv562vcp3750ys\x18\xbd\xc9\xce\xdf\x01\x1a#\n\x0canfop8t55yqj\x12\x0bncuc6g1ei5s\x18\xa2\xc3\xda\x96\x05 \x01 \xaf\xd3\x91\xf8\x0e(\xe7\x88\xb2\xe6\x042\x12\x08\xd6\x8b\xe5\xe8\t\x10\x9c\xe6\xd9\xbb\n\x18\xbf\xc5\xc4\x95\n\x12\x92\x01\x12c\x08\xf0\xf5\xc7\x95\x0c\x121\n\x06h6one3\x12\x13b9u69meup6pf4zbnp0h\x1a\x12ee9kh4vvr3mzuh8v3q\x1a\t\x08\x01\x12\x05le567"\x11\x08\x01\x12\rk3em2w1gul6j4(\xaa\xef\xa4\xd4\x0e0\xde\x9e\xbf\xd8\x02\x1a+\x08\xe0\xd0\xb0\x82\x0b\x12\x0fi6gsbjkndv7vl4b2\x12\x08\xf1\xaa\xb3\xf6\x0c\x10\xd0\xf3\xb5\xfe\x07\x18\xea\xdd\xdc\xcc\x07\x1a\xe1\x01\x12U\x08\xe2\xe5\xa9\xaf\x0c\x12\'\n\x0fxt7fz93x4r2kz3w\x12\r73svmji06p6pp\x1a\x05aompg\x1a\x0c\x08\x01\x12\x086qps9071"\n\x08\x01\x12\x067s4umf(\x98\xd7\xbe\xa9\t0\xcf\x9a\xc5\x91\x03\x1a\x87\x01\x08\x9a\xf2\x9f\xf3\n\x12\x08a8doolbw\x1aV\x08\xe8\xe2\xc3\xc2\t\x12)\n\x0fwetfc3tiebhljt9\x12\x10xutt4vqg1dmjiki1\x18\x8e\xba\x9d\x9b\x0b\x1a#\n\x088ot4z7pj\x12\x0fmp4hjc7pemsdr7o\x18\x92\xa6\x9a\x84\x02 \x01 \xbf\xc9\xb7\xe9\x07(\xac\xe6\xc4L2\x12\x08\xc0\xda\xfd\xdb\n\x10\x85\xba\xe7\xb6\x06\x18\xef\xea\xe4\xd7\x0f"\xe7\x01\x12f\x08\xca\x8c\xdf\xaf\x03\x129\n\rbrrjk2bywn8hl\x12\x12n1qht346mjqypsf137\x1a\x14h3z2042nbv595s1psxz2\x1a\t\x08\x01\x12\x05djtcu"\x0c\x08\x01\x12\x08i7ijgqqn(\xcd\x82\x83\xe8\x060\xd5\xe6\xae\xad\x0c\x1a}\x08\x91\xc8\xdc\xc8\n\x12\x0e8baar338hcsupa\x1aE\x08\x81\xa1\x9f\xeb\x0b\x12$\n\x108pufg9ls9ex8fru3\x12\nlk31vsj6s6\x18\x97\xb5\xcd\x9e\x02\x1a\x17\n\x05kspeb\x12\x06sc6ffa\x18\x87\xe3\x83\xa9\n \x01 \x8b\xcb\xd8\xf4\n(\x8e\xd9\xe4\xbc\x0e2\x12\x08\xf9\xe9\xc8\xc9\t\x10\xaa\x92\xa8\xcf\r\x18\xeb\xc4\xdd\xd7\x050\x81\x94\xd0\xfc\x04'
[DEBUG] [2020-11-10 10:19:02,233] [utils.py:57] [encode_message] MSG-ENCODE - Message to encode status: ARCHIVE
private: TRUE
id: 15
access_token: "\262"
query_activities {
  bike_query {
    athlete {
      id: 3636723471
      user {
        user_name: "nv6ymm4f"
        first_name: "h3iapk0u"
        last_name: "fv3xpb4fm68620l"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "bny6pello6bh68isqk"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "iclulqe2wurzx26jl"
      }
      weight: 3631135953
      age: 417980981
    }
    segment {
      seg_id: 2071132139
      name: "rmnygabg97vclc6t2j"
      route {
        elevation: 2648740299
        place {
          country: "ekdpewaog94vh"
          city: "y0v27lv562vcp3750ys"
          distance: 468952253
        }
        map {
          start_at_long: "anfop8t55yqj"
          end_at_long: "ncuc6g1ei5s"
          height: 1389797794
          category: A
        }
      }
      elev_high: 4010043823
      elev_low: 1288471655
      hearth_data {
        average_hearth_rate: 2635679190
        min_hearth_rate: 2809557788
        max_hearth_rate: 2729517759
      }
    }
  }
  swim_query {
    athlete {
      id: 3266444016
      user {
        user_name: "h6one3"
        first_name: "b9u69meup6pf4zbnp0h"
        last_name: "ee9kh4vvr3mzuh8v3q"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "le567"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "k3em2w1gul6j4"
      }
      weight: 3934861226
      age: 722456414
    }
    segment {
      seg_id: 2957781088
      name: "i6gsbjkndv7vl4b"
      hearth_data {
        average_hearth_rate: 3469530481
        min_hearth_rate: 2144172496
        max_hearth_rate: 2039951082
      }
    }
  }
  run_query {
    athlete {
      id: 3320476386
      user {
        user_name: "xt7fz93x4r2kz3w"
        first_name: "73svmji06p6pp"
        last_name: "aompg"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "6qps9071"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "7s4umf"
      }
      weight: 2502929304
      age: 842091855
    }
    segment {
      seg_id: 2926049562
      name: "a8doolbw"
      route {
        elevation: 2555441512
        place {
          country: "wetfc3tiebhljt9"
          city: "xutt4vqg1dmjiki1"
          distance: 3009895694
        }
        map {
          start_at_long: "8ot4z7pj"
          end_at_long: "mp4hjc7pemsdr7o"
          height: 545690386
          category: A
        }
      }
      elev_high: 2100159679
      elev_low: 160510764
      hearth_data {
        average_hearth_rate: 2877254976
        min_hearth_rate: 1725553925
        max_hearth_rate: 4210636143
      }
    }
  }
  ski_query {
    athlete {
      id: 905430602
      user {
        user_name: "brrjk2bywn8hl"
        first_name: "n1qht346mjqypsf137"
        last_name: "h3z2042nbv595s1psxz2"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "djtcu"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "i7ijgqqn"
      }
      weight: 1828766029
      age: 3316364117
    }
    segment {
      seg_id: 2836866065
      name: "8baar338hcsupa"
      route {
        elevation: 3177697409
        place {
          country: "8pufg9ls9ex8fru3"
          city: "lk31vsj6s6"
          distance: 601053847
        }
        map {
          start_at_long: "kspeb"
          end_at_long: "sc6ffa"
          height: 2770399623
          category: A
        }
      }
      elev_high: 2929075595
      elev_low: 3885575310
      hearth_data {
        average_hearth_rate: 2570204409
        min_hearth_rate: 3655993642
        max_hearth_rate: 1526162027
      }
    }
  }
}
date: 1335101953

[DEBUG] [2020-11-10 10:19:02,234] [utils.py:62] [encode_message] MSG-DECODE - Message decoded b'x\x03\x00\x00\x08\x01\x10\x0f\x18\x0f"\x01\xb2*\xe6\x06\n\x80\x02\x12h\x08\x8f\xfe\x8f\xc6\r\x12%\n\x08nv6ymm4f\x12\x08h3iapk0u\x1a\x0ffv3xpb4fm68620l\x1a\x16\x08\x01\x12\x12bny6pello6bh68isqk"\x15\x08\x01\x12\x11iclulqe2wurzx26jl(\xd1\xf9\xba\xc3\r0\xb5\xc4\xa7\xc7\x01\x1a\x93\x01\x08\xeb\xef\xcb\xdb\x07\x12\x12rmnygabg97vclc6t2j\x1aW\x08\xcb\xa3\x82\xef\t\x12*\n\rekdpewaog94vh\x12\x13y0v27lv562vcp3750ys\x18\xbd\xc9\xce\xdf\x01\x1a#\n\x0canfop8t55yqj\x12\x0bncuc6g1ei5s\x18\xa2\xc3\xda\x96\x05 \x01 \xaf\xd3\x91\xf8\x0e(\xe7\x88\xb2\xe6\x042\x12\x08\xd6\x8b\xe5\xe8\t\x10\x9c\xe6\xd9\xbb\n\x18\xbf\xc5\xc4\x95\n\x12\x92\x01\x12c\x08\xf0\xf5\xc7\x95\x0c\x121\n\x06h6one3\x12\x13b9u69meup6pf4zbnp0h\x1a\x12ee9kh4vvr3mzuh8v3q\x1a\t\x08\x01\x12\x05le567"\x11\x08\x01\x12\rk3em2w1gul6j4(\xaa\xef\xa4\xd4\x0e0\xde\x9e\xbf\xd8\x02\x1a+\x08\xe0\xd0\xb0\x82\x0b\x12\x0fi6gsbjkndv7vl4b2\x12\x08\xf1\xaa\xb3\xf6\x0c\x10\xd0\xf3\xb5\xfe\x07\x18\xea\xdd\xdc\xcc\x07\x1a\xe1\x01\x12U\x08\xe2\xe5\xa9\xaf\x0c\x12\'\n\x0fxt7fz93x4r2kz3w\x12\r73svmji06p6pp\x1a\x05aompg\x1a\x0c\x08\x01\x12\x086qps9071"\n\x08\x01\x12\x067s4umf(\x98\xd7\xbe\xa9\t0\xcf\x9a\xc5\x91\x03\x1a\x87\x01\x08\x9a\xf2\x9f\xf3\n\x12\x08a8doolbw\x1aV\x08\xe8\xe2\xc3\xc2\t\x12)\n\x0fwetfc3tiebhljt9\x12\x10xutt4vqg1dmjiki1\x18\x8e\xba\x9d\x9b\x0b\x1a#\n\x088ot4z7pj\x12\x0fmp4hjc7pemsdr7o\x18\x92\xa6\x9a\x84\x02 \x01 \xbf\xc9\xb7\xe9\x07(\xac\xe6\xc4L2\x12\x08\xc0\xda\xfd\xdb\n\x10\x85\xba\xe7\xb6\x06\x18\xef\xea\xe4\xd7\x0f"\xe7\x01\x12f\x08\xca\x8c\xdf\xaf\x03\x129\n\rbrrjk2bywn8hl\x12\x12n1qht346mjqypsf137\x1a\x14h3z2042nbv595s1psxz2\x1a\t\x08\x01\x12\x05djtcu"\x0c\x08\x01\x12\x08i7ijgqqn(\xcd\x82\x83\xe8\x060\xd5\xe6\xae\xad\x0c\x1a}\x08\x91\xc8\xdc\xc8\n\x12\x0e8baar338hcsupa\x1aE\x08\x81\xa1\x9f\xeb\x0b\x12$\n\x108pufg9ls9ex8fru3\x12\nlk31vsj6s6\x18\x97\xb5\xcd\x9e\x02\x1a\x17\n\x05kspeb\x12\x06sc6ffa\x18\x87\xe3\x83\xa9\n \x01 \x8b\xcb\xd8\xf4\n(\x8e\xd9\xe4\xbc\x0e2\x12\x08\xf9\xe9\xc8\xc9\t\x10\xaa\x92\xa8\xcf\r\x18\xeb\xc4\xdd\xd7\x050\x81\x94\xd0\xfc\x04'
[DEBUG] [2020-11-10 10:19:02,682] [utils.py:57] [encode_message] MSG-ENCODE - Message to encode status: ARCHIVE
private: TRUE
id: 15
access_token: "\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347"
query_activities {
  bike_query {
    athlete {
      id: 3636723471
      user {
        user_name: "nv6ymm4f"
        first_name: "h3iapk0u"
        last_name: "fv3xpb4fm68620l"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "bny6pello6bh68isqk"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "iclulqe2wurzx26jl"
      }
      weight: 3631135953
      age: 417980981
    }
    segment {
      seg_id: 2071132139
      name: "rmnygabg97vclc6t2j"
      route {
        elevation: 2648740299
        place {
          country: "ekdpewaog94vh"
          city: "y0v27lv562vcp3750ys"
          distance: 468952253
        }
        map {
          start_at_long: "anfop8t55yqj"
          end_at_long: "ncuc6g1ei5s"
          height: 1389797794
          category: A
        }
      }
      elev_high: 4010043823
      elev_low: 1288471655
      hearth_data {
        average_hearth_rate: 2635679190
        min_hearth_rate: 2809557788
        max_hearth_rate: 2729517759
      }
    }
  }
  swim_query {
    athlete {
      id: 3266444016
      user {
        user_name: "h6one3"
        first_name: "b9u69meup6pf4zbnp0h"
        last_name: "ee9kh4vvr3mzuh8v3q"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "le567"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "k3em2w1gul6j4"
      }
      weight: 3934861226
      age: 722456414
    }
    segment {
      seg_id: 2957781088
      name: "i6gsbjkndv7vl4b"
      hearth_data {
        average_hearth_rate: 3469530481
        min_hearth_rate: 2144172496
        max_hearth_rate: 2039951082
      }
    }
  }
  run_query {
    athlete {
      id: 3320476386
      user {
        user_name: "xt7fz93x4r2kz3w"
        first_name: "73svmji06p6pp"
        last_name: "aompg"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "6qps9071"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "7s4umf"
      }
      weight: 2502929304
      age: 842091855
    }
    segment {
      seg_id: 2926049562
      name: "a8doolbw"
      route {
        elevation: 2555441512
        place {
          country: "wetfc3tiebhljt9"
          city: "xutt4vqg1dmjiki1"
          distance: 3009895694
        }
        map {
          start_at_long: "8ot4z7pj"
          end_at_long: "mp4hjc7pemsdr7o"
          height: 545690386
          category: A
        }
      }
      elev_high: 2100159679
      elev_low: 160510764
      hearth_data {
        average_hearth_rate: 2877254976
        min_hearth_rate: 1725553925
        max_hearth_rate: 4210636143
      }
    }
  }
  ski_query {
    athlete {
      id: 905430602
      user {
        user_name: "brrjk2bywn8hl"
        first_name: "n1qht346mjqypsf137"
        last_name: "h3z2042nbv595s1psxz2"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "djtcu"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "i7ijgqqn"
      }
      weight: 1828766029
      age: 3316364117
    }
    segment {
      seg_id: 2836866065
      name: "8baar338hcsupa"
      route {
        elevation: 3177697409
        place {
          country: "8pufg9ls9ex8fru3"
          city: "lk31vsj6s6"
          distance: 601053847
        }
        map {
          start_at_long: "kspeb"
          end_at_long: "sc6ffa"
          height: 2770399623
          category: A
        }
      }
      elev_high: 2929075595
      elev_low: 3885575310
      hearth_data {
        average_hearth_rate: 2570204409
        min_hearth_rate: 3655993642
        max_hearth_rate: 1526162027
      }
    }
  }
}
date: 1335101953

[DEBUG] [2020-11-10 10:19:02,685] [utils.py:62] [encode_message] MSG-DECODE - Message decoded b'x\x06\x00\x00\x08\x01\x10\x0f\x18\x0f"\x80\x06\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7*\xe6\x06\n\x80\x02\x12h\x08\x8f\xfe\x8f\xc6\r\x12%\n\x08nv6ymm4f\x12\x08h3iapk0u\x1a\x0ffv3xpb4fm68620l\x1a\x16\x08\x01\x12\x12bny6pello6bh68isqk"\x15\x08\x01\x12\x11iclulqe2wurzx26jl(\xd1\xf9\xba\xc3\r0\xb5\xc4\xa7\xc7\x01\x1a\x93\x01\x08\xeb\xef\xcb\xdb\x07\x12\x12rmnygabg97vclc6t2j\x1aW\x08\xcb\xa3\x82\xef\t\x12*\n\rekdpewaog94vh\x12\x13y0v27lv562vcp3750ys\x18\xbd\xc9\xce\xdf\x01\x1a#\n\x0canfop8t55yqj\x12\x0bncuc6g1ei5s\x18\xa2\xc3\xda\x96\x05 \x01 \xaf\xd3\x91\xf8\x0e(\xe7\x88\xb2\xe6\x042\x12\x08\xd6\x8b\xe5\xe8\t\x10\x9c\xe6\xd9\xbb\n\x18\xbf\xc5\xc4\x95\n\x12\x92\x01\x12c\x08\xf0\xf5\xc7\x95\x0c\x121\n\x06h6one3\x12\x13b9u69meup6pf4zbnp0h\x1a\x12ee9kh4vvr3mzuh8v3q\x1a\t\x08\x01\x12\x05le567"\x11\x08\x01\x12\rk3em2w1gul6j4(\xaa\xef\xa4\xd4\x0e0\xde\x9e\xbf\xd8\x02\x1a+\x08\xe0\xd0\xb0\x82\x0b\x12\x0fi6gsbjkndv7vl4b2\x12\x08\xf1\xaa\xb3\xf6\x0c\x10\xd0\xf3\xb5\xfe\x07\x18\xea\xdd\xdc\xcc\x07\x1a\xe1\x01\x12U\x08\xe2\xe5\xa9\xaf\x0c\x12\'\n\x0fxt7fz93x4r2kz3w\x12\r73svmji06p6pp\x1a\x05aompg\x1a\x0c\x08\x01\x12\x086qps9071"\n\x08\x01\x12\x067s4umf(\x98\xd7\xbe\xa9\t0\xcf\x9a\xc5\x91\x03\x1a\x87\x01\x08\x9a\xf2\x9f\xf3\n\x12\x08a8doolbw\x1aV\x08\xe8\xe2\xc3\xc2\t\x12)\n\x0fwetfc3tiebhljt9\x12\x10xutt4vqg1dmjiki1\x18\x8e\xba\x9d\x9b\x0b\x1a#\n\x088ot4z7pj\x12\x0fmp4hjc7pemsdr7o\x18\x92\xa6\x9a\x84\x02 \x01 \xbf\xc9\xb7\xe9\x07(\xac\xe6\xc4L2\x12\x08\xc0\xda\xfd\xdb\n\x10\x85\xba\xe7\xb6\x06\x18\xef\xea\xe4\xd7\x0f"\xe7\x01\x12f\x08\xca\x8c\xdf\xaf\x03\x129\n\rbrrjk2bywn8hl\x12\x12n1qht346mjqypsf137\x1a\x14h3z2042nbv595s1psxz2\x1a\t\x08\x01\x12\x05djtcu"\x0c\x08\x01\x12\x08i7ijgqqn(\xcd\x82\x83\xe8\x060\xd5\xe6\xae\xad\x0c\x1a}\x08\x91\xc8\xdc\xc8\n\x12\x0e8baar338hcsupa\x1aE\x08\x81\xa1\x9f\xeb\x0b\x12$\n\x108pufg9ls9ex8fru3\x12\nlk31vsj6s6\x18\x97\xb5\xcd\x9e\x02\x1a\x17\n\x05kspeb\x12\x06sc6ffa\x18\x87\xe3\x83\xa9\n \x01 \x8b\xcb\xd8\xf4\n(\x8e\xd9\xe4\xbc\x0e2\x12\x08\xf9\xe9\xc8\xc9\t\x10\xaa\x92\xa8\xcf\r\x18\xeb\xc4\xdd\xd7\x050\x81\x94\xd0\xfc\x04'
[DEBUG] [2020-11-10 10:19:02,743] [utils.py:57] [encode_message] MSG-ENCODE - Message to encode status: ARCHIVE
private: TRUE
id: 15
access_token: "\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347"
query_activities {
  bike_query {
    athlete {
      id: 3636723471
      user {
        user_name: "nv6ymm4f"
        first_name: "h3iapk0u"
        last_name: "fv3xpb4fm68620l"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "bny6pello6bh68isqk"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "iclulqe2wurzx26jl"
      }
      weight: 3631135953
      age: 417980981
    }
    segment {
      seg_id: 2071132139
      name: "rmnygabg97vclc6t2j"
      route {
        elevation: 2648740299
        place {
          country: "ekdpewaog94vh"
          city: "y0v27lv562vcp3750ys"
          distance: 468952253
        }
        map {
          start_at_long: "anfop8t55yqj"
          end_at_long: "ncuc6g1ei5s"
          height: 1389797794
          category: A
        }
      }
      elev_high: 4010043823
      elev_low: 1288471655
      hearth_data {
        average_hearth_rate: 2635679190
        min_hearth_rate: 2809557788
        max_hearth_rate: 2729517759
      }
    }
  }
  swim_query {
    athlete {
      id: 3266444016
      user {
        user_name: "h6one3"
        first_name: "b9u69meup6pf4zbnp0h"
        last_name: "ee9kh4vvr3mzuh8v3q"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "le567"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "k3em2w1gul6j4"
      }
      weight: 3934861226
      age: 722456414
    }
    segment {
      seg_id: 2957781088
      name: "i6gsbjkndv7vl4b"
      hearth_data {
        average_hearth_rate: 3469530481
        min_hearth_rate: 2144172496
        max_hearth_rate: 2039951082
      }
    }
  }
  run_query {
    athlete {
      id: 3320476386
      user {
        user_name: "xt7fz93x4r2kz3w"
        first_name: "73svmji06p6pp"
        last_name: "aompg"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "6qps9071"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "7s4umf"
      }
      weight: 2502929304
      age: 842091855
    }
    segment {
      seg_id: 2926049562
      name: "a8doolbw"
      route {
        elevation: 2555441512
        place {
          country: "wetfc3tiebhljt9"
          city: "xutt4vqg1dmjiki1"
          distance: 3009895694
        }
        map {
          start_at_long: "8ot4z7pj"
          end_at_long: "mp4hjc7pemsdr7o"
          height: 545690386
          category: A
        }
      }
      elev_high: 2100159679
      elev_low: 160510764
      hearth_data {
        average_hearth_rate: 2877254976
        min_hearth_rate: 1725553925
        max_hearth_rate: 4210636143
      }
    }
  }
  ski_query {
    athlete {
      id: 905430602
      user {
        user_name: "brrjk2bywn8hl"
        first_name: "n1qht346mjqypsf137"
        last_name: "h3z2042nbv595s1psxz2"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "djtcu"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "i7ijgqqn"
      }
      weight: 1828766029
      age: 3316364117
    }
    segment {
      seg_id: 2836866065
      name: "8baar338hcsupa"
      route {
        elevation: 3177697409
        place {
          country: "8pufg9ls9ex8fru3"
          city: "lk31vsj6s6"
          distance: 601053847
        }
        map {
          start_at_long: "kspeb"
          end_at_long: "sc6ffa"
          height: 2770399623
          category: A
        }
      }
      elev_high: 2929075595
      elev_low: 3885575310
      hearth_data {
        average_hearth_rate: 2570204409
        min_hearth_rate: 3655993642
        max_hearth_rate: 1526162027
      }
    }
  }
}
date: 1335101953

[DEBUG] [2020-11-10 10:19:02,798] [utils.py:62] [encode_message] MSG-DECODE - Message decoded b'\xd7\x03\x00\x00\x08\x01\x10\x0f\x18\x0f"`\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7*\xe6\x06\n\x80\x02\x12h\x08\x8f\xfe\x8f\xc6\r\x12%\n\x08nv6ymm4f\x12\x08h3iapk0u\x1a\x0ffv3xpb4fm68620l\x1a\x16\x08\x01\x12\x12bny6pello6bh68isqk"\x15\x08\x01\x12\x11iclulqe2wurzx26jl(\xd1\xf9\xba\xc3\r0\xb5\xc4\xa7\xc7\x01\x1a\x93\x01\x08\xeb\xef\xcb\xdb\x07\x12\x12rmnygabg97vclc6t2j\x1aW\x08\xcb\xa3\x82\xef\t\x12*\n\rekdpewaog94vh\x12\x13y0v27lv562vcp3750ys\x18\xbd\xc9\xce\xdf\x01\x1a#\n\x0canfop8t55yqj\x12\x0bncuc6g1ei5s\x18\xa2\xc3\xda\x96\x05 \x01 \xaf\xd3\x91\xf8\x0e(\xe7\x88\xb2\xe6\x042\x12\x08\xd6\x8b\xe5\xe8\t\x10\x9c\xe6\xd9\xbb\n\x18\xbf\xc5\xc4\x95\n\x12\x92\x01\x12c\x08\xf0\xf5\xc7\x95\x0c\x121\n\x06h6one3\x12\x13b9u69meup6pf4zbnp0h\x1a\x12ee9kh4vvr3mzuh8v3q\x1a\t\x08\x01\x12\x05le567"\x11\x08\x01\x12\rk3em2w1gul6j4(\xaa\xef\xa4\xd4\x0e0\xde\x9e\xbf\xd8\x02\x1a+\x08\xe0\xd0\xb0\x82\x0b\x12\x0fi6gsbjkndv7vl4b2\x12\x08\xf1\xaa\xb3\xf6\x0c\x10\xd0\xf3\xb5\xfe\x07\x18\xea\xdd\xdc\xcc\x07\x1a\xe1\x01\x12U\x08\xe2\xe5\xa9\xaf\x0c\x12\'\n\x0fxt7fz93x4r2kz3w\x12\r73svmji06p6pp\x1a\x05aompg\x1a\x0c\x08\x01\x12\x086qps9071"\n\x08\x01\x12\x067s4umf(\x98\xd7\xbe\xa9\t0\xcf\x9a\xc5\x91\x03\x1a\x87\x01\x08\x9a\xf2\x9f\xf3\n\x12\x08a8doolbw\x1aV\x08\xe8\xe2\xc3\xc2\t\x12)\n\x0fwetfc3tiebhljt9\x12\x10xutt4vqg1dmjiki1\x18\x8e\xba\x9d\x9b\x0b\x1a#\n\x088ot4z7pj\x12\x0fmp4hjc7pemsdr7o\x18\x92\xa6\x9a\x84\x02 \x01 \xbf\xc9\xb7\xe9\x07(\xac\xe6\xc4L2\x12\x08\xc0\xda\xfd\xdb\n\x10\x85\xba\xe7\xb6\x06\x18\xef\xea\xe4\xd7\x0f"\xe7\x01\x12f\x08\xca\x8c\xdf\xaf\x03\x129\n\rbrrjk2bywn8hl\x12\x12n1qht346mjqypsf137\x1a\x14h3z2042nbv595s1psxz2\x1a\t\x08\x01\x12\x05djtcu"\x0c\x08\x01\x12\x08i7ijgqqn(\xcd\x82\x83\xe8\x060\xd5\xe6\xae\xad\x0c\x1a}\x08\x91\xc8\xdc\xc8\n\x12\x0e8baar338hcsupa\x1aE\x08\x81\xa1\x9f\xeb\x0b\x12$\n\x108pufg9ls9ex8fru3\x12\nlk31vsj6s6\x18\x97\xb5\xcd\x9e\x02\x1a\x17\n\x05kspeb\x12\x06sc6ffa\x18\x87\xe3\x83\xa9\n \x01 \x8b\xcb\xd8\xf4\n(\x8e\xd9\xe4\xbc\x0e2\x12\x08\xf9\xe9\xc8\xc9\t\x10\xaa\x92\xa8\xcf\r\x18\xeb\xc4\xdd\xd7\x050\x81\x94\xd0\xfc\x04'
[DEBUG] [2020-11-10 10:19:02,912] [utils.py:57] [encode_message] MSG-ENCODE - Message to encode status: ARCHIVE
private: TRUE
id: 15
access_token: "\236y\347\236y\347\236y\347\236y\347"
query_activities {
  bike_query {
    athlete {
      id: 3636723471
      user {
        user_name: "nv6ymm4f"
        first_name: "h3iapk0u"
        last_name: "fv3xpb4fm68620l"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "bny6pello6bh68isqk"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "iclulqe2wurzx26jl"
      }
      weight: 3631135953
      age: 417980981
    }
    segment {
      seg_id: 2071132139
      name: "rmnygabg97vclc6t2j"
      route {
        elevation: 2648740299
        place {
          country: "ekdpewaog94vh"
          city: "y0v27lv562vcp3750ys"
          distance: 468952253
        }
        map {
          start_at_long: "anfop8t55yqj"
          end_at_long: "ncuc6g1ei5s"
          height: 1389797794
          category: A
        }
      }
      elev_high: 4010043823
      elev_low: 1288471655
      hearth_data {
        average_hearth_rate: 2635679190
        min_hearth_rate: 2809557788
        max_hearth_rate: 2729517759
      }
    }
  }
  swim_query {
    athlete {
      id: 3266444016
      user {
        user_name: "h6one3"
        first_name: "b9u69meup6pf4zbnp0h"
        last_name: "ee9kh4vvr3mzuh8v3q"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "le567"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "k3em2w1gul6j4"
      }
      weight: 3934861226
      age: 722456414
    }
    segment {
      seg_id: 2957781088
      name: "i6gsbjkndv7vl4b"
      hearth_data {
        average_hearth_rate: 3469530481
        min_hearth_rate: 2144172496
        max_hearth_rate: 2039951082
      }
    }
  }
  run_query {
    athlete {
      id: 3320476386
      user {
        user_name: "xt7fz93x4r2kz3w"
        first_name: "73svmji06p6pp"
        last_name: "aompg"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "6qps9071"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "7s4umf"
      }
      weight: 2502929304
      age: 842091855
    }
    segment {
      seg_id: 2926049562
      name: "a8doolbw"
      route {
        elevation: 2555441512
        place {
          country: "wetfc3tiebhljt9"
          city: "xutt4vqg1dmjiki1"
          distance: 3009895694
        }
        map {
          start_at_long: "8ot4z7pj"
          end_at_long: "mp4hjc7pemsdr7o"
          height: 545690386
          category: A
        }
      }
      elev_high: 2100159679
      elev_low: 160510764
      hearth_data {
        average_hearth_rate: 2877254976
        min_hearth_rate: 1725553925
        max_hearth_rate: 4210636143
      }
    }
  }
  ski_query {
    athlete {
      id: 905430602
      user {
        user_name: "brrjk2bywn8hl"
        first_name: "n1qht346mjqypsf137"
        last_name: "h3z2042nbv595s1psxz2"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "djtcu"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "i7ijgqqn"
      }
      weight: 1828766029
      age: 3316364117
    }
    segment {
      seg_id: 2836866065
      name: "8baar338hcsupa"
      route {
        elevation: 3177697409
        place {
          country: "8pufg9ls9ex8fru3"
          city: "lk31vsj6s6"
          distance: 601053847
        }
        map {
          start_at_long: "kspeb"
          end_at_long: "sc6ffa"
          height: 2770399623
          category: A
        }
      }
      elev_high: 2929075595
      elev_low: 3885575310
      hearth_data {
        average_hearth_rate: 2570204409
        min_hearth_rate: 3655993642
        max_hearth_rate: 1526162027
      }
    }
  }
}
date: 1335101953

[DEBUG] [2020-11-10 10:19:02,913] [utils.py:62] [encode_message] MSG-DECODE - Message decoded b'\x83\x03\x00\x00\x08\x01\x10\x0f\x18\x0f"\x0c\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7*\xe6\x06\n\x80\x02\x12h\x08\x8f\xfe\x8f\xc6\r\x12%\n\x08nv6ymm4f\x12\x08h3iapk0u\x1a\x0ffv3xpb4fm68620l\x1a\x16\x08\x01\x12\x12bny6pello6bh68isqk"\x15\x08\x01\x12\x11iclulqe2wurzx26jl(\xd1\xf9\xba\xc3\r0\xb5\xc4\xa7\xc7\x01\x1a\x93\x01\x08\xeb\xef\xcb\xdb\x07\x12\x12rmnygabg97vclc6t2j\x1aW\x08\xcb\xa3\x82\xef\t\x12*\n\rekdpewaog94vh\x12\x13y0v27lv562vcp3750ys\x18\xbd\xc9\xce\xdf\x01\x1a#\n\x0canfop8t55yqj\x12\x0bncuc6g1ei5s\x18\xa2\xc3\xda\x96\x05 \x01 \xaf\xd3\x91\xf8\x0e(\xe7\x88\xb2\xe6\x042\x12\x08\xd6\x8b\xe5\xe8\t\x10\x9c\xe6\xd9\xbb\n\x18\xbf\xc5\xc4\x95\n\x12\x92\x01\x12c\x08\xf0\xf5\xc7\x95\x0c\x121\n\x06h6one3\x12\x13b9u69meup6pf4zbnp0h\x1a\x12ee9kh4vvr3mzuh8v3q\x1a\t\x08\x01\x12\x05le567"\x11\x08\x01\x12\rk3em2w1gul6j4(\xaa\xef\xa4\xd4\x0e0\xde\x9e\xbf\xd8\x02\x1a+\x08\xe0\xd0\xb0\x82\x0b\x12\x0fi6gsbjkndv7vl4b2\x12\x08\xf1\xaa\xb3\xf6\x0c\x10\xd0\xf3\xb5\xfe\x07\x18\xea\xdd\xdc\xcc\x07\x1a\xe1\x01\x12U\x08\xe2\xe5\xa9\xaf\x0c\x12\'\n\x0fxt7fz93x4r2kz3w\x12\r73svmji06p6pp\x1a\x05aompg\x1a\x0c\x08\x01\x12\x086qps9071"\n\x08\x01\x12\x067s4umf(\x98\xd7\xbe\xa9\t0\xcf\x9a\xc5\x91\x03\x1a\x87\x01\x08\x9a\xf2\x9f\xf3\n\x12\x08a8doolbw\x1aV\x08\xe8\xe2\xc3\xc2\t\x12)\n\x0fwetfc3tiebhljt9\x12\x10xutt4vqg1dmjiki1\x18\x8e\xba\x9d\x9b\x0b\x1a#\n\x088ot4z7pj\x12\x0fmp4hjc7pemsdr7o\x18\x92\xa6\x9a\x84\x02 \x01 \xbf\xc9\xb7\xe9\x07(\xac\xe6\xc4L2\x12\x08\xc0\xda\xfd\xdb\n\x10\x85\xba\xe7\xb6\x06\x18\xef\xea\xe4\xd7\x0f"\xe7\x01\x12f\x08\xca\x8c\xdf\xaf\x03\x129\n\rbrrjk2bywn8hl\x12\x12n1qht346mjqypsf137\x1a\x14h3z2042nbv595s1psxz2\x1a\t\x08\x01\x12\x05djtcu"\x0c\x08\x01\x12\x08i7ijgqqn(\xcd\x82\x83\xe8\x060\xd5\xe6\xae\xad\x0c\x1a}\x08\x91\xc8\xdc\xc8\n\x12\x0e8baar338hcsupa\x1aE\x08\x81\xa1\x9f\xeb\x0b\x12$\n\x108pufg9ls9ex8fru3\x12\nlk31vsj6s6\x18\x97\xb5\xcd\x9e\x02\x1a\x17\n\x05kspeb\x12\x06sc6ffa\x18\x87\xe3\x83\xa9\n \x01 \x8b\xcb\xd8\xf4\n(\x8e\xd9\xe4\xbc\x0e2\x12\x08\xf9\xe9\xc8\xc9\t\x10\xaa\x92\xa8\xcf\r\x18\xeb\xc4\xdd\xd7\x050\x81\x94\xd0\xfc\x04'
[DEBUG] [2020-11-10 10:19:02,972] [utils.py:57] [encode_message] MSG-ENCODE - Message to encode status: ARCHIVE
private: TRUE
id: 15
access_token: "\236"
query_activities {
  bike_query {
    athlete {
      id: 3636723471
      user {
        user_name: "nv6ymm4f"
        first_name: "h3iapk0u"
        last_name: "fv3xpb4fm68620l"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "bny6pello6bh68isqk"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "iclulqe2wurzx26jl"
      }
      weight: 3631135953
      age: 417980981
    }
    segment {
      seg_id: 2071132139
      name: "rmnygabg97vclc6t2j"
      route {
        elevation: 2648740299
        place {
          country: "ekdpewaog94vh"
          city: "y0v27lv562vcp3750ys"
          distance: 468952253
        }
        map {
          start_at_long: "anfop8t55yqj"
          end_at_long: "ncuc6g1ei5s"
          height: 1389797794
          category: A
        }
      }
      elev_high: 4010043823
      elev_low: 1288471655
      hearth_data {
        average_hearth_rate: 2635679190
        min_hearth_rate: 2809557788
        max_hearth_rate: 2729517759
      }
    }
  }
  swim_query {
    athlete {
      id: 3266444016
      user {
        user_name: "h6one3"
        first_name: "b9u69meup6pf4zbnp0h"
        last_name: "ee9kh4vvr3mzuh8v3q"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "le567"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "k3em2w1gul6j4"
      }
      weight: 3934861226
      age: 722456414
    }
    segment {
      seg_id: 2957781088
      name: "i6gsbjkndv7vl4b"
      hearth_data {
        average_hearth_rate: 3469530481
        min_hearth_rate: 2144172496
        max_hearth_rate: 2039951082
      }
    }
  }
  run_query {
    athlete {
      id: 3320476386
      user {
        user_name: "xt7fz93x4r2kz3w"
        first_name: "73svmji06p6pp"
        last_name: "aompg"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "6qps9071"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "7s4umf"
      }
      weight: 2502929304
      age: 842091855
    }
    segment {
      seg_id: 2926049562
      name: "a8doolbw"
      route {
        elevation: 2555441512
        place {
          country: "wetfc3tiebhljt9"
          city: "xutt4vqg1dmjiki1"
          distance: 3009895694
        }
        map {
          start_at_long: "8ot4z7pj"
          end_at_long: "mp4hjc7pemsdr7o"
          height: 545690386
          category: A
        }
      }
      elev_high: 2100159679
      elev_low: 160510764
      hearth_data {
        average_hearth_rate: 2877254976
        min_hearth_rate: 1725553925
        max_hearth_rate: 4210636143
      }
    }
  }
  ski_query {
    athlete {
      id: 905430602
      user {
        user_name: "brrjk2bywn8hl"
        first_name: "n1qht346mjqypsf137"
        last_name: "h3z2042nbv595s1psxz2"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "djtcu"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "i7ijgqqn"
      }
      weight: 1828766029
      age: 3316364117
    }
    segment {
      seg_id: 2836866065
      name: "8baar338hcsupa"
      route {
        elevation: 3177697409
        place {
          country: "8pufg9ls9ex8fru3"
          city: "lk31vsj6s6"
          distance: 601053847
        }
        map {
          start_at_long: "kspeb"
          end_at_long: "sc6ffa"
          height: 2770399623
          category: A
        }
      }
      elev_high: 2929075595
      elev_low: 3885575310
      hearth_data {
        average_hearth_rate: 2570204409
        min_hearth_rate: 3655993642
        max_hearth_rate: 1526162027
      }
    }
  }
}
date: 1335101953

[DEBUG] [2020-11-10 10:19:02,972] [utils.py:62] [encode_message] MSG-DECODE - Message decoded b'x\x03\x00\x00\x08\x01\x10\x0f\x18\x0f"\x01\x9e*\xe6\x06\n\x80\x02\x12h\x08\x8f\xfe\x8f\xc6\r\x12%\n\x08nv6ymm4f\x12\x08h3iapk0u\x1a\x0ffv3xpb4fm68620l\x1a\x16\x08\x01\x12\x12bny6pello6bh68isqk"\x15\x08\x01\x12\x11iclulqe2wurzx26jl(\xd1\xf9\xba\xc3\r0\xb5\xc4\xa7\xc7\x01\x1a\x93\x01\x08\xeb\xef\xcb\xdb\x07\x12\x12rmnygabg97vclc6t2j\x1aW\x08\xcb\xa3\x82\xef\t\x12*\n\rekdpewaog94vh\x12\x13y0v27lv562vcp3750ys\x18\xbd\xc9\xce\xdf\x01\x1a#\n\x0canfop8t55yqj\x12\x0bncuc6g1ei5s\x18\xa2\xc3\xda\x96\x05 \x01 \xaf\xd3\x91\xf8\x0e(\xe7\x88\xb2\xe6\x042\x12\x08\xd6\x8b\xe5\xe8\t\x10\x9c\xe6\xd9\xbb\n\x18\xbf\xc5\xc4\x95\n\x12\x92\x01\x12c\x08\xf0\xf5\xc7\x95\x0c\x121\n\x06h6one3\x12\x13b9u69meup6pf4zbnp0h\x1a\x12ee9kh4vvr3mzuh8v3q\x1a\t\x08\x01\x12\x05le567"\x11\x08\x01\x12\rk3em2w1gul6j4(\xaa\xef\xa4\xd4\x0e0\xde\x9e\xbf\xd8\x02\x1a+\x08\xe0\xd0\xb0\x82\x0b\x12\x0fi6gsbjkndv7vl4b2\x12\x08\xf1\xaa\xb3\xf6\x0c\x10\xd0\xf3\xb5\xfe\x07\x18\xea\xdd\xdc\xcc\x07\x1a\xe1\x01\x12U\x08\xe2\xe5\xa9\xaf\x0c\x12\'\n\x0fxt7fz93x4r2kz3w\x12\r73svmji06p6pp\x1a\x05aompg\x1a\x0c\x08\x01\x12\x086qps9071"\n\x08\x01\x12\x067s4umf(\x98\xd7\xbe\xa9\t0\xcf\x9a\xc5\x91\x03\x1a\x87\x01\x08\x9a\xf2\x9f\xf3\n\x12\x08a8doolbw\x1aV\x08\xe8\xe2\xc3\xc2\t\x12)\n\x0fwetfc3tiebhljt9\x12\x10xutt4vqg1dmjiki1\x18\x8e\xba\x9d\x9b\x0b\x1a#\n\x088ot4z7pj\x12\x0fmp4hjc7pemsdr7o\x18\x92\xa6\x9a\x84\x02 \x01 \xbf\xc9\xb7\xe9\x07(\xac\xe6\xc4L2\x12\x08\xc0\xda\xfd\xdb\n\x10\x85\xba\xe7\xb6\x06\x18\xef\xea\xe4\xd7\x0f"\xe7\x01\x12f\x08\xca\x8c\xdf\xaf\x03\x129\n\rbrrjk2bywn8hl\x12\x12n1qht346mjqypsf137\x1a\x14h3z2042nbv595s1psxz2\x1a\t\x08\x01\x12\x05djtcu"\x0c\x08\x01\x12\x08i7ijgqqn(\xcd\x82\x83\xe8\x060\xd5\xe6\xae\xad\x0c\x1a}\x08\x91\xc8\xdc\xc8\n\x12\x0e8baar338hcsupa\x1aE\x08\x81\xa1\x9f\xeb\x0b\x12$\n\x108pufg9ls9ex8fru3\x12\nlk31vsj6s6\x18\x97\xb5\xcd\x9e\x02\x1a\x17\n\x05kspeb\x12\x06sc6ffa\x18\x87\xe3\x83\xa9\n \x01 \x8b\xcb\xd8\xf4\n(\x8e\xd9\xe4\xbc\x0e2\x12\x08\xf9\xe9\xc8\xc9\t\x10\xaa\x92\xa8\xcf\r\x18\xeb\xc4\xdd\xd7\x050\x81\x94\xd0\xfc\x04'
[DEBUG] [2020-11-10 10:19:03,034] [utils.py:57] [encode_message] MSG-ENCODE - Message to encode status: ARCHIVE
private: TRUE
id: 15
access_token: "\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347"
query_activities {
  bike_query {
    athlete {
      id: 3636723471
      user {
        user_name: "nv6ymm4f"
        first_name: "h3iapk0u"
        last_name: "fv3xpb4fm68620l"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "bny6pello6bh68isqk"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "iclulqe2wurzx26jl"
      }
      weight: 3631135953
      age: 417980981
    }
    segment {
      seg_id: 2071132139
      name: "rmnygabg97vclc6t2j"
      route {
        elevation: 2648740299
        place {
          country: "ekdpewaog94vh"
          city: "y0v27lv562vcp3750ys"
          distance: 468952253
        }
        map {
          start_at_long: "anfop8t55yqj"
          end_at_long: "ncuc6g1ei5s"
          height: 1389797794
          category: A
        }
      }
      elev_high: 4010043823
      elev_low: 1288471655
      hearth_data {
        average_hearth_rate: 2635679190
        min_hearth_rate: 2809557788
        max_hearth_rate: 2729517759
      }
    }
  }
  swim_query {
    athlete {
      id: 3266444016
      user {
        user_name: "h6one3"
        first_name: "b9u69meup6pf4zbnp0h"
        last_name: "ee9kh4vvr3mzuh8v3q"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "le567"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "k3em2w1gul6j4"
      }
      weight: 3934861226
      age: 722456414
    }
    segment {
      seg_id: 2957781088
      name: "i6gsbjkndv7vl4b"
      hearth_data {
        average_hearth_rate: 3469530481
        min_hearth_rate: 2144172496
        max_hearth_rate: 2039951082
      }
    }
  }
  run_query {
    athlete {
      id: 3320476386
      user {
        user_name: "xt7fz93x4r2kz3w"
        first_name: "73svmji06p6pp"
        last_name: "aompg"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "6qps9071"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "7s4umf"
      }
      weight: 2502929304
      age: 842091855
    }
    segment {
      seg_id: 2926049562
      name: "a8doolbw"
      route {
        elevation: 2555441512
        place {
          country: "wetfc3tiebhljt9"
          city: "xutt4vqg1dmjiki1"
          distance: 3009895694
        }
        map {
          start_at_long: "8ot4z7pj"
          end_at_long: "mp4hjc7pemsdr7o"
          height: 545690386
          category: A
        }
      }
      elev_high: 2100159679
      elev_low: 160510764
      hearth_data {
        average_hearth_rate: 2877254976
        min_hearth_rate: 1725553925
        max_hearth_rate: 4210636143
      }
    }
  }
  ski_query {
    athlete {
      id: 905430602
      user {
        user_name: "brrjk2bywn8hl"
        first_name: "n1qht346mjqypsf137"
        last_name: "h3z2042nbv595s1psxz2"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "djtcu"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "i7ijgqqn"
      }
      weight: 1828766029
      age: 3316364117
    }
    segment {
      seg_id: 2836866065
      name: "8baar338hcsupa"
      route {
        elevation: 3177697409
        place {
          country: "8pufg9ls9ex8fru3"
          city: "lk31vsj6s6"
          distance: 601053847
        }
        map {
          start_at_long: "kspeb"
          end_at_long: "sc6ffa"
          height: 2770399623
          category: A
        }
      }
      elev_high: 2929075595
      elev_low: 3885575310
      hearth_data {
        average_hearth_rate: 2570204409
        min_hearth_rate: 3655993642
        max_hearth_rate: 1526162027
      }
    }
  }
}
date: 1335101953

[DEBUG] [2020-11-10 10:19:03,035] [utils.py:62] [encode_message] MSG-DECODE - Message decoded b'x\x06\x00\x00\x08\x01\x10\x0f\x18\x0f"\x80\x06\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7*\xe6\x06\n\x80\x02\x12h\x08\x8f\xfe\x8f\xc6\r\x12%\n\x08nv6ymm4f\x12\x08h3iapk0u\x1a\x0ffv3xpb4fm68620l\x1a\x16\x08\x01\x12\x12bny6pello6bh68isqk"\x15\x08\x01\x12\x11iclulqe2wurzx26jl(\xd1\xf9\xba\xc3\r0\xb5\xc4\xa7\xc7\x01\x1a\x93\x01\x08\xeb\xef\xcb\xdb\x07\x12\x12rmnygabg97vclc6t2j\x1aW\x08\xcb\xa3\x82\xef\t\x12*\n\rekdpewaog94vh\x12\x13y0v27lv562vcp3750ys\x18\xbd\xc9\xce\xdf\x01\x1a#\n\x0canfop8t55yqj\x12\x0bncuc6g1ei5s\x18\xa2\xc3\xda\x96\x05 \x01 \xaf\xd3\x91\xf8\x0e(\xe7\x88\xb2\xe6\x042\x12\x08\xd6\x8b\xe5\xe8\t\x10\x9c\xe6\xd9\xbb\n\x18\xbf\xc5\xc4\x95\n\x12\x92\x01\x12c\x08\xf0\xf5\xc7\x95\x0c\x121\n\x06h6one3\x12\x13b9u69meup6pf4zbnp0h\x1a\x12ee9kh4vvr3mzuh8v3q\x1a\t\x08\x01\x12\x05le567"\x11\x08\x01\x12\rk3em2w1gul6j4(\xaa\xef\xa4\xd4\x0e0\xde\x9e\xbf\xd8\x02\x1a+\x08\xe0\xd0\xb0\x82\x0b\x12\x0fi6gsbjkndv7vl4b2\x12\x08\xf1\xaa\xb3\xf6\x0c\x10\xd0\xf3\xb5\xfe\x07\x18\xea\xdd\xdc\xcc\x07\x1a\xe1\x01\x12U\x08\xe2\xe5\xa9\xaf\x0c\x12\'\n\x0fxt7fz93x4r2kz3w\x12\r73svmji06p6pp\x1a\x05aompg\x1a\x0c\x08\x01\x12\x086qps9071"\n\x08\x01\x12\x067s4umf(\x98\xd7\xbe\xa9\t0\xcf\x9a\xc5\x91\x03\x1a\x87\x01\x08\x9a\xf2\x9f\xf3\n\x12\x08a8doolbw\x1aV\x08\xe8\xe2\xc3\xc2\t\x12)\n\x0fwetfc3tiebhljt9\x12\x10xutt4vqg1dmjiki1\x18\x8e\xba\x9d\x9b\x0b\x1a#\n\x088ot4z7pj\x12\x0fmp4hjc7pemsdr7o\x18\x92\xa6\x9a\x84\x02 \x01 \xbf\xc9\xb7\xe9\x07(\xac\xe6\xc4L2\x12\x08\xc0\xda\xfd\xdb\n\x10\x85\xba\xe7\xb6\x06\x18\xef\xea\xe4\xd7\x0f"\xe7\x01\x12f\x08\xca\x8c\xdf\xaf\x03\x129\n\rbrrjk2bywn8hl\x12\x12n1qht346mjqypsf137\x1a\x14h3z2042nbv595s1psxz2\x1a\t\x08\x01\x12\x05djtcu"\x0c\x08\x01\x12\x08i7ijgqqn(\xcd\x82\x83\xe8\x060\xd5\xe6\xae\xad\x0c\x1a}\x08\x91\xc8\xdc\xc8\n\x12\x0e8baar338hcsupa\x1aE\x08\x81\xa1\x9f\xeb\x0b\x12$\n\x108pufg9ls9ex8fru3\x12\nlk31vsj6s6\x18\x97\xb5\xcd\x9e\x02\x1a\x17\n\x05kspeb\x12\x06sc6ffa\x18\x87\xe3\x83\xa9\n \x01 \x8b\xcb\xd8\xf4\n(\x8e\xd9\xe4\xbc\x0e2\x12\x08\xf9\xe9\xc8\xc9\t\x10\xaa\x92\xa8\xcf\r\x18\xeb\xc4\xdd\xd7\x050\x81\x94\xd0\xfc\x04'
[DEBUG] [2020-11-10 10:19:03,110] [utils.py:57] [encode_message] MSG-ENCODE - Message to encode status: ARCHIVE
private: TRUE
id: 15
access_token: "\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347\236y\347"
query_activities {
  bike_query {
    athlete {
      id: 3636723471
      user {
        user_name: "nv6ymm4f"
        first_name: "h3iapk0u"
        last_name: "fv3xpb4fm68620l"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "bny6pello6bh68isqk"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "iclulqe2wurzx26jl"
      }
      weight: 3631135953
      age: 417980981
    }
    segment {
      seg_id: 2071132139
      name: "rmnygabg97vclc6t2j"
      route {
        elevation: 2648740299
        place {
          country: "ekdpewaog94vh"
          city: "y0v27lv562vcp3750ys"
          distance: 468952253
        }
        map {
          start_at_long: "anfop8t55yqj"
          end_at_long: "ncuc6g1ei5s"
          height: 1389797794
          category: A
        }
      }
      elev_high: 4010043823
      elev_low: 1288471655
      hearth_data {
        average_hearth_rate: 2635679190
        min_hearth_rate: 2809557788
        max_hearth_rate: 2729517759
      }
    }
  }
  swim_query {
    athlete {
      id: 3266444016
      user {
        user_name: "h6one3"
        first_name: "b9u69meup6pf4zbnp0h"
        last_name: "ee9kh4vvr3mzuh8v3q"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "le567"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "k3em2w1gul6j4"
      }
      weight: 3934861226
      age: 722456414
    }
    segment {
      seg_id: 2957781088
      name: "i6gsbjkndv7vl4b"
      hearth_data {
        average_hearth_rate: 3469530481
        min_hearth_rate: 2144172496
        max_hearth_rate: 2039951082
      }
    }
  }
  run_query {
    athlete {
      id: 3320476386
      user {
        user_name: "xt7fz93x4r2kz3w"
        first_name: "73svmji06p6pp"
        last_name: "aompg"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "6qps9071"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "7s4umf"
      }
      weight: 2502929304
      age: 842091855
    }
    segment {
      seg_id: 2926049562
      name: "a8doolbw"
      route {
        elevation: 2555441512
        place {
          country: "wetfc3tiebhljt9"
          city: "xutt4vqg1dmjiki1"
          distance: 3009895694
        }
        map {
          start_at_long: "8ot4z7pj"
          end_at_long: "mp4hjc7pemsdr7o"
          height: 545690386
          category: A
        }
      }
      elev_high: 2100159679
      elev_low: 160510764
      hearth_data {
        average_hearth_rate: 2877254976
        min_hearth_rate: 1725553925
        max_hearth_rate: 4210636143
      }
    }
  }
  ski_query {
    athlete {
      id: 905430602
      user {
        user_name: "brrjk2bywn8hl"
        first_name: "n1qht346mjqypsf137"
        last_name: "h3z2042nbv595s1psxz2"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "djtcu"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "i7ijgqqn"
      }
      weight: 1828766029
      age: 3316364117
    }
    segment {
      seg_id: 2836866065
      name: "8baar338hcsupa"
      route {
        elevation: 3177697409
        place {
          country: "8pufg9ls9ex8fru3"
          city: "lk31vsj6s6"
          distance: 601053847
        }
        map {
          start_at_long: "kspeb"
          end_at_long: "sc6ffa"
          height: 2770399623
          category: A
        }
      }
      elev_high: 2929075595
      elev_low: 3885575310
      hearth_data {
        average_hearth_rate: 2570204409
        min_hearth_rate: 3655993642
        max_hearth_rate: 1526162027
      }
    }
  }
}
date: 1335101953

[DEBUG] [2020-11-10 10:19:03,111] [utils.py:62] [encode_message] MSG-DECODE - Message decoded b'\xd7\x03\x00\x00\x08\x01\x10\x0f\x18\x0f"`\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7*\xe6\x06\n\x80\x02\x12h\x08\x8f\xfe\x8f\xc6\r\x12%\n\x08nv6ymm4f\x12\x08h3iapk0u\x1a\x0ffv3xpb4fm68620l\x1a\x16\x08\x01\x12\x12bny6pello6bh68isqk"\x15\x08\x01\x12\x11iclulqe2wurzx26jl(\xd1\xf9\xba\xc3\r0\xb5\xc4\xa7\xc7\x01\x1a\x93\x01\x08\xeb\xef\xcb\xdb\x07\x12\x12rmnygabg97vclc6t2j\x1aW\x08\xcb\xa3\x82\xef\t\x12*\n\rekdpewaog94vh\x12\x13y0v27lv562vcp3750ys\x18\xbd\xc9\xce\xdf\x01\x1a#\n\x0canfop8t55yqj\x12\x0bncuc6g1ei5s\x18\xa2\xc3\xda\x96\x05 \x01 \xaf\xd3\x91\xf8\x0e(\xe7\x88\xb2\xe6\x042\x12\x08\xd6\x8b\xe5\xe8\t\x10\x9c\xe6\xd9\xbb\n\x18\xbf\xc5\xc4\x95\n\x12\x92\x01\x12c\x08\xf0\xf5\xc7\x95\x0c\x121\n\x06h6one3\x12\x13b9u69meup6pf4zbnp0h\x1a\x12ee9kh4vvr3mzuh8v3q\x1a\t\x08\x01\x12\x05le567"\x11\x08\x01\x12\rk3em2w1gul6j4(\xaa\xef\xa4\xd4\x0e0\xde\x9e\xbf\xd8\x02\x1a+\x08\xe0\xd0\xb0\x82\x0b\x12\x0fi6gsbjkndv7vl4b2\x12\x08\xf1\xaa\xb3\xf6\x0c\x10\xd0\xf3\xb5\xfe\x07\x18\xea\xdd\xdc\xcc\x07\x1a\xe1\x01\x12U\x08\xe2\xe5\xa9\xaf\x0c\x12\'\n\x0fxt7fz93x4r2kz3w\x12\r73svmji06p6pp\x1a\x05aompg\x1a\x0c\x08\x01\x12\x086qps9071"\n\x08\x01\x12\x067s4umf(\x98\xd7\xbe\xa9\t0\xcf\x9a\xc5\x91\x03\x1a\x87\x01\x08\x9a\xf2\x9f\xf3\n\x12\x08a8doolbw\x1aV\x08\xe8\xe2\xc3\xc2\t\x12)\n\x0fwetfc3tiebhljt9\x12\x10xutt4vqg1dmjiki1\x18\x8e\xba\x9d\x9b\x0b\x1a#\n\x088ot4z7pj\x12\x0fmp4hjc7pemsdr7o\x18\x92\xa6\x9a\x84\x02 \x01 \xbf\xc9\xb7\xe9\x07(\xac\xe6\xc4L2\x12\x08\xc0\xda\xfd\xdb\n\x10\x85\xba\xe7\xb6\x06\x18\xef\xea\xe4\xd7\x0f"\xe7\x01\x12f\x08\xca\x8c\xdf\xaf\x03\x129\n\rbrrjk2bywn8hl\x12\x12n1qht346mjqypsf137\x1a\x14h3z2042nbv595s1psxz2\x1a\t\x08\x01\x12\x05djtcu"\x0c\x08\x01\x12\x08i7ijgqqn(\xcd\x82\x83\xe8\x060\xd5\xe6\xae\xad\x0c\x1a}\x08\x91\xc8\xdc\xc8\n\x12\x0e8baar338hcsupa\x1aE\x08\x81\xa1\x9f\xeb\x0b\x12$\n\x108pufg9ls9ex8fru3\x12\nlk31vsj6s6\x18\x97\xb5\xcd\x9e\x02\x1a\x17\n\x05kspeb\x12\x06sc6ffa\x18\x87\xe3\x83\xa9\n \x01 \x8b\xcb\xd8\xf4\n(\x8e\xd9\xe4\xbc\x0e2\x12\x08\xf9\xe9\xc8\xc9\t\x10\xaa\x92\xa8\xcf\r\x18\xeb\xc4\xdd\xd7\x050\x81\x94\xd0\xfc\x04'
[DEBUG] [2020-11-10 10:19:03,168] [utils.py:57] [encode_message] MSG-ENCODE - Message to encode status: ARCHIVE
private: TRUE
id: 15
access_token: "\236y\347\236y\347\236y\347\236y\347"
query_activities {
  bike_query {
    athlete {
      id: 3636723471
      user {
        user_name: "nv6ymm4f"
        first_name: "h3iapk0u"
        last_name: "fv3xpb4fm68620l"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "bny6pello6bh68isqk"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "iclulqe2wurzx26jl"
      }
      weight: 3631135953
      age: 417980981
    }
    segment {
      seg_id: 2071132139
      name: "rmnygabg97vclc6t2j"
      route {
        elevation: 2648740299
        place {
          country: "ekdpewaog94vh"
          city: "y0v27lv562vcp3750ys"
          distance: 468952253
        }
        map {
          start_at_long: "anfop8t55yqj"
          end_at_long: "ncuc6g1ei5s"
          height: 1389797794
          category: A
        }
      }
      elev_high: 4010043823
      elev_low: 1288471655
      hearth_data {
        average_hearth_rate: 2635679190
        min_hearth_rate: 2809557788
        max_hearth_rate: 2729517759
      }
    }
  }
  swim_query {
    athlete {
      id: 3266444016
      user {
        user_name: "h6one3"
        first_name: "b9u69meup6pf4zbnp0h"
        last_name: "ee9kh4vvr3mzuh8v3q"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "le567"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "k3em2w1gul6j4"
      }
      weight: 3934861226
      age: 722456414
    }
    segment {
      seg_id: 2957781088
      name: "i6gsbjkndv7vl4b"
      hearth_data {
        average_hearth_rate: 3469530481
        min_hearth_rate: 2144172496
        max_hearth_rate: 2039951082
      }
    }
  }
  run_query {
    athlete {
      id: 3320476386
      user {
        user_name: "xt7fz93x4r2kz3w"
        first_name: "73svmji06p6pp"
        last_name: "aompg"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "6qps9071"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "7s4umf"
      }
      weight: 2502929304
      age: 842091855
    }
    segment {
      seg_id: 2926049562
      name: "a8doolbw"
      route {
        elevation: 2555441512
        place {
          country: "wetfc3tiebhljt9"
          city: "xutt4vqg1dmjiki1"
          distance: 3009895694
        }
        map {
          start_at_long: "8ot4z7pj"
          end_at_long: "mp4hjc7pemsdr7o"
          height: 545690386
          category: A
        }
      }
      elev_high: 2100159679
      elev_low: 160510764
      hearth_data {
        average_hearth_rate: 2877254976
        min_hearth_rate: 1725553925
        max_hearth_rate: 4210636143
      }
    }
  }
  ski_query {
    athlete {
      id: 905430602
      user {
        user_name: "brrjk2bywn8hl"
        first_name: "n1qht346mjqypsf137"
        last_name: "h3z2042nbv595s1psxz2"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "djtcu"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "i7ijgqqn"
      }
      weight: 1828766029
      age: 3316364117
    }
    segment {
      seg_id: 2836866065
      name: "8baar338hcsupa"
      route {
        elevation: 3177697409
        place {
          country: "8pufg9ls9ex8fru3"
          city: "lk31vsj6s6"
          distance: 601053847
        }
        map {
          start_at_long: "kspeb"
          end_at_long: "sc6ffa"
          height: 2770399623
          category: A
        }
      }
      elev_high: 2929075595
      elev_low: 3885575310
      hearth_data {
        average_hearth_rate: 2570204409
        min_hearth_rate: 3655993642
        max_hearth_rate: 1526162027
      }
    }
  }
}
date: 1335101953

[DEBUG] [2020-11-10 10:19:03,169] [utils.py:62] [encode_message] MSG-DECODE - Message decoded b'\x83\x03\x00\x00\x08\x01\x10\x0f\x18\x0f"\x0c\x9ey\xe7\x9ey\xe7\x9ey\xe7\x9ey\xe7*\xe6\x06\n\x80\x02\x12h\x08\x8f\xfe\x8f\xc6\r\x12%\n\x08nv6ymm4f\x12\x08h3iapk0u\x1a\x0ffv3xpb4fm68620l\x1a\x16\x08\x01\x12\x12bny6pello6bh68isqk"\x15\x08\x01\x12\x11iclulqe2wurzx26jl(\xd1\xf9\xba\xc3\r0\xb5\xc4\xa7\xc7\x01\x1a\x93\x01\x08\xeb\xef\xcb\xdb\x07\x12\x12rmnygabg97vclc6t2j\x1aW\x08\xcb\xa3\x82\xef\t\x12*\n\rekdpewaog94vh\x12\x13y0v27lv562vcp3750ys\x18\xbd\xc9\xce\xdf\x01\x1a#\n\x0canfop8t55yqj\x12\x0bncuc6g1ei5s\x18\xa2\xc3\xda\x96\x05 \x01 \xaf\xd3\x91\xf8\x0e(\xe7\x88\xb2\xe6\x042\x12\x08\xd6\x8b\xe5\xe8\t\x10\x9c\xe6\xd9\xbb\n\x18\xbf\xc5\xc4\x95\n\x12\x92\x01\x12c\x08\xf0\xf5\xc7\x95\x0c\x121\n\x06h6one3\x12\x13b9u69meup6pf4zbnp0h\x1a\x12ee9kh4vvr3mzuh8v3q\x1a\t\x08\x01\x12\x05le567"\x11\x08\x01\x12\rk3em2w1gul6j4(\xaa\xef\xa4\xd4\x0e0\xde\x9e\xbf\xd8\x02\x1a+\x08\xe0\xd0\xb0\x82\x0b\x12\x0fi6gsbjkndv7vl4b2\x12\x08\xf1\xaa\xb3\xf6\x0c\x10\xd0\xf3\xb5\xfe\x07\x18\xea\xdd\xdc\xcc\x07\x1a\xe1\x01\x12U\x08\xe2\xe5\xa9\xaf\x0c\x12\'\n\x0fxt7fz93x4r2kz3w\x12\r73svmji06p6pp\x1a\x05aompg\x1a\x0c\x08\x01\x12\x086qps9071"\n\x08\x01\x12\x067s4umf(\x98\xd7\xbe\xa9\t0\xcf\x9a\xc5\x91\x03\x1a\x87\x01\x08\x9a\xf2\x9f\xf3\n\x12\x08a8doolbw\x1aV\x08\xe8\xe2\xc3\xc2\t\x12)\n\x0fwetfc3tiebhljt9\x12\x10xutt4vqg1dmjiki1\x18\x8e\xba\x9d\x9b\x0b\x1a#\n\x088ot4z7pj\x12\x0fmp4hjc7pemsdr7o\x18\x92\xa6\x9a\x84\x02 \x01 \xbf\xc9\xb7\xe9\x07(\xac\xe6\xc4L2\x12\x08\xc0\xda\xfd\xdb\n\x10\x85\xba\xe7\xb6\x06\x18\xef\xea\xe4\xd7\x0f"\xe7\x01\x12f\x08\xca\x8c\xdf\xaf\x03\x129\n\rbrrjk2bywn8hl\x12\x12n1qht346mjqypsf137\x1a\x14h3z2042nbv595s1psxz2\x1a\t\x08\x01\x12\x05djtcu"\x0c\x08\x01\x12\x08i7ijgqqn(\xcd\x82\x83\xe8\x060\xd5\xe6\xae\xad\x0c\x1a}\x08\x91\xc8\xdc\xc8\n\x12\x0e8baar338hcsupa\x1aE\x08\x81\xa1\x9f\xeb\x0b\x12$\n\x108pufg9ls9ex8fru3\x12\nlk31vsj6s6\x18\x97\xb5\xcd\x9e\x02\x1a\x17\n\x05kspeb\x12\x06sc6ffa\x18\x87\xe3\x83\xa9\n \x01 \x8b\xcb\xd8\xf4\n(\x8e\xd9\xe4\xbc\x0e2\x12\x08\xf9\xe9\xc8\xc9\t\x10\xaa\x92\xa8\xcf\r\x18\xeb\xc4\xdd\xd7\x050\x81\x94\xd0\xfc\x04'
[DEBUG] [2020-11-10 10:19:03,234] [utils.py:57] [encode_message] MSG-ENCODE - Message to encode status: ARCHIVE
private: TRUE
id: 15
access_token: "\236"
query_activities {
  bike_query {
    athlete {
      id: 3636723471
      user {
        user_name: "nv6ymm4f"
        first_name: "h3iapk0u"
        last_name: "fv3xpb4fm68620l"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "bny6pello6bh68isqk"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "iclulqe2wurzx26jl"
      }
      weight: 3631135953
      age: 417980981
    }
    segment {
      seg_id: 2071132139
      name: "rmnygabg97vclc6t2j"
      route {
        elevation: 2648740299
        place {
          country: "ekdpewaog94vh"
          city: "y0v27lv562vcp3750ys"
          distance: 468952253
        }
        map {
          start_at_long: "anfop8t55yqj"
          end_at_long: "ncuc6g1ei5s"
          height: 1389797794
          category: A
        }
      }
      elev_high: 4010043823
      elev_low: 1288471655
      hearth_data {
        average_hearth_rate: 2635679190
        min_hearth_rate: 2809557788
        max_hearth_rate: 2729517759
      }
    }
  }
  swim_query {
    athlete {
      id: 3266444016
      user {
        user_name: "h6one3"
        first_name: "b9u69meup6pf4zbnp0h"
        last_name: "ee9kh4vvr3mzuh8v3q"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "le567"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "k3em2w1gul6j4"
      }
      weight: 3934861226
      age: 722456414
    }
    segment {
      seg_id: 2957781088
      name: "i6gsbjkndv7vl4b"
      hearth_data {
        average_hearth_rate: 3469530481
        min_hearth_rate: 2144172496
        max_hearth_rate: 2039951082
      }
    }
  }
  run_query {
    athlete {
      id: 3320476386
      user {
        user_name: "xt7fz93x4r2kz3w"
        first_name: "73svmji06p6pp"
        last_name: "aompg"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "6qps9071"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "7s4umf"
      }
      weight: 2502929304
      age: 842091855
    }
    segment {
      seg_id: 2926049562
      name: "a8doolbw"
      route {
        elevation: 2555441512
        place {
          country: "wetfc3tiebhljt9"
          city: "xutt4vqg1dmjiki1"
          distance: 3009895694
        }
        map {
          start_at_long: "8ot4z7pj"
          end_at_long: "mp4hjc7pemsdr7o"
          height: 545690386
          category: A
        }
      }
      elev_high: 2100159679
      elev_low: 160510764
      hearth_data {
        average_hearth_rate: 2877254976
        min_hearth_rate: 1725553925
        max_hearth_rate: 4210636143
      }
    }
  }
  ski_query {
    athlete {
      id: 905430602
      user {
        user_name: "brrjk2bywn8hl"
        first_name: "n1qht346mjqypsf137"
        last_name: "h3z2042nbv595s1psxz2"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "djtcu"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "i7ijgqqn"
      }
      weight: 1828766029
      age: 3316364117
    }
    segment {
      seg_id: 2836866065
      name: "8baar338hcsupa"
      route {
        elevation: 3177697409
        place {
          country: "8pufg9ls9ex8fru3"
          city: "lk31vsj6s6"
          distance: 601053847
        }
        map {
          start_at_long: "kspeb"
          end_at_long: "sc6ffa"
          height: 2770399623
          category: A
        }
      }
      elev_high: 2929075595
      elev_low: 3885575310
      hearth_data {
        average_hearth_rate: 2570204409
        min_hearth_rate: 3655993642
        max_hearth_rate: 1526162027
      }
    }
  }
}
date: 1335101953

[DEBUG] [2020-11-10 10:19:03,235] [utils.py:62] [encode_message] MSG-DECODE - Message decoded b'x\x03\x00\x00\x08\x01\x10\x0f\x18\x0f"\x01\x9e*\xe6\x06\n\x80\x02\x12h\x08\x8f\xfe\x8f\xc6\r\x12%\n\x08nv6ymm4f\x12\x08h3iapk0u\x1a\x0ffv3xpb4fm68620l\x1a\x16\x08\x01\x12\x12bny6pello6bh68isqk"\x15\x08\x01\x12\x11iclulqe2wurzx26jl(\xd1\xf9\xba\xc3\r0\xb5\xc4\xa7\xc7\x01\x1a\x93\x01\x08\xeb\xef\xcb\xdb\x07\x12\x12rmnygabg97vclc6t2j\x1aW\x08\xcb\xa3\x82\xef\t\x12*\n\rekdpewaog94vh\x12\x13y0v27lv562vcp3750ys\x18\xbd\xc9\xce\xdf\x01\x1a#\n\x0canfop8t55yqj\x12\x0bncuc6g1ei5s\x18\xa2\xc3\xda\x96\x05 \x01 \xaf\xd3\x91\xf8\x0e(\xe7\x88\xb2\xe6\x042\x12\x08\xd6\x8b\xe5\xe8\t\x10\x9c\xe6\xd9\xbb\n\x18\xbf\xc5\xc4\x95\n\x12\x92\x01\x12c\x08\xf0\xf5\xc7\x95\x0c\x121\n\x06h6one3\x12\x13b9u69meup6pf4zbnp0h\x1a\x12ee9kh4vvr3mzuh8v3q\x1a\t\x08\x01\x12\x05le567"\x11\x08\x01\x12\rk3em2w1gul6j4(\xaa\xef\xa4\xd4\x0e0\xde\x9e\xbf\xd8\x02\x1a+\x08\xe0\xd0\xb0\x82\x0b\x12\x0fi6gsbjkndv7vl4b2\x12\x08\xf1\xaa\xb3\xf6\x0c\x10\xd0\xf3\xb5\xfe\x07\x18\xea\xdd\xdc\xcc\x07\x1a\xe1\x01\x12U\x08\xe2\xe5\xa9\xaf\x0c\x12\'\n\x0fxt7fz93x4r2kz3w\x12\r73svmji06p6pp\x1a\x05aompg\x1a\x0c\x08\x01\x12\x086qps9071"\n\x08\x01\x12\x067s4umf(\x98\xd7\xbe\xa9\t0\xcf\x9a\xc5\x91\x03\x1a\x87\x01\x08\x9a\xf2\x9f\xf3\n\x12\x08a8doolbw\x1aV\x08\xe8\xe2\xc3\xc2\t\x12)\n\x0fwetfc3tiebhljt9\x12\x10xutt4vqg1dmjiki1\x18\x8e\xba\x9d\x9b\x0b\x1a#\n\x088ot4z7pj\x12\x0fmp4hjc7pemsdr7o\x18\x92\xa6\x9a\x84\x02 \x01 \xbf\xc9\xb7\xe9\x07(\xac\xe6\xc4L2\x12\x08\xc0\xda\xfd\xdb\n\x10\x85\xba\xe7\xb6\x06\x18\xef\xea\xe4\xd7\x0f"\xe7\x01\x12f\x08\xca\x8c\xdf\xaf\x03\x129\n\rbrrjk2bywn8hl\x12\x12n1qht346mjqypsf137\x1a\x14h3z2042nbv595s1psxz2\x1a\t\x08\x01\x12\x05djtcu"\x0c\x08\x01\x12\x08i7ijgqqn(\xcd\x82\x83\xe8\x060\xd5\xe6\xae\xad\x0c\x1a}\x08\x91\xc8\xdc\xc8\n\x12\x0e8baar338hcsupa\x1aE\x08\x81\xa1\x9f\xeb\x0b\x12$\n\x108pufg9ls9ex8fru3\x12\nlk31vsj6s6\x18\x97\xb5\xcd\x9e\x02\x1a\x17\n\x05kspeb\x12\x06sc6ffa\x18\x87\xe3\x83\xa9\n \x01 \x8b\xcb\xd8\xf4\n(\x8e\xd9\xe4\xbc\x0e2\x12\x08\xf9\xe9\xc8\xc9\t\x10\xaa\x92\xa8\xcf\r\x18\xeb\xc4\xdd\xd7\x050\x81\x94\xd0\xfc\x04'
[DEBUG] [2020-11-10 10:19:04,689] [utils.py:57] [encode_message] MSG-ENCODE - Message to encode status: ARCHIVE
private: TRUE
id: 15
access_token: "\266\213\234\207\373f\247\362\210M6"
query_activities {
  bike_query {
    athlete {
      id: 3636723471
      user {
        user_name: "nv6ymm4f"
        first_name: "h3iapk0u"
        last_name: "fv3xpb4fm68620l"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "bny6pello6bh68isqk"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "iclulqe2wurzx26jl"
      }
      weight: 3631135953
      age: 417980981
    }
    segment {
      seg_id: 2071132139
      name: "rmnygabg97vclc6t2j"
      route {
        elevation: 2648740299
        place {
          country: "ekdpewaog94vh"
          city: "y0v27lv562vcp3750ys"
          distance: 468952253
        }
        map {
          start_at_long: "anfop8t55yqj"
          end_at_long: "ncuc6g1ei5s"
          height: 1389797794
          category: A
        }
      }
      elev_high: 4010043823
      elev_low: 1288471655
      hearth_data {
        average_hearth_rate: 2635679190
        min_hearth_rate: 2809557788
        max_hearth_rate: 2729517759
      }
    }
  }
  swim_query {
    athlete {
      id: 3266444016
      user {
        user_name: "h6one3"
        first_name: "b9u69meup6pf4zbnp0h"
        last_name: "ee9kh4vvr3mzuh8v3q"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "le567"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "k3em2w1gul6j4"
      }
      weight: 3934861226
      age: 722456414
    }
    segment {
      seg_id: 2957781088
      name: "i6gsbjkndv7vl4b"
      hearth_data {
        average_hearth_rate: 3469530481
        min_hearth_rate: 2144172496
        max_hearth_rate: 2039951082
      }
    }
  }
  run_query {
    athlete {
      id: 3320476386
      user {
        user_name: "xt7fz93x4r2kz3w"
        first_name: "73svmji06p6pp"
        last_name: "aompg"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "6qps9071"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "7s4umf"
      }
      weight: 2502929304
      age: 842091855
    }
    segment {
      seg_id: 2926049562
      name: "a8doolbw"
      route {
        elevation: 2555441512
        place {
          country: "wetfc3tiebhljt9"
          city: "xutt4vqg1dmjiki1"
          distance: 3009895694
        }
        map {
          start_at_long: "8ot4z7pj"
          end_at_long: "mp4hjc7pemsdr7o"
          height: 545690386
          category: A
        }
      }
      elev_high: 2100159679
      elev_low: 160510764
      hearth_data {
        average_hearth_rate: 2877254976
        min_hearth_rate: 1725553925
        max_hearth_rate: 4210636143
      }
    }
  }
  ski_query {
    athlete {
      id: 905430602
      user {
        user_name: "brrjk2bywn8hl"
        first_name: "n1qht346mjqypsf137"
        last_name: "h3z2042nbv595s1psxz2"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "djtcu"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "i7ijgqqn"
      }
      weight: 1828766029
      age: 3316364117
    }
    segment {
      seg_id: 2836866065
      name: "8baar338hcsupa"
      route {
        elevation: 3177697409
        place {
          country: "8pufg9ls9ex8fru3"
          city: "lk31vsj6s6"
          distance: 601053847
        }
        map {
          start_at_long: "kspeb"
          end_at_long: "sc6ffa"
          height: 2770399623
          category: A
        }
      }
      elev_high: 2929075595
      elev_low: 3885575310
      hearth_data {
        average_hearth_rate: 2570204409
        min_hearth_rate: 3655993642
        max_hearth_rate: 1526162027
      }
    }
  }
}
date: 1335101953

[DEBUG] [2020-11-10 10:19:04,691] [utils.py:62] [encode_message] MSG-DECODE - Message decoded b'\x82\x03\x00\x00\x08\x01\x10\x0f\x18\x0f"\x0b\xb6\x8b\x9c\x87\xfbf\xa7\xf2\x88M6*\xe6\x06\n\x80\x02\x12h\x08\x8f\xfe\x8f\xc6\r\x12%\n\x08nv6ymm4f\x12\x08h3iapk0u\x1a\x0ffv3xpb4fm68620l\x1a\x16\x08\x01\x12\x12bny6pello6bh68isqk"\x15\x08\x01\x12\x11iclulqe2wurzx26jl(\xd1\xf9\xba\xc3\r0\xb5\xc4\xa7\xc7\x01\x1a\x93\x01\x08\xeb\xef\xcb\xdb\x07\x12\x12rmnygabg97vclc6t2j\x1aW\x08\xcb\xa3\x82\xef\t\x12*\n\rekdpewaog94vh\x12\x13y0v27lv562vcp3750ys\x18\xbd\xc9\xce\xdf\x01\x1a#\n\x0canfop8t55yqj\x12\x0bncuc6g1ei5s\x18\xa2\xc3\xda\x96\x05 \x01 \xaf\xd3\x91\xf8\x0e(\xe7\x88\xb2\xe6\x042\x12\x08\xd6\x8b\xe5\xe8\t\x10\x9c\xe6\xd9\xbb\n\x18\xbf\xc5\xc4\x95\n\x12\x92\x01\x12c\x08\xf0\xf5\xc7\x95\x0c\x121\n\x06h6one3\x12\x13b9u69meup6pf4zbnp0h\x1a\x12ee9kh4vvr3mzuh8v3q\x1a\t\x08\x01\x12\x05le567"\x11\x08\x01\x12\rk3em2w1gul6j4(\xaa\xef\xa4\xd4\x0e0\xde\x9e\xbf\xd8\x02\x1a+\x08\xe0\xd0\xb0\x82\x0b\x12\x0fi6gsbjkndv7vl4b2\x12\x08\xf1\xaa\xb3\xf6\x0c\x10\xd0\xf3\xb5\xfe\x07\x18\xea\xdd\xdc\xcc\x07\x1a\xe1\x01\x12U\x08\xe2\xe5\xa9\xaf\x0c\x12\'\n\x0fxt7fz93x4r2kz3w\x12\r73svmji06p6pp\x1a\x05aompg\x1a\x0c\x08\x01\x12\x086qps9071"\n\x08\x01\x12\x067s4umf(\x98\xd7\xbe\xa9\t0\xcf\x9a\xc5\x91\x03\x1a\x87\x01\x08\x9a\xf2\x9f\xf3\n\x12\x08a8doolbw\x1aV\x08\xe8\xe2\xc3\xc2\t\x12)\n\x0fwetfc3tiebhljt9\x12\x10xutt4vqg1dmjiki1\x18\x8e\xba\x9d\x9b\x0b\x1a#\n\x088ot4z7pj\x12\x0fmp4hjc7pemsdr7o\x18\x92\xa6\x9a\x84\x02 \x01 \xbf\xc9\xb7\xe9\x07(\xac\xe6\xc4L2\x12\x08\xc0\xda\xfd\xdb\n\x10\x85\xba\xe7\xb6\x06\x18\xef\xea\xe4\xd7\x0f"\xe7\x01\x12f\x08\xca\x8c\xdf\xaf\x03\x129\n\rbrrjk2bywn8hl\x12\x12n1qht346mjqypsf137\x1a\x14h3z2042nbv595s1psxz2\x1a\t\x08\x01\x12\x05djtcu"\x0c\x08\x01\x12\x08i7ijgqqn(\xcd\x82\x83\xe8\x060\xd5\xe6\xae\xad\x0c\x1a}\x08\x91\xc8\xdc\xc8\n\x12\x0e8baar338hcsupa\x1aE\x08\x81\xa1\x9f\xeb\x0b\x12$\n\x108pufg9ls9ex8fru3\x12\nlk31vsj6s6\x18\x97\xb5\xcd\x9e\x02\x1a\x17\n\x05kspeb\x12\x06sc6ffa\x18\x87\xe3\x83\xa9\n \x01 \x8b\xcb\xd8\xf4\n(\x8e\xd9\xe4\xbc\x0e2\x12\x08\xf9\xe9\xc8\xc9\t\x10\xaa\x92\xa8\xcf\r\x18\xeb\xc4\xdd\xd7\x050\x81\x94\xd0\xfc\x04'
[DEBUG] [2020-11-10 10:19:04,844] [utils.py:57] [encode_message] MSG-ENCODE - Message to encode status: ARCHIVE
private: TRUE
id: 15
access_token: "\266\213\234\207\373f\247\362\210M6"
query_activities {
  bike_query {
    athlete {
      id: 3636723471
      user {
        user_name: "nv6ymm4f"
        first_name: "h3iapk0u"
        last_name: "fv3xpb4fm68620l"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "bny6pello6bh68isqk"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "iclulqe2wurzx26jl"
      }
      weight: 3631135953
      age: 417980981
    }
    segment {
      seg_id: 2071132139
      name: "rmnygabg97vclc6t2j"
      route {
        elevation: 2648740299
        place {
          country: "ekdpewaog94vh"
          city: "y0v27lv562vcp3750ys"
          distance: 468952253
        }
        map {
          start_at_long: "anfop8t55yqj"
          end_at_long: "ncuc6g1ei5s"
          height: 1389797794
          category: A
        }
      }
      elev_high: 4010043823
      elev_low: 1288471655
      hearth_data {
        average_hearth_rate: 2635679190
        min_hearth_rate: 2809557788
        max_hearth_rate: 2729517759
      }
    }
  }
  swim_query {
    athlete {
      id: 3266444016
      user {
        user_name: "h6one3"
        first_name: "b9u69meup6pf4zbnp0h"
        last_name: "ee9kh4vvr3mzuh8v3q"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "le567"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "k3em2w1gul6j4"
      }
      weight: 3934861226
      age: 722456414
    }
    segment {
      seg_id: 2957781088
      name: "i6gsbjkndv7vl4b"
      hearth_data {
        average_hearth_rate: 3469530481
        min_hearth_rate: 2144172496
        max_hearth_rate: 2039951082
      }
    }
  }
  run_query {
    athlete {
      id: 3320476386
      user {
        user_name: "xt7fz93x4r2kz3w"
        first_name: "73svmji06p6pp"
        last_name: "aompg"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "6qps9071"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "7s4umf"
      }
      weight: 2502929304
      age: 842091855
    }
    segment {
      seg_id: 2926049562
      name: "a8doolbw"
      route {
        elevation: 2555441512
        place {
          country: "wetfc3tiebhljt9"
          city: "xutt4vqg1dmjiki1"
          distance: 3009895694
        }
        map {
          start_at_long: "8ot4z7pj"
          end_at_long: "mp4hjc7pemsdr7o"
          height: 545690386
          category: A
        }
      }
      elev_high: 2100159679
      elev_low: 160510764
      hearth_data {
        average_hearth_rate: 2877254976
        min_hearth_rate: 1725553925
        max_hearth_rate: 4210636143
      }
    }
  }
  ski_query {
    athlete {
      id: 905430602
      user {
        user_name: "brrjk2bywn8hl"
        first_name: "n1qht346mjqypsf137"
        last_name: "h3z2042nbv595s1psxz2"
      }
      bikes {
        bike_brand: AVENTON
        bike_name: "djtcu"
      }
      shoes {
        shoe_brand: NIKE
        shoe_name: "i7ijgqqn"
      }
      weight: 1828766029
      age: 3316364117
    }
    segment {
      seg_id: 2836866065
      name: "8baar338hcsupa"
      route {
        elevation: 3177697409
        place {
          country: "8pufg9ls9ex8fru3"
          city: "lk31vsj6s6"
          distance: 601053847
        }
        map {
          start_at_long: "kspeb"
          end_at_long: "sc6ffa"
          height: 2770399623
          category: A
        }
      }
      elev_high: 2929075595
      elev_low: 3885575310
      hearth_data {
        average_hearth_rate: 2570204409
        min_hearth_rate: 3655993642
        max_hearth_rate: 1526162027
      }
    }
  }
}
date: 1335101953

[DEBUG] [2020-11-10 10:19:04,845] [utils.py:62] [encode_message] MSG-DECODE - Message decoded b'\x82\x03\x00\x00\x08\x01\x10\x0f\x18\x0f"\x0b\xb6\x8b\x9c\x87\xfbf\xa7\xf2\x88M6*\xe6\x06\n\x80\x02\x12h\x08\x8f\xfe\x8f\xc6\r\x12%\n\x08nv6ymm4f\x12\x08h3iapk0u\x1a\x0ffv3xpb4fm68620l\x1a\x16\x08\x01\x12\x12bny6pello6bh68isqk"\x15\x08\x01\x12\x11iclulqe2wurzx26jl(\xd1\xf9\xba\xc3\r0\xb5\xc4\xa7\xc7\x01\x1a\x93\x01\x08\xeb\xef\xcb\xdb\x07\x12\x12rmnygabg97vclc6t2j\x1aW\x08\xcb\xa3\x82\xef\t\x12*\n\rekdpewaog94vh\x12\x13y0v27lv562vcp3750ys\x18\xbd\xc9\xce\xdf\x01\x1a#\n\x0canfop8t55yqj\x12\x0bncuc6g1ei5s\x18\xa2\xc3\xda\x96\x05 \x01 \xaf\xd3\x91\xf8\x0e(\xe7\x88\xb2\xe6\x042\x12\x08\xd6\x8b\xe5\xe8\t\x10\x9c\xe6\xd9\xbb\n\x18\xbf\xc5\xc4\x95\n\x12\x92\x01\x12c\x08\xf0\xf5\xc7\x95\x0c\x121\n\x06h6one3\x12\x13b9u69meup6pf4zbnp0h\x1a\x12ee9kh4vvr3mzuh8v3q\x1a\t\x08\x01\x12\x05le567"\x11\x08\x01\x12\rk3em2w1gul6j4(\xaa\xef\xa4\xd4\x0e0\xde\x9e\xbf\xd8\x02\x1a+\x08\xe0\xd0\xb0\x82\x0b\x12\x0fi6gsbjkndv7vl4b2\x12\x08\xf1\xaa\xb3\xf6\x0c\x10\xd0\xf3\xb5\xfe\x07\x18\xea\xdd\xdc\xcc\x07\x1a\xe1\x01\x12U\x08\xe2\xe5\xa9\xaf\x0c\x12\'\n\x0fxt7fz93x4r2kz3w\x12\r73svmji06p6pp\x1a\x05aompg\x1a\x0c\x08\x01\x12\x086qps9071"\n\x08\x01\x12\x067s4umf(\x98\xd7\xbe\xa9\t0\xcf\x9a\xc5\x91\x03\x1a\x87\x01\x08\x9a\xf2\x9f\xf3\n\x12\x08a8doolbw\x1aV\x08\xe8\xe2\xc3\xc2\t\x12)\n\x0fwetfc3tiebhljt9\x12\x10xutt4vqg1dmjiki1\x18\x8e\xba\x9d\x9b\x0b\x1a#\n\x088ot4z7pj\x12\x0fmp4hjc7pemsdr7o\x18\x92\xa6\x9a\x84\x02 \x01 \xbf\xc9\xb7\xe9\x07(\xac\xe6\xc4L2\x12\x08\xc0\xda\xfd\xdb\n\x10\x85\xba\xe7\xb6\x06\x18\xef\xea\xe4\xd7\x0f"\xe7\x01\x12f\x08\xca\x8c\xdf\xaf\x03\x129\n\rbrrjk2bywn8hl\x12\x12n1qht346mjqypsf137\x1a\x14h3z2042nbv595s1psxz2\x1a\t\x08\x01\x12\x05djtcu"\x0c\x08\x01\x12\x08i7ijgqqn(\xcd\x82\x83\xe8\x060\xd5\xe6\xae\xad\x0c\x1a}\x08\x91\xc8\xdc\xc8\n\x12\x0e8baar338hcsupa\x1aE\x08\x81\xa1\x9f\xeb\x0b\x12$\n\x108pufg9ls9ex8fru3\x12\nlk31vsj6s6\x18\x97\xb5\xcd\x9e\x02\x1a\x17\n\x05kspeb\x12\x06sc6ffa\x18\x87\xe3\x83\xa9\n \x01 \x8b\xcb\xd8\xf4\n(\x8e\xd9\xe4\xbc\x0e2\x12\x08\xf9\xe9\xc8\xc9\t\x10\xaa\x92\xa8\xcf\r\x18\xeb\xc4\xdd\xd7\x050\x81\x94\xd0\xfc\x04'
[INFO] [2020-11-10 10:19:05,166] [runner.py:135] [run] [10:19:05] Flush cache...
[INFO] [2020-11-10 10:19:05,166] [runner.py:136] [run] [10:19:05] Rename kitty related log files...
[INFO] [2020-11-10 10:19:05,169] [search_file.py:40] [search_file] CONF - file dir: /Users/balazsattila/Env/fuzz_framework/framework/bin/c4486bec-2335-11eb-b01e-a45e60d02ac5-log
[INFO] [2020-11-10 10:19:05,170] [search_file.py:40] [search_file] CONF - file dir: /Users/balazsattila/Env/fuzz_framework/framework/bin/c4486bec-2335-11eb-b01e-a45e60d02ac5-log
